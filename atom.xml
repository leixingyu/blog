<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tech Art Learning</title>
  
  
  <link href="https://www.xingyulei.com/atom.xml" rel="self"/>
  
  <link href="https://www.xingyulei.com/"/>
  <updated>2022-12-11T16:13:41.301Z</updated>
  <id>https://www.xingyulei.com/</id>
  
  <author>
    <name>Xingyu Lei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>My Personal Technical Notes</title>
    <link href="https://www.xingyulei.com/post/general-tech-note/"/>
    <id>https://www.xingyulei.com/post/general-tech-note/</id>
    <published>2022-12-11T05:00:00.000Z</published>
    <updated>2022-12-11T16:13:41.301Z</updated>
    
    <content type="html"><![CDATA[<h1 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h1><p>Greetings!</p><p>Here you can find smaller notes I collected over the years that are tooshort to make individual blogs.</p><p>Enjoy!</p><h1 id=""><a class="markdownIt-Anchor" href="#"></a> </h1><blockquote><p><strong>Important:</strong> You may need to wait a couple of seconds for the embedded page to respond</p></blockquote><iframe src="https://v1.embednotion.com/embed/3b7dd7e58e564fa1899c9b7a54ef20ac"></iframe>  <style>  iframe { width: 100%; height: 1000px; border: 2px solid #ccc; border-radius: 10px; padding: none; }  </style>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h1&gt;
&lt;p&gt;Greetings!&lt;/p&gt;
&lt;p&gt;Here you can find smalle</summary>
      
    
    
    
    <category term="tech summary" scheme="https://www.xingyulei.com/categories/tech-summary/"/>
    
    
    <category term="general" scheme="https://www.xingyulei.com/tags/general/"/>
    
  </entry>
  
  <entry>
    <title>Three ways of using Python Unreal Command Line</title>
    <link href="https://www.xingyulei.com/post/ue-commandline-python/"/>
    <id>https://www.xingyulei.com/post/ue-commandline-python/</id>
    <published>2022-11-06T04:00:00.000Z</published>
    <updated>2022-11-08T14:47:35.430Z</updated>
    
    <content type="html"><![CDATA[<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>The Unreal official documentation has two simple examples to run Python throughcommandline, one being Commandlet: a headless mode without even opening the Editor,the other one being the Full Editor mode which has Unreal Editor fully opened and loaded.</p><p>Do you know there’s actually a “third” way?And today, I’ll discuss my experience and preferences of using all of them.</p><h2 id="commandlet"><a class="markdownIt-Anchor" href="#commandlet"></a> Commandlet</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UnrealEditor.exe &quot;C:\projects\MyProject.uproject&quot; -run&#x3D;pythonscript -script&#x3D;&quot;c:\\my_script.py&quot;</span><br></pre></td></tr></table></figure><p>The “Commandlet” mode runs Unreal in headless mode without editor opened,this means no asset and level loading (but we have access to the <code>unreal</code> python module).</p><p>This is great if we want to write to the project (for example, importing/creatingassets), but it’s not going to work well for reading from the project.</p><h2 id="full-editor"><a class="markdownIt-Anchor" href="#full-editor"></a> Full Editor</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UnrealEditor.exe &quot;C:\projects\MyProject.uproject&quot; -ExecutePythonScript&#x3D;&quot;c:\my_script.py&quot;</span><br></pre></td></tr></table></figure><p>Using “Full Editor” mode, we now have everything loaded in engine and are able to doalmost all operations, the trade-off being there’sa longer loading time, and also the editor will be opened.</p><p>Note that at this point, once the python script finishes executing, the editorand the command prompt window will close automatically.</p><h3 id="ui"><a class="markdownIt-Anchor" href="#ui"></a> UI</h3><p>If we ever needs to create a simple UI that launches from the “Full Editor” mode,we could do something like this in the python script.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> unreal</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">global</span> app</span><br><span class="line">    <span class="keyword">global</span> window</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> QtWidgets.QApplication.instance():</span><br><span class="line">        app = QtWidgets.QApplication(sys.argv)</span><br><span class="line"></span><br><span class="line">    window = TestWindow()</span><br><span class="line">    unreal.parent_external_window_to_slate(</span><br><span class="line">        window.winId().__init__(),</span><br><span class="line">        unreal.SlateParentWindowSearchMethod.ACTIVE_WINDOW</span><br><span class="line">    )</span><br><span class="line">    window.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><p>Note that we are using <code>sys.exit(app.exec_())</code> to prevent the UI beingimmediately destroyed. This does mean the Qt event loop would take overthe main thread which renders Unreal editor non-interactable untilfunction calls hands over the process to Unreal.</p><p>However, I do find in rare cases(for example: when launching Movie Render Queue through commandline),either the UI still hangs the editor with the operation,or (without the UI) the editor just exit immediately after the operation is being called.Either of this will not let the render to finish.</p><p>This brings me to method number three that perfectly solves this issue.</p><h2 id="init-cmd"><a class="markdownIt-Anchor" href="#init-cmd"></a> Init Cmd</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UnrealEditor.exe &quot;C:\projects\MyProject.uproject&quot; -ExecCmds&#x3D;&quot;py c:&#x2F;my_script.py&quot;</span><br></pre></td></tr></table></figure><p>This method, although not present on Unreal Engine’s wiki, it is mentionedin the FAQ by the official Epic Games account on Linear Content Creation.</p><blockquote><p>For Automation/Testing you can pass the following to keep the editor running.</p><p>–ExecCmds=“py PathToPyFile”</p><p>Once you are done, you can call:unreal.SystemLibrary.execute_console_command(None,“QUIT_EDITOR”)</p></blockquote><p>This is almost like running a specified startup python script in Unreal,and the editor is fully interactable when the script is running.</p><p>The editor exit automatically when calling “QUIT_EDITOR”, if running a script with UI, we can hook upto the <code>closeEvent()</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">closeEvent</span>(<span class="params">self, event</span>):</span></span><br><span class="line">    QtWidgets.QMainWindow.closeEvent(event)</span><br><span class="line">    unreal.SystemLibrary.execute_console_command(<span class="literal">None</span>, <span class="string">&quot;QUIT_EDITOR&quot;</span>)</span><br></pre></td></tr></table></figure><p>to override <code>closeEvent()</code> in instance-level instead of class-level, see <a href="https://www.xingyulei.com/post/qt-template/#unreal-engine">here</a></p><h2 id="logging"><a class="markdownIt-Anchor" href="#logging"></a> Logging</h2><p>To generate output from the commandline we can add two arguments: <code>-stdout</code>and <code>-FullStdOutLogOutput</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">call</span>(<span class="params">python_script</span>):</span></span><br><span class="line">    command = [</span><br><span class="line">        UNREAL_EXE,</span><br><span class="line">        UPROJECT,</span><br><span class="line">        <span class="string">&quot;-ExecCmds=py &#123;&#125;&quot;</span>.<span class="built_in">format</span>(python_script),</span><br><span class="line">        <span class="string">&quot;-stdout&quot;</span>,</span><br><span class="line">        <span class="string">&quot;-FullStdOutLogOutput&quot;</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    proc = subprocess.Popen(</span><br><span class="line">        command,</span><br><span class="line">        stdout=subprocess.PIPE,</span><br><span class="line">        stderr=subprocess.PIPE,</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> proc.communicate()</span><br></pre></td></tr></table></figure><p>and we can filter out only the log generated from Python as such</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">output = call(<span class="string">&#x27;python_script.py&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> <span class="built_in">str</span>(output).split(<span class="string">r&#x27;\r\n&#x27;</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;LogPython&#x27;</span> <span class="keyword">in</span> line:</span><br><span class="line">        print(line)</span><br></pre></td></tr></table></figure><h2 id="environment"><a class="markdownIt-Anchor" href="#environment"></a> Environment</h2><p>Another thing to consider is that, running in batch mode can mess up our tools and start up scripts.due to it being a different environment. We might want to re-configure our environmentwhich you can do like such:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">env = os.environ.copy()</span><br><span class="line">env[<span class="string">&#x27;FOO&#x27;</span>] = <span class="string">&#x27;BAR&#x27;</span></span><br><span class="line"><span class="comment"># more env ...</span></span><br><span class="line"></span><br><span class="line">proc = subprocess.Popen(</span><br><span class="line">        command,</span><br><span class="line">        stdout=subprocess.PIPE,</span><br><span class="line">        stderr=subprocess.PIPE,</span><br><span class="line">        env=env</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2><p><a href="https://docs.unrealengine.com/5.0/en-US/scripting-the-unreal-editor-using-python/">Unreal Doc - Scripting the Unreal Editor Using Python</a></p><p><a href="https://dev.epicgames.com/community/learning/courses/Oex/unreal-engine-technical-guide-to-linear-content-creation-faqs/XvO9/unreal-engine-common-questions">Unreal Forum - Unreal Engine Technical Guide to Linear Content Creation FAQs</a></p><p><a href="https://docs.adamrehn.com/ue4cli/descriptor-commands/run">Adamrehn Docs - UE4CLI</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h2&gt;
&lt;p&gt;The Unreal official documentation has two </summary>
      
    
    
    
    <category term="learning log" scheme="https://www.xingyulei.com/categories/learning-log/"/>
    
    
    <category term="unreal" scheme="https://www.xingyulei.com/tags/unreal/"/>
    
    <category term="python" scheme="https://www.xingyulei.com/tags/python/"/>
    
    <category term="batch" scheme="https://www.xingyulei.com/tags/batch/"/>
    
  </entry>
  
  <entry>
    <title>Transformation Matrix Conversion between DCCs</title>
    <link href="https://www.xingyulei.com/post/math-xform-conversion/"/>
    <id>https://www.xingyulei.com/post/math-xform-conversion/</id>
    <published>2022-10-22T04:00:00.000Z</published>
    <updated>2022-10-30T03:22:18.768Z</updated>
    
    <content type="html"><![CDATA[<h1 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h1><p>Have you noticed the different transform values when one asset is importedto a different package?</p><p>When we do .fbx importing and exporting, the plugin does this conversion forus. FBX is very reliable and hassle-free, but how does the math works?</p><blockquote><p><strong>Important:</strong> Before continuing, I highly recommend reading these previous posts</p><ul><li><a href="https://www.xingyulei.com/post/math-euler-gimbal/">Euler Angles</a></li><li><a href="https://www.xingyulei.com/post/math-change-of-basis/">Change of Basis</a></li></ul></blockquote><h2 id="transformation-value"><a class="markdownIt-Anchor" href="#transformation-value"></a> Transformation Value</h2><p>To demonstrate the different transform between DCCs,here I have some <em>‘axis’</em> object placed in Maya, Unity and Unreal.</p><img src="https://i.imgur.com/6z0QneT.jpg" alt="3in1" width="800px"><p>When inspecting the ‘axis’ located on the top-right, the transformationvalues are seen as follow:</p><table style="width: 800px">  <tr>    <th></th>    <th>translation</th>    <th>rotation</th>    <th>scale</th>  </tr>  <tr>    <td>Maya</td>    <td>x: -1.31, y: 0.33, z: 0.19</td>    <td>x: -335, y: -12, z: 98</td>    <td>x: 1, y: 1, z: 1</td></tr>  <tr>    <td>Unity</td>    <td>x: 1.31, y: 0.33, z: 0.19</td>    <td>x: 7, y: -27, z: -102</td>    <td>x: 1, y: 1, z: 1</td>  </tr>  <tr>    <td>Unreal</td>    <td>x: -1.31, y: 0.19, z: 0.33</td>    <td>x: 149, y: 75, z: 123</td>    <td>x: 1, y: 1, z: 1</td>  </tr></table><br/><p>Usually, for translation and scale there is a pattern to be found, usuallythe operation involves swapping values between axes, and flipping them. Forrotation, however, the values don’t seem to have connections between oneanother, so how can we compute them?</p><p>The fundamental reason for all of this is that even though all DCCs use aCartesian coordinate system, they have different <strong>axis direction</strong> and <strong>rotation order</strong>.</p><h1 id="methods-overview"><a class="markdownIt-Anchor" href="#methods-overview"></a> Methods Overview</h1><p>The method I use are all fundamental matrix calculation.</p><ol><li><p>From the source package, retrieve translation, rotation and scale (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mrow><mi>s</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi></mrow></msub><mo separator="true">,</mo><msub><mi>r</mi><mrow><mi>s</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi></mrow></msub><mo separator="true">,</mo><msub><mi>s</mi><mrow><mi>s</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">t_{source}, r_{source}, s_{source}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)and compose a transformation matrix: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>s</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">M_{source}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>Convert the transformation matrix to the target software coordinate systemusing change of basis operation: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></msub><mo>=</mo><msub><mi>M</mi><mrow><mi>c</mi><mi>o</mi><mi>b</mi></mrow></msub><mo>∗</mo><msub><mi>M</mi><mrow><mi>s</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi></mrow></msub><mo>∗</mo><msup><msub><mi>M</mi><mrow><mi>c</mi><mi>o</mi><mi>b</mi></mrow></msub><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">M_{target} = M_{cob} * M_{source} * {M_{cob}}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0373379999999999em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.887338em;"><span style="top:-3.1362300000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>Decompose the transformation matrix: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">M_{target}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> and re-order thetarget translation, rotation and scale value such (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mrow><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>r</mi><mrow><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>s</mi><mrow><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">t_{target}, r_{target}, s_{target}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9011879999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>)</p></li></ol><h2 id="composition-and-de-composition"><a class="markdownIt-Anchor" href="#composition-and-de-composition"></a> Composition and De-composition</h2><p>It is helpful to re-visit the transform matrix calculation, but we will lateruse a math library to handle them.</p><ul><li><p><strong>Translation</strong>:</p><p>a translating along <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>=</mo><mo>&lt;</mo><msub><mi>d</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>d</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>d</mi><mi>z</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">t = &lt;d_x, d_y, d_z&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> can be thought as multiplying bythe translation matrix:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>l</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>d</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>d</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>d</mi><mi>z</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M_{translation} = \begin{bmatrix}1 &amp; 0 &amp; 0 &amp; d_x\\0 &amp; 1 &amp; 0 &amp; d_y\\0 &amp; 0 &amp; 1 &amp; d_z\\0 &amp; 0 &amp; 0 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80204em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><strong>Scale</strong>:</p><p>a scaling upon <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>=</mo><mo>&lt;</mo><msub><mi>β</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>β</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>β</mi><mi>z</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">s = &lt;\beta_x, \beta_y, \beta_z&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> can be thought as multiplyingby the scale matrix:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>e</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>β</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>β</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>β</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M_{scale} = \begin{bmatrix}\beta_x &amp; 0 &amp; 0 &amp; 0\\0 &amp; \beta_y &amp; 0 &amp; 0\\0 &amp; 0 &amp; \beta_z &amp; 0\\0 &amp; 0 &amp; 0 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80204em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><strong>Shear</strong>: good to know, but not very commonly use;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>h</mi><mo>=</mo><mo>&lt;</mo><mi>s</mi><msub><mi>h</mi><mi>x</mi></msub><mo separator="true">,</mo><mi>s</mi><msub><mi>h</mi><mi>y</mi></msub><mo separator="true">,</mo><mi>s</mi><msub><mi>h</mi><mi>z</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">sh = &lt;sh_x, sh_y, sh_z&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> represents shear along <em>x</em>, <em>y</em> and <em>z</em> axis;</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>s</mi><msub><mi>h</mi><mi>x</mi></msub></mrow></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>h</mi><mrow><mi>y</mi><mi>x</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>h</mi><mrow><mi>z</mi><mi>x</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M_{sh_x} = \begin{bmatrix}1 &amp; 0 &amp; 0 &amp; 0\\h_{yx} &amp; 1 &amp; 0 &amp; 0\\h_{zx} &amp; 0 &amp; 1 &amp; 0\\0 &amp; 0 &amp; 0 &amp; 1 \\\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80204em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>s</mi><msub><mi>h</mi><mi>y</mi></msub></mrow></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>h</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>h</mi><mrow><mi>z</mi><mi>y</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M_{sh_y} = \begin{bmatrix}1 &amp; h_{xy} &amp; 0 &amp; 0\\0 &amp; 1 &amp; 0 &amp; 0\\0 &amp; h_{zy} &amp; 1 &amp; 0\\0 &amp; 0 &amp; 0 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03065em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80204em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>s</mi><msub><mi>h</mi><mi>z</mi></msub></mrow></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>h</mi><mrow><mi>x</mi><mi>z</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>h</mi><mrow><mi>y</mi><mi>z</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M_{sh_z} = \begin{bmatrix}1 &amp; 0 &amp; h_{xz} &amp; 0\\0 &amp; 1 &amp; h_{yz} &amp; 0\\0 &amp; 0 &amp; 1 &amp; 0\\0 &amp; 0 &amp; 0 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80204em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></p><blockquote><img src="https://i.stack.imgur.com/90xMH.jpg" alt="shear" width="400px"><p>A <strong>2D</strong> shearing operation</p></blockquote></li><li><p><strong>Rotation</strong>: a rotation can be thought as a combination of shearing and scaling,a visual demonstration can be found <a href="https://youtu.be/E3Phj6J287o">here</a>.</p><p>A rotation along <em>x</em>, <em>y</em> and <em>z</em> axis can then be represented as such:</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><msub><mi>r</mi><mi>x</mi></msub></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M_{r_x} = \begin{bmatrix}1 &amp; 0 &amp; 0 &amp; 0\\0 &amp; cos\theta &amp; -sin\theta &amp; 0\\0 &amp; sin\theta &amp; cos\theta &amp; 0\\0 &amp; 0 &amp; 0 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80204em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><msub><mi>r</mi><mi>y</mi></msub></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M_{r_y} = \begin{bmatrix}cos\theta &amp; 0 &amp; sin\theta &amp; 0\\0 &amp; 1 &amp; 0 &amp; 0\\-sin\theta &amp; 0 &amp; cos\theta &amp; 0\\0 &amp; 0 &amp; 0 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03065em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80204em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><msub><mi>r</mi><mi>z</mi></msub></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M_{r_z} = \begin{bmatrix}cos\theta &amp; -sin\theta &amp; 0 &amp; 0\\sin\theta &amp; cos\theta &amp; 0 &amp; 0\\0 &amp; 0 &amp; 1 &amp; 0\\0 &amp; 0 &amp; 0 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80204em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6520099999999998em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.80499em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.40599em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.65201em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></p></li></ul><h1 id="real-examples"><a class="markdownIt-Anchor" href="#real-examples"></a> Real Examples</h1><p>I used <code>numpy.ndarray</code> to store matrix, and used a third-party libraryfor computing the composition and de-composition of transformation matrix.</p><script src="https://gist.github.com/leixingyu/7496f9981c699a61ccf605c672898f9d.js"></script><h2 id="computation"><a class="markdownIt-Anchor" href="#computation"></a> Computation</h2><p>Now let’s put our code to the test:</p><p>Here are the transformation values I have in maya:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">maya_t = [-<span class="number">1.307</span>, <span class="number">0.331</span>, <span class="number">0.188</span>]</span><br><span class="line">maya_r = [-<span class="number">335</span>, -<span class="number">12</span>, <span class="number">98</span>]</span><br><span class="line">maya_s = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>]</span><br></pre></td></tr></table></figure><h2 id="maya-to-unity"><a class="markdownIt-Anchor" href="#maya-to-unity"></a> Maya to Unity</h2><p>From the previous post, I’ve computed the change of basis matrix for Unreal</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MAYA_TO_UNITY = np.array([</span><br><span class="line">    [-<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line">], dtype=<span class="built_in">int</span>)</span><br></pre></td></tr></table></figure><p>Now followed by our methods:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">maya_matrix = compose_matrix(maya_t, maya_r, maya_s, order=<span class="string">&#x27;sxyz&#x27;</span>)</span><br><span class="line">unity_matrix = change_xform(maya_matrix, MAYA_TO_UNITY)</span><br><span class="line">unity_t, unity_r, unity_s = decompose_matrix(unity_matrix, order=<span class="string">&#x27;szxy&#x27;</span>)</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># transform in Unity</span></span><br><span class="line">translation = [<span class="number">1.307</span>, <span class="number">0.331</span>, <span class="number">0.188</span>] </span><br><span class="line">rotation = [<span class="number">7.3413883536944935</span>, -<span class="number">26.641453221201548</span>, -<span class="number">102.41010358310075</span>] </span><br><span class="line">scale = [<span class="number">1.0</span>, <span class="number">1.0</span>, <span class="number">1.0</span>]</span><br></pre></td></tr></table></figure><p><strong>Important</strong>: for rotation since the returned values corresponds to the first, secondand third rotation angle specified in the rotation order:which is in ‘zxy’, we need to swap values to re-order it as ‘xyz’.</p><h2 id="maya-to-unreal"><a class="markdownIt-Anchor" href="#maya-to-unreal"></a> Maya to Unreal</h2><p>Same goes for Unreal, the change of basis matrix is:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MAYA_TO_UNREAL = np.array([</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line">], dtype=<span class="built_in">int</span>)</span><br></pre></td></tr></table></figure><p>Then comes our conversion method:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">maya_matrix = compose_matrix(maya_t, maya_r, maya_s, order=<span class="string">&#x27;sxyz&#x27;</span>)</span><br><span class="line">unreal_matrix = change_xform(maya_matrix, MAYA_TO_UNREAL)</span><br><span class="line">unreal_t, unreal_r, unreal_s = decompose_matrix(unreal_matrix, order=<span class="string">&#x27;sxyz&#x27;</span>)</span><br></pre></td></tr></table></figure><p>Result:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># transform in Unreal</span></span><br><span class="line">translation = [-<span class="number">1.307</span>, <span class="number">0.188</span>, <span class="number">0.331</span>] </span><br><span class="line">rotation = [<span class="number">149.05728077227823</span>, <span class="number">75.61041143412538</span>, <span class="number">123.21509334477231</span>] </span><br><span class="line">scale = [<span class="number">1.0</span>, <span class="number">1.0</span>, <span class="number">1.0</span>]</span><br></pre></td></tr></table></figure><p><strong>Caveat:</strong> I need to inverse the value of translation <em>z</em>, the reason I haven’t figured out yet,but translation is hardly our concern since we just need to flip axes between Maya values;The rotation value is the important one.</p><h1 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h1><p><a href="https://matthew-brett.github.io/transforms3d/index.html">Transform3d API</a></p><p><a href="https://discourse.threejs.org/t/convert-from-one-coordinate-system-to-another/13240">ThreeJS -Convert from one coordinate system to another?</a></p><p><a href="https://www.techarthub.com/a-practical-guide-to-unreal-engine-4s-coordinate-system/">Tech Art Hub - A Practical Guide to Unreal Engine 4’s Coordinate System</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h1&gt;
&lt;p&gt;Have you noticed the different transform v</summary>
      
    
    
    
    <category term="learning log" scheme="https://www.xingyulei.com/categories/learning-log/"/>
    
    
    <category term="math" scheme="https://www.xingyulei.com/tags/math/"/>
    
    <category term="maya" scheme="https://www.xingyulei.com/tags/maya/"/>
    
    <category term="unreal" scheme="https://www.xingyulei.com/tags/unreal/"/>
    
    <category term="unity" scheme="https://www.xingyulei.com/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>Change of Basis Matrix</title>
    <link href="https://www.xingyulei.com/post/math-change-of-basis/"/>
    <id>https://www.xingyulei.com/post/math-change-of-basis/</id>
    <published>2022-09-25T04:00:00.000Z</published>
    <updated>2022-09-24T03:21:59.765Z</updated>
    
    <content type="html"><![CDATA[<h1 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h1><p>Different DCCs uses coordinate systems with different axis directions. For example,Maya by default uses a Y-up right-handed system; Unity uses a Y-up left-handed system;and Unreal uses a Z-up left-handed system.</p><figure><img src="https://www.techarthub.com/wp-content/uploads/coordinate-comparison-chart-full.jpg" alt="dcc-coord" width="600px" ><figcaption>(Image from: Techart Hub)</figcaption></figure><br><ul><li><p><strong>Up Direction</strong>: is what consider to be the up direction of the world. Movingan object up translating in direction of positive <em>Y</em> in Maya and Unity, but forUnreal, it’s translating in the direction of positive <em>Z</em>.</p></li><li><p><strong>Handed System</strong>: not only affects the forward/front direction of the world,it also dictates the direction of rotation; for left-handed system,positive rotation about the axis is <strong>clockwise</strong>, and for right-handed system, it’s<strong>counter-clockwise</strong> (same way as how your hand would curl, hence the name).</p></li></ul><p>The nature of the coordinate system affects how an object’s transformation is calculated.</p><p>The <strong>Change of Basis</strong> matrix transforms a vector lies in one coordinate system toanother.</p><h2 id="basis-vectors"><a class="markdownIt-Anchor" href="#basis-vectors"></a> Basis Vectors</h2><p>In the world of 2D, the basis vectors <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span> of one coordinate system A,corresponds to<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>x</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">v_x =\begin{bmatrix}1 \\0 \\\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span>and<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>y</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">v_y =\begin{bmatrix}0 \\1 \\\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></p><p>Now, if these two basis vectors were to transfer to a different coordinate system B,this exact set of basis vectors is written differently in that system.This represents A’s basis vectors in B’s system.<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>x</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">v_x =\begin{bmatrix}2 \\1 \\\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span>and<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>y</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">v_y =\begin{bmatrix}-1 \\1 \\\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></p><p>Correspondingly, any vector in system B could translate to system A, pre-multiply using thischange of basis matrix:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>c</mi><mi>o</mi><mi>b</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M_{cob} =\begin{bmatrix}2 &amp; -1\\1 &amp; 1\\\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span>where the first column is the basis vector <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> and second column is thebasis vector <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>.</p><p>And alternatively, to translate any vector in system A to system B, we pre-multiplyby the inverse of this change of basis matrix: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><msub><mi>M</mi><mrow><mi>c</mi><mi>o</mi><mi>b</mi></mrow></msub><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">{M_{cob}}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0373379999999999em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.887338em;"><span style="top:-3.1362300000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>.</p><h2 id="transformation"><a class="markdownIt-Anchor" href="#transformation"></a> Transformation</h2><p>Now we know how to convert vectors between coordinate systems, how do we do it for transformation?Here are some simple step to understand:</p><ol><li><p>Given any vector in system B, apply a change of basis operation, so it’s in system A:</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>c</mi><mi>o</mi><mi>b</mi></mrow></msub><mo>∗</mo><msub><mi>v</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">M_{cob} * v_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</p></li><li><p>Now we can apply a transformation represented in the same system A:</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>f</mi><mi>o</mi><mi>r</mi><mi>m</mi><mi>A</mi></mrow></msub><mo>∗</mo><msub><mi>M</mi><mrow><mi>c</mi><mi>o</mi><mi>b</mi></mrow></msub><mo>∗</mo><msub><mi>v</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">M_{transformA} * M_{cob} * v_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</p></li><li><p>Finally, we can transfer the end result back to system B by pre-multiplying the inverseof the change of basis matrix:</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><msub><mi>M</mi><mrow><mi>c</mi><mi>o</mi><mi>b</mi></mrow></msub><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><msub><mi>M</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>f</mi><mi>o</mi><mi>r</mi><mi>m</mi><mi>A</mi></mrow></msub><mo>∗</mo><msub><mi>M</mi><mrow><mi>c</mi><mi>o</mi><mi>b</mi></mrow></msub><mo>∗</mo><msub><mi>v</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">{M_{cob}}^{-1} * M_{transformA} * M_{cob} * v_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0373379999999999em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.887338em;"><span style="top:-3.1362300000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</p></li></ol><br/><h2 id="conclusion"><a class="markdownIt-Anchor" href="#conclusion"></a> Conclusion</h2><p>The frontal part <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><msub><mi>M</mi><mrow><mi>c</mi><mi>o</mi><mi>b</mi></mrow></msub><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><msub><mi>M</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>f</mi><mi>o</mi><mi>r</mi><mi>m</mi><mi>A</mi></mrow></msub><mo>∗</mo><msub><mi>M</mi><mrow><mi>c</mi><mi>o</mi><mi>b</mi></mrow></msub></mrow><annotation encoding="application/x-tex">{M_{cob}}^{-1} * M_{transformA} * M_{cob}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0373379999999999em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.887338em;"><span style="top:-3.1362300000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> represents thesame transformation but in system B: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>f</mi><mi>o</mi><mi>r</mi><mi>m</mi><mi>B</mi></mrow></msub></mrow><annotation encoding="application/x-tex">M_{transformB}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>.</p><p>Alternatively, any transformation in system B: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>f</mi><mi>o</mi><mi>r</mi><mi>m</mi><mi>B</mi></mrow></msub></mrow><annotation encoding="application/x-tex">M_{transformB}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> can be representedas <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>c</mi><mi>o</mi><mi>b</mi></mrow></msub><mo>∗</mo><msub><mi>M</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>f</mi><mi>o</mi><mi>r</mi><mi>m</mi><mi>B</mi></mrow></msub><mo>∗</mo><msup><msub><mi>M</mi><mrow><mi>c</mi><mi>o</mi><mi>b</mi></mrow></msub><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">M_{cob} * M_{transformB} * {M_{cob}}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0373379999999999em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.887338em;"><span style="top:-3.1362300000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> in system A.</p><p>Here’s the function I’ve written Python:</p><script src="https://gist.github.com/leixingyu/f8849105d509bd52723f3e94a35cab67.js"></script><h1 id="example"><a class="markdownIt-Anchor" href="#example"></a> Example</h1><h2 id="maya-to-unreal"><a class="markdownIt-Anchor" href="#maya-to-unreal"></a> Maya to Unreal</h2><p>The first thing to identify is the change of basis from Maya to Unreal,as illustrated before, Maya is a Y-up left-hand system and Unreal is a Z-upright-hand system.</p><table style="width: 500px"><tr>  <td colspan="6">Maya Axis Direction</td></tr>  <tr>    <td>Forward</td>    <td>Z</td>    <td>Up</td>    <td>Y</td>    <td>Right</td>    <td>-X</td>  </tr><tr>  <td colspan="6">Unreal Axis Direction</td></tr>  <tr>    <td>Forward</td>    <td>-Y</td>    <td>Up</td>    <td>Z</td>    <td>Right</td>    <td>-X</td>  </tr></table><p>The change of basis can be represented as such$M_{cob} =\begin{bmatrix}1 &amp; 0 &amp; 0 &amp; 0\0 &amp; 0 &amp; -1 &amp; 0\0 &amp; 1 &amp; 0 &amp; 0\0 &amp; 0 &amp; 0 &amp; 1\end{bmatrix}$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MAYA_TO_UNREAL = np.array([</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line">], dtype=<span class="built_in">int</span>)</span><br></pre></td></tr></table></figure><h2 id="maya-to-unity"><a class="markdownIt-Anchor" href="#maya-to-unity"></a> Maya to Unity</h2><p>Same thing for Maya to Unity conversion, a Y-up left-hand system to a Y-up right-handsystem; the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span> are respectively inverted between the two systems, therefore:</p><table style="width: 500px"><tr>  <td colspan="6">Maya Axis Direction</td></tr>  <tr>    <td>Forward</td>    <td>Z</td>    <td>Up</td>    <td>Y</td>    <td>Right</td>    <td>-X</td>  </tr><tr>  <td colspan="6">Unity Axis Direction</td></tr>  <tr>    <td>Forward</td>    <td>Z</td>    <td>Up</td>    <td>Y</td>    <td>Right</td>    <td>X</td>  </tr></table><p>The change of basis can be represented as such$M_{cob} =\begin{bmatrix}-1 &amp; 0 &amp; 0 &amp; 0\0 &amp; 1 &amp; 0 &amp; 0\0 &amp; 0 &amp; 1 &amp; 0\0 &amp; 0 &amp; 0 &amp; 1\end{bmatrix}$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MAYA_TO_UNITY = np.array([</span><br><span class="line">    [-<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line">], dtype=<span class="built_in">int</span>)</span><br></pre></td></tr></table></figure><h1 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h1><p><a href="https://youtu.be/P2LTAUO1TdA">YouTube - Change of basis | Chapter 13, Essence of linear algebra</a></p><p><a href="https://forums.unrealengine.com/t/forward-in-unreal-engine-which-is-it/93115">Unreal Engine Forum - “Forward” in unreal engine, Which is it?</a></p><p><a href="https://www.dariomazzanti.com/uncategorized/change-of-basis/">Dario Mazzanti - Change of Basis</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h1&gt;
&lt;p&gt;Different DCCs uses coordinate systems wit</summary>
      
    
    
    
    <category term="3d math" scheme="https://www.xingyulei.com/categories/3d-math/"/>
    
    
    <category term="math" scheme="https://www.xingyulei.com/tags/math/"/>
    
    <category term="maya" scheme="https://www.xingyulei.com/tags/maya/"/>
    
    <category term="unreal" scheme="https://www.xingyulei.com/tags/unreal/"/>
    
    <category term="unity" scheme="https://www.xingyulei.com/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>Euler Angles and Gimbal Lock Problem</title>
    <link href="https://www.xingyulei.com/post/math-euler-gimbal/"/>
    <id>https://www.xingyulei.com/post/math-euler-gimbal/</id>
    <published>2022-09-17T04:00:00.000Z</published>
    <updated>2022-09-21T02:04:43.335Z</updated>
    
    <content type="html"><![CDATA[<h1 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h1><p>When talking about rotation, most of us would picture gimbal movement: an objectrotate about a set of three axes. This is the same principle of the Euler anglespresentation of rotation. It being the most popular representation for rotation,is used across many DCCs, it is intuitive and easy for us to understand.</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Gyroscope_operation.gif/220px-Gyroscope_operation.gif" alt="gimbal" /></p><p>While an Euler angles are usually written as a list of three values representingrotation degrees in <em>x</em>, <em>y</em>, <em>z</em> axis.</p><p>Scientifically it is actually denoted as<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span> with radian as rotation unit where</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> is rotation about the first axis</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span> is rotation about the second axis</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span> is rotation about the third axis</li></ul><h1 id="rotation-order"><a class="markdownIt-Anchor" href="#rotation-order"></a> Rotation Order</h1><p>There are two major issue with Euler angles.</p><h2 id="ambiguity"><a class="markdownIt-Anchor" href="#ambiguity"></a> Ambiguity</h2><p>The target orientation is rotation order dependent, meaning even with thesame rotation <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span> values,the results differs using different order of rotation.</p><p>A <em>zyx</em> order refers to rotation about axis z, y, x in that order (thinkof it as x axis being a child of y axis being a child of z axis).Therefore, to represent a target rotation, aside from providing rotation values<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span>, we also need to providethe rotation order and <a href="#rotation-type">Rotation Type</a>.</p><p>There are a total of 12 possible rotation orders per rotation type/group.</p><h2 id="gimbal-problem"><a class="markdownIt-Anchor" href="#gimbal-problem"></a> Gimbal Problem</h2><p>In short, the Gimbal problem is due to euler angle decomposing a (linear) rotational movementas a product of more than one axis rotations.</p><p>Although any target orientation can be achieved using Euler rotation, the rotationalmovements are sometimes undesired. This is due to a problem in Animation field known asGimbal Lock.</p><table style="width: 900px">  <tr>    <td><img src="https://upload.wikimedia.org/wikipedia/commons/4/49/Gimbal_Lock_Plane.gif" alt="gimbal-lock" width="300px"></td>    <td>Gimbal lock happens when two of the three axes are rotated to a parallelconfiguration, 'locking' the system into a two-dimensional space.</td>  </tr></table><br><p>In order to “break free” of this configuration,the system needs to input rotation along two or more axes simultaneously.</p><p>In the context of keyframe Animation, interpolation along more than one axis means therotational movement will not appear linear, but in an unpredictable trajectory,which is bad. (See video illustration <a href="https://youtu.be/zc8b2Jo7mno?t=130">here</a>)</p><h3 id="test-in-maya"><a class="markdownIt-Anchor" href="#test-in-maya"></a> Test in Maya</h3><p>You can test out the gimbal problem in Maya yourself.</p><p>Going into rotation tools and select <em>“Axis Orientation”</em> to <em>“Gimbal”</em>, you cannow interact with the object using gimbal rotation. This rotation is whatactually get recorded by Maya and presented in the channel box.</p><p>If you go back to the <em>“Object”</em> mode rotation, even though your rotation gizmo isnow unlocked, the gimbal problem don’t just go away.Maya is still recording the gimbal rotation in the background.The <em>“Object”</em> mode rotation is just an interaction tool.</p><table style="width: 600px">  <tr>    <td><img src="https://i.imgur.com/wVrvepx.png" alt="gimbal" width="300px"></td>    <td><img src="https://i.imgur.com/jiUWIWa.png" alt="object" width="300px"></td>  </tr>  <tr>    <td>Gimbal Mode</td>    <td>Object Mode</td>  </tr></table><h2 id="quaternion"><a class="markdownIt-Anchor" href="#quaternion"></a> Quaternion</h2><blockquote><p>Rotation lies in non-Euclidean space.</p></blockquote><p>Luckily there is a more advanced representation for rotation: Quaternion, whichgame engines uses internally. This is due to it being data compact (only stores four numbers) andcomputational efficient (rotational movement using Euler angles usually need to be converted to rotationmatrix, which involves a lot of <em>sin</em> and <em>cos</em> calculation).</p><p>The bigger advantage comes from itproducing linear and predictable results (the shortest path along source andtarget rotation). It is, however, very hard for users to comprehend.</p><p>A quaternion consists of a scaler part and a vector part:</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo>=</mo><mo stretchy="false">[</mo><mi>s</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">q = [s, (x, y, z)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span> where <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo>∈</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">s, x, y, z \in R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span></p><p>or.<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo>=</mo><mi>s</mi><mo>+</mo><mi>i</mi><mi>x</mi><mo>+</mo><mi>i</mi><mi>j</mi><mo>+</mo><mi>k</mi><mi>z</mi></mrow><annotation encoding="application/x-tex">q = s + ix + ij + kz</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span> where <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>i</mi><mn>2</mn></msup><mo>=</mo><msup><mi>j</mi><mn>2</mn></msup><mo>=</mo><msup><mi>k</mi><mn>2</mn></msup><mo>=</mo><mi>i</mi><mi>j</mi><mi>k</mi><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i^2 = j^2 = k^2 = ijk = -1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span></p><h1 id="rotation-type"><a class="markdownIt-Anchor" href="#rotation-type"></a> Rotation Type</h1><h2 id="intrinsic-and-extrinsic-rotations"><a class="markdownIt-Anchor" href="#intrinsic-and-extrinsic-rotations"></a> Intrinsic and Extrinsic Rotations</h2><p><strong>Intrinsic rotations</strong> are elemental rotations that occur about the axes ofa coordinate system XYZ attached to a moving body. (i.e. rotation about axisin the current coordinate, like object space)</p><p><strong>Extrinsic rotations</strong> are elemental rotations that occurabout the axes of the fixed coordinate system xyz. (i.e. rotation about axisin the original coordinate, like world space)</p><p><img src="https://img-blog.csdnimg.cn/fbc97c759b134aa3b87b1d3fa6bbc567.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASGVyZW5lXw==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="intrinsic-vs-extrinsic-rotation" /></p><p>(Fig.1: Intrinsic rotations; Fig.2: Extrinsic rotations)</p><h2 id="example"><a class="markdownIt-Anchor" href="#example"></a> Example</h2><p>Rotation calculation usually happens along with other transform type using matrix.Here I made a matrix composition and decomposition function in Python, utilizinga third party math library <a href="http://matthew-brett.github.io/transforms3d/index.html">transforms3d</a>.</p><p>As you can see, since the rotation matrix varies depending on rotation order and type,this is reflected as one of the argument.</p><script src="https://gist.github.com/leixingyu/7496f9981c699a61ccf605c672898f9d.js"></script><blockquote><p>The first character is ‘r’ (rotating == intrinsic),or ‘s’ (static == extrinsic).</p><p>The next three characters give the axis (‘x’, ‘y’ or ‘z’)about which to perform the rotation,in the order in which the rotations will be performed.</p><p>For example the string ‘szyx’ specifies that the angles should be interpretedrelative to extrinsic (static) coordinate axes, and be performed in the order:rotation about z axis; rotation about y axis; rotation about x axis.</p></blockquote><h2 id="conversion"><a class="markdownIt-Anchor" href="#conversion"></a> Conversion</h2><p>Any extrinsic rotation can be represented in intrinsic rotation with the sameangle values but inverted order or elemental rotation.</p><p>So a <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span> with extrinsic <strong>zyx</strong> order is equivalent tothe same angle with intrinsic <strong>xyz</strong> order.</p><h1 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h1><p><a href="https://math.stackexchange.com/questions/2943074/">Stack Exchange - Confusion about order of rotations for Euler Angles</a></p><p><a href="https://forums.unrealengine.com/t/what-is-the-rotation-order-for-components-or-bones/286910/5">Unreal Engine Forum - What is the rotation order for Components or Bones?</a></p><p><a href="https://math.stackexchange.com/questions/1137745">Stack Exchange - Proof of the extrinsic to intrinsic rotation transform</a></p><p><a href="https://youtu.be/zc8b2Jo7mno">YouTube - Euler (Gimbal Lock) Explained</a></p><p><a href="http://td-matt.blogspot.com/2010/11/rotation-orders.html">TD Matt - Rotation Orders</a></p><p><a href="https://blog.csdn.net/weixin_42165913/article/details/120167295">CSDN - Understanding Euler Angles</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h1&gt;
&lt;p&gt;When talking about rotation, most of us wo</summary>
      
    
    
    
    <category term="3d math" scheme="https://www.xingyulei.com/categories/3d-math/"/>
    
    
    <category term="math" scheme="https://www.xingyulei.com/tags/math/"/>
    
    <category term="maya" scheme="https://www.xingyulei.com/tags/maya/"/>
    
  </entry>
  
  <entry>
    <title>Unreal Engine Cinematic FBX Workflow</title>
    <link href="https://www.xingyulei.com/post/ue-cinematic-fbx/"/>
    <id>https://www.xingyulei.com/post/ue-cinematic-fbx/</id>
    <published>2022-08-13T04:00:00.000Z</published>
    <updated>2022-12-16T20:56:44.496Z</updated>
    
    <content type="html"><![CDATA[<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>How do we transfer assets and animation to Unreal needed for cinematic?.fbx is the way to go (at least for now).For each component of a cinematic, we want to set it up nicely so the data can becorrectly presented in Unreal.</p><p>However, do note there are limitations in .fbx and differences between DCCs, certainthings just can’t be transferred through .fbx and certain things can’t be representedin Unreal. Always test your workflow before going into full scale production.</p><p>Please refer to <a href="https://docs.unrealengine.com/5.0/en-US/fbx-content-pipeline/">Unreal’s FBX Content Pipeline</a></p><h2 id="general"><a class="markdownIt-Anchor" href="#general"></a> General</h2><p>The important thing to keep in mind is that <strong>consistency is king</strong>,we want to have consistent world unit, identify coordinate system for each DCC,and maintain a hierarchy standard for assets across DCCs.</p><p>Certain workflow involves animating or placing componentswithin Unreal instead of importing outside the engine which is totally fine.</p><h2 id="static-mesh"><a class="markdownIt-Anchor" href="#static-mesh"></a> Static Mesh</h2><p>Static Meshes represents anything that is not animated, like a background environment.There shouldn’t be any keys on any of the transforms or attribute.They are meant to be modeled outside Unreal,and imported as a static mesh asset, placed in the level as a static mesh actor.</p><table style="width: 700px">  <tr>    <td>        <img src="https://i.imgur.com/EPwKyeY.png" alt="flag-sm-maya" width="300px">    </td>    <td>        <img src="https://i.imgur.com/I4YZzTD.png" alt="flag-sm-unreal" width="300px">    </td>  </tr></table><h3 id="export"><a class="markdownIt-Anchor" href="#export"></a> Export:</h3><p>In the outliner, select all the meshes and export as .fbx</p><p><img src="https://i.imgur.com/xe9MfeN.png" alt="flag-sm-hierarchy" /></p><h3 id="import"><a class="markdownIt-Anchor" href="#import"></a> Import:</h3><p>Make sure ‘combine mesh’ is checked, otherwise the asset will be imported as separate meshes (probably notwhat we want)</p><p>We have three types of Unreal assets created: Static Mesh, Textures and Materials.</p><h3 id="static-mesh-animation"><a class="markdownIt-Anchor" href="#static-mesh-animation"></a> Static Mesh Animation</h3><p>If a mesh is animated in any capacity, even if it’s just translating or rotating as a wholewithout any deformation, it needs to be skinned with joint(s). Consider this as a common standard.</p><p>See the process of Skeletal Mesh in the immediate following.</p><p>Note: the joint transform pivot needs to be align with the mesh transform pivot.</p><p><strong>Example:</strong></p><p>Take a look at our previous flag prop. If we want to animate the flag like moving it around in Unreal,it needs to have joint hierarchy where we can apply animation to, even if it’s simple as this.Applying animation directly to transform is not recommended.</p><img src="https://i.imgur.com/GA2NbrO.png" alt="flag-skm-maya" width="300px"><p>Also, no need to worry about the extra joint and weight data added, the file size increaseis negligible (&lt;10%).</p><h2 id="skeletal-mesh-skm"><a class="markdownIt-Anchor" href="#skeletal-mesh-skm"></a> Skeletal Mesh (SKM)</h2><p>Skeletal Mesh could be used to represent an animated foreground prop or environment,or something as complicated as a character/creature.</p><p><strong>Example:</strong></p><table style="width: 800px">  <tr>    <td>        <img src="https://i.imgur.com/S4AeH4B.png" alt="char-rig-maya" height="300px">    </td>    <td>        <img src="https://i.imgur.com/XhsU3UB.png" alt="char-skm-maya" height="300px">    </td>  </tr></table><h3 id="export-2"><a class="markdownIt-Anchor" href="#export-2"></a> Export</h3><p><a href="https://discourse.techart.online/t/rigging-in-game-vs-animation/2490">Rigging in Game vs Animation</a></p><p>A complex animation rig can’t translate 1 to 1 to game engine, the rigging phase needsto be planned to accommodate the limitation of the engine.</p><p>Once we have a suitable rig in Maya, we need to prepare it for the engine.We would clean the rig up to get a desired hierarchy which contains only jointsand meshes. So remove components like controllers and constraints, also get ridof any redundant namespace.</p><img src="https://i.imgur.com/4PupBE3.png" alt="char-skm-outline" width="200px"><h3 id="import-2"><a class="markdownIt-Anchor" href="#import-2"></a> Import</h3><p>In addition to Textures and Materials, we have three major components imported:Skeleton, Skeletal Mesh and Physics Asset.</p><ul><li>Skeleton: refers the joint hierarchy, it uses the Skeletal Mesh as the preview mesh</li><li>Skeletal Mesh: is the Skinned Mesh along with the Skeleton</li><li>Physics Asset: defines physics and collision used by the Skeletal Mesh (sometimeseven rendering), a rough physics collision body is defined during import.</li></ul><table style="width: 800px">  <tr>    <td>        <img src="https://i.imgur.com/YSHFOvD.png" alt="import-option" height="400px">    </td>    <td>        <img src="https://i.imgur.com/GOEIA5l.png" alt="char-skm-ue" height="400px">    </td>  </tr></table><h2 id="skeletal-mesh-animation"><a class="markdownIt-Anchor" href="#skeletal-mesh-animation"></a> Skeletal Mesh Animation</h2><blockquote><p>The exported animation should maintain the exact same hierarchy structure of the exported rig</p></blockquote><p>Generally, the root of the rig/skeleton, whether it’s a transform group or aroot joint, should not have animation/keyed data on it,as it is generally used to offset world transform(and keyed transform can’t do that)</p><h3 id="export-3"><a class="markdownIt-Anchor" href="#export-3"></a> Export</h3><p>Since keyframes are usually on controllers, so we have to bake the keys on all joints.</p><p>Select the joint hierarchy and Bake Simulation, after that we can get rid of the controllersand constraints just like what we did during the rig clean up.</p><p>This time, we only need to export the joint hierarchy (no meshes).</p><img src="https://i.imgur.com/yHA3o39.png" alt="maya-anim-outline" height="300px"><h3 id="blend-shape"><a class="markdownIt-Anchor" href="#blend-shape"></a> Blend Shape</h3><p>Unreal supports blend shapes, if you need your character has blend shape animation,additional steps needs to be done.</p><ol><li>find all meshes with blend shape node attached</li><li>traverse in the node editor and locate the blend shape node</li><li>bake simulation on the blend shape node</li><li>include these meshes during your export (ones with blend shape)</li></ol><h3 id="import-as-animation-sequence"><a class="markdownIt-Anchor" href="#import-as-animation-sequence"></a> Import (as Animation Sequence)</h3><p>Now during import phase simply select the Skeleton Unreal asset that matchesyour animation, no need to create a new Skeletal Mesh.</p><img src="https://i.imgur.com/Ez1x8Zv.png" alt="ue-anim-outline" height="300px"><p>An Animation Sequence Unreal asset is now created, you can also see a previewmesh through the Editor window. It is now ready to be used in the Sequencer.</p><h2 id="camera-animation"><a class="markdownIt-Anchor" href="#camera-animation"></a> Camera Animation</h2><p>Maya Camera cannot be imported as an Unreal asset.Unreal has its own native Camera object, which is not 1-to-1 match to Maya’s Camera.</p><p>What we can do is export Maya camera’s animation and attribute andimport on an Unreal Cinematic Camera Actor.</p><p>See video guide <a href="https://www.youtube.com/watch?v=qtxLmWquOOY">here</a></p><h3 id="export-4"><a class="markdownIt-Anchor" href="#export-4"></a> Export</h3><p>The camera node has to be on the scene root, with no transform node on top.Otherwise, the animation won’t be imported correctly as Unreal is searchingfor the top node.</p><h3 id="import-as-keyframes"><a class="markdownIt-Anchor" href="#import-as-keyframes"></a> Import (as Keyframes)</h3><img src="https://i.imgur.com/XOkzVrx.png" alt="cam-import-option" width="300px"><p>Cameras are linked to the game viewport, therefore animation import needs to be plotted onthe Sequencer as individual keyframes instead of being an Unreal asset.</p><p>Create a camera track and bind it to a newly created Unreal CineCameraActor andhit ‘Import’.</p><img src="https://i.imgur.com/6WXdVzK.png" alt="ue-cam-keys"><h2 id="maya-fbx-export-option-reference"><a class="markdownIt-Anchor" href="#maya-fbx-export-option-reference"></a> Maya FBX Export Option Reference</h2><p><a href="https://knowledge.autodesk.com/support/maya/learn-explore/caas/CloudHelp/cloudhelp/2022/ENU/Maya-Basics/files/GUID-FE8DBEAA-C2DD-43B3-9933-4BA4CDDEAA89-htm.html">FBX Export options: Full Help</a></p><h3 id="general-options"><a class="markdownIt-Anchor" href="#general-options"></a> General Options</h3><p>Embed Media:</p><ul><li><strong>Could be checked</strong> during Static Mesh/Skeletal Mesh export based on needs,the Unreal import can pick up the texture and materials embedded.</li></ul><p>Smoothing Group:</p><ul><li><strong>Usually needs to be checked</strong> so Unreal can use the smoothing group exportedfrom Maya as opposed to perform smoothing calculation on Unreal side.</li></ul><p>Include Children:</p><ul><li>Almost always <strong>keep unchecked</strong>, and explicitly select nodes to export.</li></ul><p>Input Connections:</p><ul><li><strong>Keep unchecked</strong> is usually a good idea to avoid exporting extra data, butalso depends on different circumstances</li></ul><p>Deformed Models:</p><ul><li>For Skeletal Mesh export which is commonly a rig, check ‘Skins’ to exportskin deformation like skin clusters, check ‘Blend Shapes’ to export all blend shapetargets.</li><li>For Skeletal Mesh <strong>Animation</strong> export, uncheck ‘Skins’ and ‘Blend Shapes’.Skinning data is embedded within the Skeletal Mesh Asset in Unreal, and forblend shapes, as long  as you are following this <a href="#blend-shape">step</a>,the imported .fbx would also carry over blend shape animation.</li></ul><p>Bake Animation:</p><ul><li>Leave this <strong>unchecked</strong> and use Maya’s Edit | Keys | Bake Simulation, as itoffers more flexible solutions and is also generally much faster.</li></ul><h2 id="unreal-fbx-import-option-reference"><a class="markdownIt-Anchor" href="#unreal-fbx-import-option-reference"></a> Unreal FBX Import Option Reference</h2><p><a href="https://docs.unrealengine.com/5.0/en-US/fbx-import-options-reference-in-unreal-engine/">FBX Import Options Reference: Full Help</a></p><p>Static Mesh:</p><ul><li>‘Import Mesh’ checked</li><li>‘Create New Materials’ and ‘Import Textures’ as needed</li></ul><p>Skeletal Mesh:</p><ul><li>Leave ‘Skeleton’ blank, so we can create a new skeleton asset</li><li>‘Create Physics Asset’, so we can create a new PA</li><li>‘Skeletal Mesh’ and ‘Import Mesh’ checked to import skinned meshes</li><li>‘Create New Materials’ and ‘Import Textures’ as needed</li></ul><p>Skeletal Animation: (Import as Animation Sequence)</p><ul><li>Choose existing skeleton for ‘Skeleton’</li><li>‘Import Animations’ checked</li><li>‘Import Mesh’ unchecked to avoid importing blend shape source mesh ifblend shape was exported during Maya export.</li></ul><p>Camera Animation: (Import as keyframes in Sequencer)</p><ul><li>‘Matches by Name Only’ unchecked</li><li>‘Create Cameras’ unchecked</li><li>‘Replace Transform Track’ checked</li><li>‘Reduce Keys’ unchecked</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h2&gt;
&lt;p&gt;How do we transfer assets and animation to</summary>
      
    
    
    
    <category term="unreal cinematic" scheme="https://www.xingyulei.com/categories/unreal-cinematic/"/>
    
    
    <category term="maya" scheme="https://www.xingyulei.com/tags/maya/"/>
    
    <category term="unreal" scheme="https://www.xingyulei.com/tags/unreal/"/>
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>Unreal Engine Cinematic Sequencer Introduction</title>
    <link href="https://www.xingyulei.com/post/ue-cinematic-sequencer/"/>
    <id>https://www.xingyulei.com/post/ue-cinematic-sequencer/</id>
    <published>2022-07-16T04:00:00.000Z</published>
    <updated>2022-12-16T21:07:49.406Z</updated>
    
    <content type="html"><![CDATA[<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>In this blog, I’m going to introduce the different componentsof a cinematic, how they are represented. This hopefully will give you anoverview of how cinematic works in Unreal.</p><h2 id="glossary"><a class="markdownIt-Anchor" href="#glossary"></a> Glossary</h2><ul><li><p><strong>Skeleton</strong>: a hierarchy that is used to define Bones (sometimes called joints),In Unreal, skeletons are used to store/driven by associated animation data.</p></li><li><p><strong>Static Mesh</strong>: a piece of geometry that consists of a set of polygonsthat can be cached in video memory and rendered out.</p></li><li><p><strong>Skeletal Mesh</strong>: in short is a collection of a skeleton hierarchy, and mesh(es) skinned tothat skeleton. A set of polygons composed to make up the surface ofthe Skeletal Mesh, and a hierarchical set of interconnected boneswhich can be used to animate the vertices of the polygons</p></li><li><p><strong>Level</strong>: is all or part of your game’s “world”. Levels contain everything aplayer can see and interact with, like environments, usable objects,other characters, and so on.</p></li><li><p><strong>Actor</strong>: an Actor is any object that can be placed into a Level,such as a camera, Static Mesh, or player start location.Actors support 3D transformations such as translation, rotation, and scaling.They can be created and destroyed.</p></li><li><p><strong>Binding</strong>: a track in sequencer that binds a specific actor in the level, enablesthe level sequence to modify or animate its property when the level sequence is active.</p></li></ul><h2 id="what-makes-a-sequencer"><a class="markdownIt-Anchor" href="#what-makes-a-sequencer"></a> What makes a Sequencer</h2><blockquote><p>Similar to other film and animation editing software, Sequencer requires youto add tracks in order to reference elements in your sequence.</p><p>Any character, prop, camera, effect, or other viewport element can bereferenced and manipulated in Sequencer</p></blockquote><p><img src="https://i.imgur.com/UI68i63.png" alt="overview" /></p><h3 id="level-sequence"><a class="markdownIt-Anchor" href="#level-sequence"></a> Level Sequence</h3><p>A Level Sequence asset is a container for cinematic data, which includestracks, animation and binding.</p><h3 id="level-sequence-track"><a class="markdownIt-Anchor" href="#level-sequence-track"></a> Level Sequence Track</h3><p>If you used any video editing software, then tracks shouldn’t be new to you.Tracks are like layers, and the <em>Level Sequence</em> is the whole canvas;</p><p><em>Tracks</em> usually are used to reference different actors in the level,and then animated its properties. So in most time, tracks don’t overlay eachother like layers in Photoshop do, they’re more like controllingdifferent color channels that compose the final image.</p><h3 id="level-sequence-section-asset"><a class="markdownIt-Anchor" href="#level-sequence-section-asset"></a> Level Sequence Section Asset</h3><p><em>Sections</em> are the components that laid out in a <em>Track</em>, sections can be treatedas individual animation clips of which make up the whole track.</p><p>Some common section are <em>Camera Cuts</em> section, <em>Shots</em> section and <em>Animation</em> section.</p><h2 id="basic-cinematic-component"><a class="markdownIt-Anchor" href="#basic-cinematic-component"></a> Basic Cinematic Component</h2><p>We’ll break down a cinematic as the following components and tackle themone by one.</p><ul><li>Camera (Camera Actor)</li><li>Background (Static Mesh Actor)</li><li>Foreground &amp; Character (Skeletal Mesh Actor)</li><li>Lighting (Light Actor)</li><li>FX (Visual Effects Actor)</li><li>Audio (Sound Wave Asset)</li><li>Other</li></ul><h2 id="actor-to-sequence-object-binding"><a class="markdownIt-Anchor" href="#actor-to-sequence-object-binding"></a> Actor to Sequence (Object Binding)</h2><p>The level sequence operates within levels and operates on actors in the level.It can bind to an existing actor and animates its properties. It can also spawn an actoras needed.</p><p><a href="https://docs.unrealengine.com/5.0/en-US/spawn-temporary-actors-in-unreal-engine-cinematics/">Spawnables vs. Possessables</a></p><h3 id="static-mesh"><a class="markdownIt-Anchor" href="#static-mesh"></a> Static Mesh</h3><p><img src="https://i.imgur.com/NGIIEAp.png" alt="static" /></p><p>This is the simplest scenario, a static mesh actor is bound to the level sequenceand the transform are keyed.</p><h3 id="skeletal-mesh"><a class="markdownIt-Anchor" href="#skeletal-mesh"></a> Skeletal Mesh</h3><p><img src="https://i.imgur.com/Rh2kTsR.png" alt="skm" /></p><p>When it comes to skeletal mesh, another component is exposed: Animation.</p><p>This sub-track takes Unreal <a href="https://docs.unrealengine.com/5.0/en-US/animation-sequences-in-unreal-engine/">Animation Sequence</a> assets, which consists theskeleton animation, this effectively drives the skeleton within the skeletalmesh actor.</p><blockquote><p><strong>Note</strong>: leave the animation clip as ‘Keep State’ when finished if possible.</p></blockquote><h3 id="camera-binding-and-camera-cut"><a class="markdownIt-Anchor" href="#camera-binding-and-camera-cut"></a> Camera Binding and Camera Cut</h3><p><img src="https://i.imgur.com/exrhTgo.png" alt="camera" /></p><p>In order to set up camera view properly, in-addition to the camera binding,we also need a <em>Camera Cuts Track</em>. Whatever is on this track is what the viewportis capturing, it allows you to switch and blend between different cameras.</p><p>(In short, the Camera Binding tracks drives the Camera Actor, the Camera Cut track decideswhat takes over the viewport)</p><h3 id="audio"><a class="markdownIt-Anchor" href="#audio"></a> Audio</h3><p><img src="https://i.imgur.com/PNHsLUU.png" alt="audio" /></p><p>Audio can be created using by possessing an audio/sound actor, or alternativelyit can be created by adding Unreal <a href="https://docs.unrealengine.com/5.0/en-US/audio-files-in-unreal-engine/">Sound Wave</a> asset. I would recommendthe latter as it allows you to scrub in the timeline and still have thecorrect audio playback.</p><blockquote><p><strong>Note:</strong> Set Sound Wave Asset’s ‘<em>Sound Asset Compression Type</em>’ to ‘<em>PCM</em>’ soit plays correctly when scrubbing in timeline.</p></blockquote><h3 id="more"><a class="markdownIt-Anchor" href="#more"></a> More</h3><p>There are of course different actor types in the level that the level sequencecan possess/bind to. Such as <em>Light Actors, Gameplay Actors, Visual EffectsActors</em> and more.</p><h2 id="sub-sequence-and-shot"><a class="markdownIt-Anchor" href="#sub-sequence-and-shot"></a> Sub-sequence and Shot</h2><p>There are other two types of concept I’d like to touch upon:<em>Subsequences</em> and <em>Shots</em>.</p><p>They are usually not directly bound to an actor, but they are containers fora level sequence that does. They can be very useful to organize and compositethe cinematic level sequence structure.</p><p><img src="https://i.imgur.com/hrVKhin.png" alt="subsequence" /></p><p><a href="https://docs.unrealengine.com/5.0/en-US/cinematic-subscequences-track-in-unreal-engine/">Subsequences</a>represent an entire Level Sequence.Having subsequences allows multiple level sequence to be added into a “parent” level sequence,These subsequences can be considered as the partition of the “parent” and can be worked on as differentsub-scenes by different artists.</p><blockquote><p><strong>Note:</strong> a good practice is to not extend sub-sequence range over theshot active range; Unreal still calculates motion in sub-sequence extending beyondthe range of the shot active range such as Motion Blur, which can produceunwanted result during cuts between shots.</p></blockquote><p><img src="https://docs.unrealengine.com/4.27/Images/AnimatingObjects/Sequencer/Overview/TracksShot/Thumbnails.png" alt="shot" /></p><p>(Image from Unreal)</p><p>Similar to Subsequence, each <em>Shot Section</em> represents a Level Sequence,it allows multiple level sequences be assembled and re-arranged freely on the<em>Shots Track</em> as Shot <em>Section</em> to form the full sequence/cinematic. Thisis to get rendering in Unreal to work correctly, and able to set per-shotpreset in Movie Render Queue.</p><blockquote><p><strong>Note:</strong> avoid using the “lock” property in any of the clip as it sometimes causesun-wanted behaviours.</p></blockquote><h2 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h2><p><a href="https://docs.unrealengine.com/5.0/en-US/cinematics-and-movie-making-in-unreal-engine/">Unreal Engine Documentation - Cinematics and Sequencer</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h2&gt;
&lt;p&gt;In this blog, I’m going to introduce the d</summary>
      
    
    
    
    <category term="unreal cinematic" scheme="https://www.xingyulei.com/categories/unreal-cinematic/"/>
    
    
    <category term="unreal" scheme="https://www.xingyulei.com/tags/unreal/"/>
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>Qt Prevent GUI freezing with Multithreading</title>
    <link href="https://www.xingyulei.com/post/qt-threading/"/>
    <id>https://www.xingyulei.com/post/qt-threading/</id>
    <published>2022-05-15T04:00:00.000Z</published>
    <updated>2022-09-10T13:48:55.773Z</updated>
    
    <content type="html"><![CDATA[<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>It is inevitable that some of our tasks in the program will take long time to run,leaving the user staring at a frozen screen, whether it is reading/writing a large file,searching database or syncing assets. In a production environment,these seconds can really add up for the entire team; can you imaginehow many working hours are wasted when every user need to wait for,let’s say, a library tool to query the entire asset database and finally displaying themevery single time.</p><p>We can surely improve the query, but that’s usually not where the bottleneck is.The speed of querying is usually sufficient for human brain to process. Whatwe want is not to be slow down by un-interactive GUI.So, why not have assets to fill little by little in a continuous stream, orjust query their name first, and use a separate thread to load in rest of the informationlike date created, author and thumbnail.</p><p>Now, let’s get straight to the point. I’m going to show three basic examplesof different methods to deal with frozen GUI, each has its own use cases.</p><h2 id="example-issue"><a class="markdownIt-Anchor" href="#example-issue"></a> Example Issue</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Window</span>(<span class="params">QtWidgets.QMainWindow</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, parent=<span class="literal">None</span></span>):</span></span><br><span class="line">        QtWidgets.QMainWindow.__init__(self, parent)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># ui setup: please ignore</span></span><br><span class="line">        widget = QtWidgets.QWidget()</span><br><span class="line">        layout = QtWidgets.QGridLayout()</span><br><span class="line"></span><br><span class="line">        button = QtWidgets.QPushButton(<span class="string">&#x27;run task!&#x27;</span>)</span><br><span class="line">        button.clicked.connect(self.run_long_task)</span><br><span class="line">        edit = QtWidgets.QLineEdit()</span><br><span class="line"></span><br><span class="line">        layout.addWidget(edit, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        layout.addWidget(button, <span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">        widget.setLayout(layout)</span><br><span class="line">        self.setCentralWidget(widget)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run_long_task</span>(<span class="params">self</span>):</span></span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QtWidgets.QApplication(sys.argv)</span><br><span class="line">    win = Window()</span><br><span class="line">    win.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><p>Here I created a simple example to show how a long-running taskcan block controls in our Qt Gui.</p><p>The <code>run_long_task()</code> is simply a <code>time.sleep()</code> that will halt for 2 secondsutil returning control back to the main event loop.</p><p>After evoking the <code>run_long_task()</code> method, we canno longer interact with the line edit from our UI, until the task has finished.</p><table><thead><tr><th style="text-align:center"><img src="https://i.imgur.com/VZBrqsw.gif" alt="no-work" /></th></tr></thead><tbody><tr><td style="text-align:center">(Clicking and typing has no effect while task is running)</td></tr></tbody></table><h2 id="processevent"><a class="markdownIt-Anchor" href="#processevent"></a> <code>processEvent()</code></h2><p>Using <code>QApplication.processEvent()</code> can achieve a <strong>semi-interactive</strong> GUIduring a long-running task. Here’s to show what I meant.</p><p>Let’s add a progress bar to track our task status.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Window</span>(<span class="params">QtWidgets.QMainWindow</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, parent=<span class="literal">None</span></span>):</span></span><br><span class="line">        QtWidgets.QMainWindow.__init__(self, parent)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># ui setup: add progress bar</span></span><br><span class="line">        self.ui_progress = QtWidgets.QProgressBar()</span><br><span class="line">        self.statusBar().addPermanentWidget(self.ui_progress)</span><br><span class="line">        ...</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_status</span>(<span class="params">status_bar, msg</span>):</span></span><br><span class="line">    status_bar.showMessage(msg, <span class="number">2000</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_progress</span>(<span class="params">progress_bar, value</span>):</span></span><br><span class="line">    progress_bar.setValue(value)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> value &gt;= <span class="number">100</span>:</span><br><span class="line">        progress_bar.setVisible(<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">elif</span> progress_bar.isHidden():</span><br><span class="line">        progress_bar.setVisible(<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>And now, by evoking thestatic method <code>processEvent()</code> during the long-running task, we enforceQt to handle normal events like updating GUI, and respond to our user input,before handing the control back to the task.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_long_task</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">        sleep(<span class="number">0.5</span>)</span><br><span class="line">        update_status(self.statusBar(), <span class="built_in">str</span>(i))</span><br><span class="line">        update_progress(self.ui_progress, i*<span class="number">10</span>)</span><br><span class="line">        </span><br><span class="line">        QtCore.QCoreApplication.processEvents()</span><br></pre></td></tr></table></figure><p>Now, as you can see, our main GUI can update the progress bar and messages,and even allow us to sort of interact with the line edit, but the interaction is by nomeans smooth.</p><table><thead><tr><th style="text-align:center"><img src="https://i.imgur.com/J3a5hdT.gif" alt="processEvent" /></th></tr></thead><tbody><tr><td style="text-align:center">(Somewhat interactive, yet choppy)</td></tr></tbody></table><p>Before we create a real multi-threading solution, first,let’s establish a signal slot workflow that Qt provides: instead ofupdating the progress bar and status bar by calling its method directly,we emit a signal to handle that.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">    ...</span><br><span class="line">    self.progressed.connect(<span class="keyword">lambda</span> value: update_progress(self.ui_progress, value))</span><br><span class="line">    self.messaged.connect(<span class="keyword">lambda</span> msg: update_status(self.statusBar(), msg))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_long_task</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">        sleep(<span class="number">0.5</span>)</span><br><span class="line">        self.progressed.emit(<span class="built_in">int</span>(i*<span class="number">10</span>))</span><br><span class="line">        self.messaged.emit(<span class="built_in">str</span>(i))</span><br></pre></td></tr></table></figure><h3 id="qthread"><a class="markdownIt-Anchor" href="#qthread"></a> QThread</h3><script src="https://gist.github.com/leixingyu/9601e352eba22124a0f97e1fc574a262.js"></script><p>Instead of directly subclassing <code>QThread()</code>, it is recommended by many tocreate a <code>QObject()</code> and attach it to a <code>QThread()</code>. The <code>QObject()</code> we created,known as the worker, will be running our long-running task, and emits theupdate signals.</p><p>It is important to keep a note that, the <code>QThread()</code> that houses our worker needs to live in the mainevent loop (i.e. kept in the main application as <code>self.__thread</code>).If not, it will be collected by <em>gc</em> and the thread will exit pre-maturely.</p><p><code>thread.worker = worker</code> is also essential if the worker doesn’t live in the mainevent loop (i.e. <code>self.__worker</code>).</p><p>Now as you can see, we can freely interact with the line edit while the long-runningtask is handled in the background.</p><table><thead><tr><th style="text-align:center"><img src="https://i.imgur.com/CXxVPC4.gif" alt="qthread" /></th></tr></thead><tbody><tr><td style="text-align:center">(Very smooth typing)</td></tr></tbody></table><h3 id="qthreadpool-and-qrunnable"><a class="markdownIt-Anchor" href="#qthreadpool-and-qrunnable"></a> QThreadPool and QRunnable</h3><p>A natural progression would be handling multiple long-running tasks,luckily, we have <code>QThreadPool</code> for that.</p><p>In the following example, we have <strong>three</strong> long-running task in the background,while we still have free control of the main GUI.</p><table><thead><tr><th style="text-align:center"><img src="https://i.imgur.com/ru7UWl1.gif" alt="qthreadpool" /></th></tr></thead><tbody><tr><td style="text-align:center">(Multiple threads and smooth typing)</td></tr></tbody></table><script src="https://gist.github.com/leixingyu/f5fc3cc1ef03db1f254dab2a23b85bc7.js"></script><ul><li><p><code>QThreadPool</code> manages <code>QRunnable</code>, which doesn’t have built-in signals, thus weneed to attach signals externally by creating a <code>QObject</code> to store them.</p></li><li><p><code>QThreadPool</code> also deletes the <code>QRunnable</code> instances automatically when it finishes by default.</p></li><li><p>if max thread is exceeded, the process is queued until a thread is available.</p></li></ul><h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2><p><a href="https://www.pythonguis.com/tutorials/multithreading-pyqt-applications-qthreadpool/">PythonGUIs - Multithreading PyQt5 applications with QThreadPool</a></p><p><a href="https://mayaposch.wordpress.com/2011/11/01/how-to-really-truly-use-qthreads-the-full-explanation/">Maya’s Programming &amp; Electronics Blog - How To Really, Truly Use QThreads; The Full Explanation</a></p><p><a href="https://stackoverflow.com/questions/6783194">Stack Overflow - Background thread with QThread in PyQt</a></p><p><a href="https://doc.qt.io/qt-5/qcoreapplication.html#processEvents">Qt doc - Process Events</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h2&gt;
&lt;p&gt;It is inevitable that some of our tasks in</summary>
      
    
    
    
    <category term="tech summary" scheme="https://www.xingyulei.com/categories/tech-summary/"/>
    
    
    <category term="threading" scheme="https://www.xingyulei.com/tags/threading/"/>
    
    <category term="pyqt" scheme="https://www.xingyulei.com/tags/pyqt/"/>
    
    <category term="template" scheme="https://www.xingyulei.com/tags/template/"/>
    
  </entry>
  
  <entry>
    <title>Making Pie Charts in Qt (Python)</title>
    <link href="https://www.xingyulei.com/post/qt-pie-chart/"/>
    <id>https://www.xingyulei.com/post/qt-pie-chart/</id>
    <published>2022-04-27T04:00:00.000Z</published>
    <updated>2022-09-10T13:38:50.345Z</updated>
    
    <content type="html"><![CDATA[<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>It’s time to learn new stuff again. This time, I want to implement adata visualization component in my tool: pie charts. I had some experiencewith <code>matplotlib</code> before, but I’m excited to find out that Qthas an add-on module <code>QtCharts</code> that can integrate with Qt application.</p><p>Here are my learning results: on the left side, I created a static and simplistic designand on the right side, a slightly more flashy, animated design.</p><p>In this blog, I will break down how they are created. They are also availablein my <a href="https://github.com/leixingyu/guiUtil/blob/master/template/pieChart.py">guiUtil</a> with full code.</p><table>    <tr>        <td>            <img src="https://i.imgur.com/Gz2ykTF.png" alt="static" width="600px">            <br>            <a href="#example-1">Example #1</a>        </td>        <td>            <img src="https://i.imgur.com/fR6H2PO.gif" alt="animate" width="500px">            <br>            <a href="#example-2">Example #2</a>        </td>    </tr></table><h2 id="installing-qtcharts"><a class="markdownIt-Anchor" href="#installing-qtcharts"></a> Installing <code>QtCharts</code></h2><p><code>QtCharts</code> was first introduced as an add-on module in Qt in version 5.7,so the <a href="https://github.com/mottosso/Qt.py">Qt.py</a> for Python Qt binding doesn’tsupport <code>QtCharts</code> as it isn’t available in PyQt and PySide.</p><ol><li><p>check your PySide2 or PyQt5 version:<code>QtCore.qVersion()</code>. (I’m using PyQt5 version 5.15.2)</p></li><li><p>install the corresponding version of <a href="https://pypi.org/project/PyQtChart/">PyQtChart</a> using</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install PyQtChart</span><br></pre></td></tr></table></figure></li><li><p>finally, test import <code>from PyQt5 import QtCharts</code></p></li></ol><h2 id="the-basics"><a class="markdownIt-Anchor" href="#the-basics"></a> The Basics</h2><h3 id="classes"><a class="markdownIt-Anchor" href="#classes"></a> Classes</h3><p><a href="https://doc.qt.io/qt-5/qchart.html">QChart</a>:<code>QChart</code> refers to the main diagram, in our case the pie chart is a <code>QChart</code> object.</p><p><a href="https://doc.qt.io/qt-5/qpieseries.html">QPieSeries</a>:To draw a pie chart, we’ll need one or more <code>QPieSeries</code> added to our <code>QChart</code> object,to form the circular shape. To build other types of chart, we’ll want to useSeries such as <code>QBoxPlotSeries</code>, <code>QCandlestickSeries</code>,<code>QXYSeries</code>, <code>QAreaSeries</code> or <code>QAbstractBarSeries</code>.</p><p><a href="https://doc.qt.io/qt-5/qpieslice.html">QPieSlice</a>:a <code>QPieSlice</code> object represents a slice inside a <code>QPieSeries</code> object.</p><p><img src="https://i.imgur.com/vxQHPEz.jpg" alt="explain" /></p><h3 id="components"><a class="markdownIt-Anchor" href="#components"></a> Components</h3><p>There are other components that the examples will cover.</p><p><strong>Value</strong> reflects the size/span of each slice, and is added one by one in run-timeto the <code>QPieSeries</code>. We’re able to retrieve useful information suchas percentage and span angle once all the data is added.</p><p><strong>Label</strong> is a crucial component within the scope of the <code>QPieSlice</code>.Label can be displayed in different ways (Inside the slice: <em>LabelInsideHorizontal, LabelInsideTangential, LabelInsideNormal</em>or outside the slice: <em>LabelOutside</em> with labelArm).</p><p><strong>Legend</strong> in default, is attached to <code>QChart</code>, connecting with the labels ofall the <code>QPieSlice</code>. We can separate it by detaching it or setting each individualmarkers (items) of the legend.</p><p>We also defined an immutable data structure to represent the data fedinto the <code>QChart</code>, which we’ll take a look shortly.</p><h2 id="example-1"><a class="markdownIt-Anchor" href="#example-1"></a> Example 1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySimpleChart</span>(<span class="params">QtChart.QChart</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, datas, parent=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="built_in">super</span>(MySimpleChart, self).__init__(parent)</span><br><span class="line">        self._datas = datas</span><br><span class="line"></span><br><span class="line">        self.outer = QtChart.QPieSeries()</span><br><span class="line">        self.set_outer_series()</span><br><span class="line">        self.addSeries(self.outer)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_outer_series</span>(<span class="params">self</span>):</span></span><br><span class="line">        slices = <span class="built_in">list</span>()</span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> self._datas:</span><br><span class="line">            slice_ = QtChart.QPieSlice(data.name, data.value)</span><br><span class="line">            slice_.setLabelVisible()</span><br><span class="line">            slice_.setColor(data.primary_color)</span><br><span class="line">            slice_.setLabelBrush(data.primary_color)</span><br><span class="line"></span><br><span class="line">            slices.append(slice_)</span><br><span class="line">            self.outer.append(slice_)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># label styling</span></span><br><span class="line">        <span class="keyword">for</span> slice_ <span class="keyword">in</span> slices:</span><br><span class="line">            label = <span class="string">&quot;&lt;p align=&#x27;center&#x27; style=&#x27;color:&#123;&#125;&#x27;&gt;&#123;&#125;%&lt;/p&gt;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">round</span>(slice_.percentage()*<span class="number">100</span>, <span class="number">2</span>))</span><br><span class="line">            slice_.setLabel(label)</span><br></pre></td></tr></table></figure><p>We start off by subclassing <code>QChart</code>, we then would want to add a <code>QPieSeries</code>as a container for inserting our slices (generated from our data).</p><p>A simplified process:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pie_chart = QChart()</span><br><span class="line">series = QPieSeries()</span><br><span class="line">slice_ = QPieSlice(label, value)</span><br><span class="line"></span><br><span class="line">series.append(slice_)</span><br><span class="line">pie_chart.addSeries(series)</span><br></pre></td></tr></table></figure><p>note: <em>slice</em> is a Python built-in name so I’m against using it as variable name</p><h3 id="labels-and-legend"><a class="markdownIt-Anchor" href="#labels-and-legend"></a> Labels and Legend</h3><p>As you can see from the example above, we have some flexibility withlabel formatting (<code>QLabel</code> methods and HTML formatting),we can also do legend formatting to some extent. Such as alignment and marker shapes.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">self.legend().setAlignment(QtCore.Qt.AlignRight)</span><br><span class="line">self.legend().setMarkerShape(QtChart.QLegend.MarkerShapeCircle)</span><br></pre></td></tr></table></figure><p>we can even separate legend vs. slice label, so they could display differentcontent(but it may be bad being practice to unlink the two)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> index, marker <span class="keyword">in</span> <span class="built_in">enumerate</span>(self.legend().markers()):</span><br><span class="line">   marker.setLabel(self._datas[index].name)</span><br></pre></td></tr></table></figure><h3 id="other"><a class="markdownIt-Anchor" href="#other"></a> Other</h3><p>Adding variation can be easily done by shifting angles of all the slices.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">offset = <span class="number">40</span></span><br><span class="line">self.outer.setPieStartAngle(offset)</span><br><span class="line">self.outer.setPieEndAngle(offset+<span class="number">360</span>)</span><br></pre></td></tr></table></figure><p>If the outside labels are cramped together, we can create additional spacingby extending the label arm:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slice_.setLabelArmLengthFactor(<span class="number">0.4</span>)</span><br></pre></td></tr></table></figure><h2 id="example-2"><a class="markdownIt-Anchor" href="#example-2"></a> Example 2</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyChart</span>(<span class="params">QtChart.QChart</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, datas, parent=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="built_in">super</span>(MyChart, self).__init__(parent)</span><br><span class="line">        self._datas = datas</span><br><span class="line"></span><br><span class="line">        self.legend().hide()</span><br><span class="line">        self.setAnimationOptions(QtChart.QChart.SeriesAnimations)</span><br><span class="line"></span><br><span class="line">        self.outer = QtChart.QPieSeries()</span><br><span class="line">        self.inner = QtChart.QPieSeries()</span><br><span class="line">        self.outer.setHoleSize(<span class="number">0.35</span>)</span><br><span class="line">        self.inner.setPieSize(<span class="number">0.35</span>)</span><br><span class="line">        self.inner.setHoleSize(<span class="number">0.3</span>)</span><br><span class="line"></span><br><span class="line">        self.set_outer_series()</span><br><span class="line">        self.set_inner_series()</span><br><span class="line"></span><br><span class="line">        self.addSeries(self.outer)</span><br><span class="line">        self.addSeries(self.inner)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_outer_series</span>(<span class="params">self</span>):</span></span><br><span class="line">        slices = <span class="built_in">list</span>()</span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> self._datas:</span><br><span class="line">            slice_ = QtChart.QPieSlice(data.name, data.value)</span><br><span class="line">            slice_.setLabelVisible()</span><br><span class="line">            slice_.setColor(data.primary_color)</span><br><span class="line">            slice_.setLabelBrush(data.primary_color)</span><br><span class="line"></span><br><span class="line">            slices.append(slice_)</span><br><span class="line">            self.outer.append(slice_)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># label styling</span></span><br><span class="line">        <span class="keyword">for</span> slice_ <span class="keyword">in</span> slices:</span><br><span class="line">            color = <span class="string">&#x27;black&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> slice_.percentage() &gt; <span class="number">0.1</span>:</span><br><span class="line">                slice_.setLabelPosition(QtChart.QPieSlice.LabelInsideHorizontal)</span><br><span class="line">                color = <span class="string">&#x27;white&#x27;</span></span><br><span class="line"></span><br><span class="line">            label = <span class="string">&quot;&lt;p align=&#x27;center&#x27; style=&#x27;color:&#123;&#125;&#x27;&gt;&#123;&#125;&lt;br&gt;&#123;&#125;%&lt;/p&gt;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">                color,</span><br><span class="line">                slice_.label(),</span><br><span class="line">                <span class="built_in">round</span>(slice_.percentage()*<span class="number">100</span>, <span class="number">2</span>)</span><br><span class="line">                )</span><br><span class="line">            slice_.setLabel(label)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_inner_series</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> self._datas:</span><br><span class="line">            slice_ = self.inner.append(data.name, data.value)</span><br><span class="line">            slice_.setColor(data.secondary_color)</span><br><span class="line">            slice_.setBorderColor(data.secondary_color)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="inner-and-outer-series"><a class="markdownIt-Anchor" href="#inner-and-outer-series"></a> Inner and Outer Series</h3><p>To create a circular/loop shape pie chart, we need to create a holewith <code>setHoleSize()</code>. And the inner loop and outer loop are two separate seriesadjacent to each other.</p><p>In the example, I used a light color for inner loop (50% blend with white)and used solely the outer loop to display labels and values. Also, in order forlabels to be displayed properly, I added a condition so that label willbe displayed outside when the angle span is less than a threshold.</p><h3 id="exploding-animation"><a class="markdownIt-Anchor" href="#exploding-animation"></a> Exploding Animation</h3><p><code>QPieSlice</code> has a built-in <code>hovered</code> signal for us to achieve theexploding effect when mouse hovering over.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_outer_series</span>(<span class="params">self</span>):</span></span><br><span class="line">   ...</span><br><span class="line">   slice_.hovered.connect(partial(self.explode, slice_))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">explode</span>(<span class="params">self, slice_, is_hovered</span>):</span></span><br><span class="line">    <span class="keyword">if</span> is_hovered:</span><br><span class="line">        start = slice_.startAngle()</span><br><span class="line">        end = slice_.startAngle()+slice_.angleSpan()</span><br><span class="line">        self.inner.setPieStartAngle(end)</span><br><span class="line">        self.inner.setPieEndAngle(start+<span class="number">360</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        self.inner.setPieStartAngle(<span class="number">0</span>)</span><br><span class="line">        self.inner.setPieEndAngle(<span class="number">360</span>)</span><br><span class="line"></span><br><span class="line">    slice_.setExplodeDistanceFactor(<span class="number">0.1</span>)</span><br><span class="line">    slice_.setExploded(is_hovered)</span><br></pre></td></tr></table></figure><p>The outer loop explosion can be set using <code>slice_.setExploded()</code>; The inner loop shiftingis done by offsetting the pie start and end angle.</p><p>Also, make sure we have set <code>QChart.SeriesAnimations</code> on the <code>QChart</code>object.</p><h2 id="bonus"><a class="markdownIt-Anchor" href="#bonus"></a> Bonus</h2><h3 id="custom-data-class"><a class="markdownIt-Anchor" href="#custom-data-class"></a> Custom Data Class</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</span><br><span class="line"></span><br><span class="line">Data = namedtuple(<span class="string">&#x27;Data&#x27;</span>, [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;value&#x27;</span>, <span class="string">&#x27;primary_color&#x27;</span>, <span class="string">&#x27;secondary_color&#x27;</span>])</span><br><span class="line"></span><br><span class="line">node = Data(<span class="string">&#x27;Node&#x27;</span>, <span class="number">333</span>, QtGui.QColor(<span class="string">&quot;#82d3e5&quot;</span>), QtGui.QColor(<span class="string">&quot;#cfeef5&quot;</span>))</span><br><span class="line">connection = Data(<span class="string">&#x27;Connection&#x27;</span>, <span class="number">105</span>, QtGui.QColor(<span class="string">&quot;#fd635c&quot;</span>), QtGui.QColor(<span class="string">&quot;#fdc4c1&quot;</span>))</span><br><span class="line">other = Data(<span class="string">&#x27;Other&#x27;</span>, <span class="number">20</span>, QtGui.QColor(<span class="string">&quot;#feb543&quot;</span>), QtGui.QColor(<span class="string">&quot;#ffe3b8&quot;</span>))</span><br></pre></td></tr></table></figure><p>A helper data structure for adding items to our pie chart.</p><p>Generally, only the label/name and the value are required.I also assigned specific color values to achieve certain palette,but they can be randomly generated in the <code>QChart</code> class as well.</p><h3 id="putting-it-together"><a class="markdownIt-Anchor" href="#putting-it-together"></a> Putting it Together</h3><p>The last thing we need to do is add a main body andinstantiate a pie chart with some random data. We do this using a <code>QChartView</code> container.</p><blockquote><p>All the code is available at <a href="https://github.com/leixingyu/guiUtil/blob/master/template/pieChart.py">guiUtil</a>.</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChartView</span>(<span class="params">QtWidgets.QMainWindow</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, parent=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="built_in">super</span>(ChartView, self).__init__(parent)</span><br><span class="line">        self.setFixedSize(QtCore.QSize(<span class="number">700</span>, <span class="number">400</span>))</span><br><span class="line"></span><br><span class="line">        datas = [node, connection, other]</span><br><span class="line">        chart = MySimpleChart(datas)</span><br><span class="line"></span><br><span class="line">        chart_view = QtChart.QChartView(chart)</span><br><span class="line">        chart_view.setRenderHint(QtGui.QPainter.Antialiasing)</span><br><span class="line">        self.setCentralWidget(chart_view)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">global</span> win</span><br><span class="line">    app = QtWidgets.QApplication(sys.argv)</span><br><span class="line">    win = ChartView()</span><br><span class="line">    win.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2><p><a href="https://doc.qt.io/qt-5/qtcharts-nesteddonuts-example.html">Qt Doc - Nested Donut Example</a></p><p><a href="https://doc.qt.io/qt-5/qlegend.html">Qt Doc - QLegend</a></p><p><a href="https://doc.qt.io/qt-5/qchart.html">Qt Doc - QChart</a></p><p><a href="https://doc.qt.io/qt-5/qpieseries.html">Qt Doc - QPieSeries</a></p><p><a href="https://doc.qt.io/qt-5/qpieslice.html">Qt Doc - QPieSlice</a></p><p><a href="https://stackoverflow.com/questions/56727499">Stack Overflow - Attach colors of my choosing to each slice of QPieSeries</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h2&gt;
&lt;p&gt;It’s time to learn new stuff again. This t</summary>
      
    
    
    
    <category term="tech summary" scheme="https://www.xingyulei.com/categories/tech-summary/"/>
    
    
    <category term="pyqt" scheme="https://www.xingyulei.com/tags/pyqt/"/>
    
    <category term="template" scheme="https://www.xingyulei.com/tags/template/"/>
    
  </entry>
  
  <entry>
    <title>Run Command Prompt and Powershell as Admin (Python)</title>
    <link href="https://www.xingyulei.com/post/py-admin/"/>
    <id>https://www.xingyulei.com/post/py-admin/</id>
    <published>2022-03-19T04:00:00.000Z</published>
    <updated>2022-11-02T03:35:06.376Z</updated>
    
    <content type="html"><![CDATA[<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>We often find ourselves needing to automate tasks on Windows machine,Although there are many Python libraries out there that supports somecommon Windows operations and even cross-platforms.It is really hard to substitute Window’s Command Prompt and PowerShell,as they are extremely useful in cases where we need to access differentWindows components, configure settings and troubleshooting.</p><h3 id="user-account-control-uac"><a class="markdownIt-Anchor" href="#user-account-control-uac"></a> User Account Control (UAC)</h3><p>Standard user accounts are for day-to-day activities with less permission,while the administrator account has elevated access for all features.</p><p>For my personal machine, I’m operating on adminaccount all time (as the sole user). But Windows, for security reasons,still treats most of my actions as standard account.It only elevates to admin privilege when my operations want to make internal changesto Windows settings and my machine.</p><p>The UAC feature when enabled, prompts theuser when such action occurred and request for admin access. Additionally, for standard user,it means they need to ask for administrator account login.</p><table style="width: 70%">    <tr>        <td>            <img src="https://img.raymond.cc/blog/wp-content/uploads/2007/03/user_account_control_prompt.png" alt="admin" width="500px">            <br/>When the sign in is an <b>administrator type</b> account<br/>        </td>        <td>            <img src="https://docs.microsoft.com/answers/storage/attachments/25037-image.png" alt="std" width="500px">            <br/>When the sign in is a <b>standard type</b> account<br/>        </td>    </tr></table><p>Now, in terms of task automation in Python, we’ll also want tofigure out how to run certain operations with Admin privilege.</p><h3 id="using-subprocess"><a class="markdownIt-Anchor" href="#using-subprocess"></a> Using <code>subprocess</code></h3><p>Like most of us, I have been using <code>subprocess</code> to evoke <code>cmd.exe</code> or <code>powershell.exe</code> as desiredby passing arguments as list into the function.</p><ul><li>Command Prompt: <code>command = ['cmd.exe', '/c', &lt;argument&gt;]</code></li><li>PowerShell: <code>command = ['powershell.exe', '-command', &lt;argument&gt;]</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runCmd</span>(<span class="params">*args</span>):</span></span><br><span class="line">    p = subprocess.Popen(</span><br><span class="line">        *args,</span><br><span class="line">        stdout=subprocess.PIPE,</span><br><span class="line">        stderr=subprocess.STDOUT</span><br><span class="line">    )</span><br><span class="line">    out, error = p.communicate()</span><br><span class="line">    <span class="keyword">return</span> out, error</span><br></pre></td></tr></table></figure><p>But this doesn’t grant the process with admin privilege, and won’t notify us with UAC.</p><p>How to achieve this? here are some ways to do it.</p><h2 id="using-shellexecute-runas"><a class="markdownIt-Anchor" href="#using-shellexecute-runas"></a> Using ShellExecute <code>runas</code></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ctypes</span><br><span class="line">commands = <span class="string">u&#x27;/k echo hi&#x27;</span></span><br><span class="line">ctypes.windll.shell32.ShellExecuteW(</span><br><span class="line">        <span class="literal">None</span>,</span><br><span class="line">        <span class="string">u&quot;runas&quot;</span>,</span><br><span class="line">        <span class="string">u&quot;cmd.exe&quot;</span>,</span><br><span class="line">        commands,</span><br><span class="line">        <span class="literal">None</span>,</span><br><span class="line">        <span class="number">1</span></span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p><code>runas</code> from the <a href="https://docs.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-shellexecutew">Windows API</a>launches an application as Administrator.User Account Control (UAC) will prompt the user for consent to run the applicationelevated or enter the credentials of an administrator account used to run the application.</p><p>What about a more pythonic approach?</p><h2 id="using-runas-in-command-prompt"><a class="markdownIt-Anchor" href="#using-runas-in-command-prompt"></a> Using <code>runas</code> in Command Prompt</h2><p><code>runas</code> application runs commandas a different user; it is most commonly used but not limited to perform operationwith administrator account for granting admin access.</p><blockquote><p>Note: the password is handled outside UAC, which may notbe the desired behavior</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">command = [<span class="string">&#x27;cmd.exe&#x27;</span>, <span class="string">&#x27;/c&#x27;</span>, <span class="string">&#x27;runas&#x27;</span>, <span class="string">&#x27;/user:administrator&#x27;</span>, <span class="string">&#x27;regedit&#x27;</span>]</span><br><span class="line">p = subprocess.Popen(command, stdin=subprocess.PIPE)</span><br><span class="line">p.stdin.write(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">p.communicate()</span><br></pre></td></tr></table></figure><h2 id="using-powershell-verb-runas"><a class="markdownIt-Anchor" href="#using-powershell-verb-runas"></a> Using PowerShell <code>-Verb Runas</code></h2><p>This is my preferred method, since it is most flexible and alsoevokes UAC for admin access.</p><ul><li><p><strong>Start-Process</strong></p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Start-Process &lt;executable&gt; -argumentlist &lt;arugments&gt; -Verb Runas</span><br></pre></td></tr></table></figure></li><li><p><strong>Call operator (&amp;)</strong></p><p>with call operator, we are able to run commands not limited in the environment path,also not need to worry about spaces in our path.</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp; &#123;Start-Process &lt;executable&gt; -argumentlist &lt;arugments&gt; -Verb Runas&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>-ExecutionPolicy Bypass</strong></p><p>Sometimes, a security setting will prevent PowerShell running a <em>.ps1</em> file,and we’ll need to bypass execution policy:</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Start-Process &lt;executable&gt; -ExecutionPolicy Bypass -File &lt;file&gt;</span><br></pre></td></tr></table></figure></li></ul><p>It is very obvious from the above example,we can basically use PowerShell to wrap aroundanything, including Command Prompt.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Start-Process cmd.exe -argumentlist &#x27;/k &quot;dir&quot;&#x27; -Verb Runas</span><br></pre></td></tr></table></figure><p>To bundle everything together, a working example would look like this in Python:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ps_command = <span class="string">&quot;&amp; &#123;&#123;Start-Process cmd.exe -argumentlist &#x27;/k \&quot;dir\&quot;&#x27; -Verb Runas&#125;&#125;&quot;</span></span><br><span class="line">command = [<span class="string">&#x27;powershell.exe&#x27;</span>, <span class="string">&#x27;-command&#x27;</span>, ps_command]</span><br><span class="line">runCmd(command)</span><br></pre></td></tr></table></figure><p>essentially using <code>subprocess</code> to run PowerShell in admin using <code>-Verb Runas</code>to execute command <code>/k dir</code> in Command Prompt (which also has elevated access).</p><h3 id="redirect-output"><a class="markdownIt-Anchor" href="#redirect-output"></a> Redirect Output</h3><p>By doing the above, we are running an executable within a process.the sacrifice is that it is difficult to pass the output,but here’s a few workarounds:</p><p><strong>Output results to a file</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Start-Process cmd.exe -argumentlist &#x27;/c &quot;dir&quot;&#x27; -redirectStandardOutput &quot;C:\Users\xlei\Desktop\temp.txt&quot;</span><br></pre></td></tr></table></figure><p><strong>Output result to the console</strong></p><p>Just the exit code:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">output = Start-Process cmd.exe -argumentlist <span class="string">&#x27;/c &quot;dir&quot;&#x27;</span> -PassThru -Wait</span></span><br><span class="line"><span class="meta">$</span><span class="bash">output.ExitCode</span></span><br></pre></td></tr></table></figure><p>A neat function I found <a href="https://stackoverflow.com/a/52629677/15214802">here</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">function Start-ProcessWithOutput</span><br><span class="line">&#123;</span><br><span class="line">    param ([string]$Path,[string[]]$ArgumentList)</span><br><span class="line">    $Output = New-Object -TypeName System.Text.StringBuilder</span><br><span class="line">    $Error = New-Object -TypeName System.Text.StringBuilder</span><br><span class="line">    $psi = New-object System.Diagnostics.ProcessStartInfo </span><br><span class="line">    $psi.CreateNoWindow = $true </span><br><span class="line">    $psi.UseShellExecute = $false </span><br><span class="line">    $psi.RedirectStandardOutput = $true </span><br><span class="line">    $psi.RedirectStandardError = $true </span><br><span class="line">    $psi.FileName = $Path</span><br><span class="line">    if ($ArgumentList.Count -gt 0)</span><br><span class="line">    &#123;</span><br><span class="line">        $psi.Arguments = $ArgumentList</span><br><span class="line">    &#125;</span><br><span class="line">    $process = New-Object System.Diagnostics.Process </span><br><span class="line">    $process.StartInfo = $psi </span><br><span class="line">    [void]$process.Start()</span><br><span class="line">    do</span><br><span class="line">    &#123;</span><br><span class="line">       if (!$process.StandardOutput.EndOfStream)</span><br><span class="line">       &#123;</span><br><span class="line">           [void]$Output.AppendLine($process.StandardOutput.ReadLine())</span><br><span class="line">       &#125;</span><br><span class="line">       if (!$process.StandardError.EndOfStream)</span><br><span class="line">       &#123;</span><br><span class="line">           [void]$Error.AppendLine($process.StandardError.ReadLine())</span><br><span class="line">       &#125;</span><br><span class="line">       Start-Sleep -Milliseconds 10</span><br><span class="line">    &#125; while (!$process.HasExited)</span><br><span class="line"></span><br><span class="line">    #read remainder</span><br><span class="line">    while (!$process.StandardOutput.EndOfStream)</span><br><span class="line">    &#123;</span><br><span class="line">        #write-verbose &#x27;read remaining output&#x27;</span><br><span class="line">        [void]$Output.AppendLine($process.StandardOutput.ReadLine())</span><br><span class="line">    &#125;</span><br><span class="line">    while (!$process.StandardError.EndOfStream)</span><br><span class="line">    &#123;</span><br><span class="line">        #write-verbose &#x27;read remaining error&#x27;</span><br><span class="line">        [void]$Error.AppendLine($process.StandardError.ReadLine())</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return @&#123;ExitCode = $process.ExitCode; Output = $Output.ToString(); Error = $Error.ToString(); ExitTime=$process.ExitTime&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash">p = Start-ProcessWithOutput cmd.exe -argumentlist <span class="string">&#x27;/c &quot;dir&quot;&#x27;</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">p.ExitCode</span></span><br><span class="line"><span class="meta">$</span><span class="bash">p.Output</span></span><br><span class="line"><span class="meta">$</span><span class="bash">p.Error</span></span><br></pre></td></tr></table></figure><h2 id="run-python-as-admin"><a class="markdownIt-Anchor" href="#run-python-as-admin"></a> Run Python as Admin</h2><p>Running the whole python script in Admin, meaning that the subsequent processeswill have admin access, if this is the behaviour you prefer.</p><script src="https://gist.github.com/leixingyu/a2cc64cec76638d2367cd4c2fc1b94ec.js"></script><h2 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h2><p><a href="https://superuser.com/questions/615654">Stack Exchange - Run .exe file via Python as Administrator</a></p><p><a href="https://stackoverflow.com/questions/8097354/">Stack Overflow - How do I capture the output into a variable from an external process in PowerShell?</a></p><p><a href="https://stackoverflow.com/questions/8925323/">Stack Overflow - Redirection of standard and error output appending to the same log file</a></p><p><a href="https://stackoverflow.com/questions/11531068/">Stack Overflow - Powershell: Capturing standard out and error with Process object</a></p><p><a href="https://www.windows-commandline.com/windows-runas-command-prompt/">Windows Commandline - Windows runas command syntax and examples</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h2&gt;
&lt;p&gt;We often find ourselves needing to automat</summary>
      
    
    
    
    <category term="tech summary" scheme="https://www.xingyulei.com/categories/tech-summary/"/>
    
    
    <category term="python" scheme="https://www.xingyulei.com/tags/python/"/>
    
    <category term="windows" scheme="https://www.xingyulei.com/tags/windows/"/>
    
    <category term="batch" scheme="https://www.xingyulei.com/tags/batch/"/>
    
  </entry>
  
  <entry>
    <title>IK FK Matching in Maya</title>
    <link href="https://www.xingyulei.com/post/maya-ik-fk-match/"/>
    <id>https://www.xingyulei.com/post/maya-ik-fk-match/</id>
    <published>2022-02-27T05:00:00.000Z</published>
    <updated>2022-09-24T03:29:06.814Z</updated>
    
    <content type="html"><![CDATA[<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>IK/FK matching refers to the ability to match any IK pose to FK pose andvice versa. But how does it work?</p><p>I’m going to summarize the basic approaches I learned along the way.One of them is math-based, and the other being Maya operational-based,which utilizes Maya’s built-in constraint nodes,this is more straight-forward and easy as it does the calculation for you.</p><p>Since we use controllers to drive joint movement in rigs,the general idea of a IK/FK matching is to reverse this process,and find the transformation of a controller based off the joint’s transformation.</p><blockquote><p>Note:There’s no one easy way to deal with all custom rig setups, this isdue to operations like parenting, orienting joint and freezing transformation.Transformation offsets occurs between joint and controller, even in world space.I’ll cover these more complex scenarios as references <a href="#further-reading">here</a>.</p></blockquote><h2 id="fk-matching"><a class="markdownIt-Anchor" href="#fk-matching"></a> FK Matching</h2><img src="https://i.imgur.com/q9kcckN.gif" alt="fk-match" width="800px"><p>FK is all about matching rotation, given that FK controllerconstraints the corresponding joint’s orientation.</p><p>Thus, in reverse, given the result joint’s transform,we should be able to find the FK controller’s rotation. Andknowing how one of them works can translate to all the other joints and FKs(respectively, shoulder, elbow and wrist in arm and clavicle, knee and ankle in leg).</p><p><a name="fk-script"></a></p><h3 id="script"><a class="markdownIt-Anchor" href="#script"></a> Script</h3><ol><li><p>obtain the <strong>world space</strong> rotation of the joint whileit is still in IK mode</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># in IK mode</span></span><br><span class="line">rotation = cmds.xform(jnt, ro=<span class="number">1</span>, ws=<span class="number">1</span>, q=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></li><li><p>switch to FK mode and apply the <strong>world space</strong> rotation onto the FK controller</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># in FK mode</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">snap_fk_to_jnt</span>(<span class="params">ctrl, target_rotation</span>):</span></span><br><span class="line">    cmds.xform(ctrl, ro=target_rotation, ws=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></li></ol><p><a name="fk-operation"></a></p><h3 id="maya-operation"><a class="markdownIt-Anchor" href="#maya-operation"></a> Maya Operation</h3><p>We can utilize Maya’s constraint to match rotation.Such as, in a three-chain setup, we could let IK joints to rotation constraintthe FK controllers without maintaining offset. But for a single-chain setupwith both FK and IK controllers sharing the joint,doing so will cause cycle evaluation.</p><p>To get around this, we use a temporary empty transform nodethat is <strong>relatively</strong> parented under the joint. This temporarynode (the match node) will be used to constraint the FK controller, and once thematching completes, we can safely delete the constraint and the match node itself.</p><h2 id="ik-matching"><a class="markdownIt-Anchor" href="#ik-matching"></a> IK Matching</h2><img src="https://i.imgur.com/iJIrrML.gif" alt="ik-match" width="800px"><p>IK Matching matches IK controllerto the joint’s transform in FK mode.For IK handle, we need to match both the top joint’s (wrist or ankle) translation and rotation value;For IK pole vector, we only need to match the mid-joint’s (elbow or knee) translation.</p><p>We already figured out how to acquire and match rotation in FK matching,which can be directly used in matching IK handle, so we’ll focus on how tomatch translation below.</p><p><a name="ik-script"></a></p><h3 id="script-2"><a class="markdownIt-Anchor" href="#script-2"></a> Script</h3><ol><li><p>obtain the <strong>world space</strong> translation of the joint whileit is still in FK mode</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># in FK mode</span></span><br><span class="line">translation = cmds.xform(jnt, t=<span class="number">1</span>, ws=<span class="number">1</span>, q=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></li><li><p>switch to IK mode and apply the <strong>world space</strong> translation onto the IK Handle</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># in IK mode</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">snap_ik_to_jnt</span>(<span class="params">ik, target_pos</span>):</span></span><br><span class="line">    cmds.xform(ik, t=target_pos, ws=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></li></ol><p><a name="ik-operation"></a></p><h3 id="maya-operation-2"><a class="markdownIt-Anchor" href="#maya-operation-2"></a> Maya Operation</h3><p>Similar to FK matching, we create a match node that inherits thetarget joint’s transformation in FK mode;Then we use it to parent constraint the IK handles (position constraint the IK pole)without maintain offset.Once the IKs snaps to the target position, we then safely delete the constraint and the match node.</p><h3 id="pole-vector-one-step-further"><a class="markdownIt-Anchor" href="#pole-vector-one-step-further"></a> Pole Vector: One Step Further</h3><p>In the example above, IK pole vector will directly snap on top of the elbow or knee joint.Doing so will achieve the IK matching effect, but we often want the pole vector to extenda little further outwards, this gives more room for animators and avoids joint flipping.</p><p>To extend the pole vector outwards, we need to acquire the directional vectorfrom mid-point of the root and top joint of the rig chain to the mid-joint.</p><img src="https://i.imgur.com/pIPPm2t.png" width="500px" alt="ik-pole"><p>It is easier to achieve this through script:</p><ol><li><p>convert positional value to vector as Maya doesn’t support operationon position (represented as <code>list[3]</code>)</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root_vec = Vector3(root_pos)</span><br><span class="line">mid_vec = Vector3(mid_pos)</span><br><span class="line">top_vec = Vector3(top_pos)</span><br><span class="line"></span><br><span class="line"><span class="comment"># alternatively, use maya&#x27;s built-in MVector</span></span><br><span class="line"><span class="keyword">from</span> maya.api <span class="keyword">import</span> OpenMaya <span class="keyword">as</span> om</span><br><span class="line">vec = om.MVector(pos[<span class="number">0</span>], pos[<span class="number">1</span>], pos[<span class="number">2</span>])</span><br></pre></td></tr></table></figure></li><li><p>find the mid-point between the root joint and the top joint</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mid_point = (root_vec + top_vec) * <span class="number">0.5</span></span><br></pre></td></tr></table></figure></li><li><p>find the directional vector from mid-point to the mid-joint</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pole_dir = mid_pos - mid_point</span><br></pre></td></tr></table></figure></li><li><p>the pole vector’s target position can be found by extending this directionalvector beyond the mid-joint position with an arbitrary multiplier</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pole_pos = mid_pos + (pole_dir * multiplier)</span><br></pre></td></tr></table></figure></li></ol><h2 id="further-reading"><a class="markdownIt-Anchor" href="#further-reading"></a> Further Reading</h2><p>The above matching logics aren’t bulletproof. What???!!</p><img src="https://i.imgur.com/qgvTH55.gif" width="600px" alt="wrong"><p>Yeah, because not long after releasing my <a href="https://github.com/leixingyu/snapTool">Snap tool</a>,Squirrel Daph found the tool not behaving correctly andkindly sent me the rig for further testing.</p><p>After some troubleshooting, I found that because I built the tool around my auto-generated rig,so there are many things I didn’t account for.The following sections aim to overcome some of my Snap tool’s previous limitations.</p><h3 id="transformation-matrix"><a class="markdownIt-Anchor" href="#transformation-matrix"></a> Transformation Matrix</h3><p>Transformation matrix are commonly used in Computer Graphics,it can be used to represent an object’s transformation in 3D world; Itis an extremely useful knowledge to have in terms of rigging.</p><p>Maya has many built-in ways get the matrix representation of a node’s transformation.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_matrix</span>(<span class="params">node, is_world=<span class="number">1</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> om.MMatrix(</span><br><span class="line">        cmds.xform(node, q=<span class="number">1</span>, matrix=<span class="number">1</span>, ws=is_world, os=<span class="keyword">not</span> is_world)</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p>Converting the Maya matrix representation <code>MMatrix</code> to <code>MTransformationMatrix</code>,gives access to more built-in functions including <a href="#decomposing-matrix">decomposition</a>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mxform_matrix = om.MTransformationMatrix(mmatrix)</span><br></pre></td></tr></table></figure><p>Or construct by using function set <code>MFnTransform</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_transform_matrix</span>(<span class="params">dag_node</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Get the local transformation matrix of a given dag node</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param dag_node: om.MObject. input maya dag node</span></span><br><span class="line"><span class="string">    :return: om.MTransformationMatrix. local transformation matrix</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    fn_transform = om.MFnTransform(dag_node)</span><br><span class="line">    <span class="keyword">return</span> fn_transform.transformation()</span><br></pre></td></tr></table></figure><p>The differences between <code>om.MMatrix</code> and <code>om.MTransformationMatrix</code>:</p><ul><li><code>om.MMatrix</code> constructed by <code>cmds.xform</code> has access to both local and worldtransformation matrix, but unable to track rotation greater than 360 degrees.</li><li><code>om.MTransformationMatrix</code> using <code>MFnTransform</code> only gets local transformationmatrix, but it stores rotation information greater than 360 degrees.</li></ul><h3 id="translation-offset"><a class="markdownIt-Anchor" href="#translation-offset"></a> Translation Offset</h3><p>When there’s world space offset between IK controller and joint,we would want to account for the offset when calculating the IK result position.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jnt_pos = Vector(cmds.xform(jnt, ws=<span class="number">1</span>, q=<span class="number">1</span>, t=<span class="number">1</span>))</span><br><span class="line">ik_pos = Vector(cmds.xform(ik, ws=<span class="number">1</span>, q=<span class="number">1</span>, t=<span class="number">1</span>))</span><br><span class="line">offset = jnt_pos - ik_pos</span><br><span class="line"></span><br><span class="line">ik_target_pos = jnt_target_pos - offset</span><br></pre></td></tr></table></figure><h3 id="rotation-offset"><a class="markdownIt-Anchor" href="#rotation-offset"></a> Rotation Offset</h3><p>Rotational offset can be caused by axis in-alignment during constraints,we’ll need to use matrix multiplication to find it instead of simple vector math.</p><img src="https://i.imgur.com/czn3XY1.gif" width="1000px" alt="axis-align"><p>Example of rotation offset between joint and controller</p><h4 id="pre-multiplying-matrix"><a class="markdownIt-Anchor" href="#pre-multiplying-matrix"></a> Pre-multiplying Matrix</h4><blockquote><p>Important:</p><ul><li>the order of matrix multiplication matters</li><li>to get a unit matrix, instead of dividing matrix, wemultiply its inverse matrix</li></ul></blockquote><p>Joint transformation is the result of controller constraints, in whichthe constraint matrix serves as a pre-multiplication matrix.</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>j</mi><mi>o</mi><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo>=</mo><msub><mi>M</mi><mrow><mi>c</mi><mi>o</mi><mi>n</mi><mi>s</mi><mi>t</mi></mrow></msub><mo>∗</mo><msub><mi>M</mi><mrow><mi>c</mi><mi>t</mi><mi>r</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">M_{joint} = M_{const} * M_{ctrl}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>We are then able to get the constraint matrix by post-multiplying the inverseof controller matrix.</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>j</mi><mi>o</mi><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo>∗</mo><msubsup><mi>M</mi><mrow><mi>c</mi><mi>t</mi><mi>r</mi><mi>l</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo>=</mo><msub><mi>M</mi><mrow><mi>c</mi><mi>o</mi><mi>n</mi><mi>s</mi><mi>t</mi></mrow></msub><mo>∗</mo><msub><mi>M</mi><mrow><mi>c</mi><mi>t</mi><mi>r</mi><mi>l</mi></mrow></msub><mo>∗</mo><msubsup><mi>M</mi><mrow><mi>c</mi><mi>t</mi><mi>r</mi><mi>l</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">{M_{joint}} * M_{ctrl}^{-1} = M_{const} * M_{ctrl} * M_{ctrl}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1555469999999999em;vertical-align:-0.2914389999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.408561em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2914389999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1555469999999999em;vertical-align:-0.2914389999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.408561em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2914389999999999em;"><span></span></span></span></span></span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>c</mi><mi>o</mi><mi>n</mi><mi>s</mi><mi>t</mi></mrow></msub><mo>=</mo><msub><mi>M</mi><mrow><mi>j</mi><mi>o</mi><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub><mo>∗</mo><msubsup><mi>M</mi><mrow><mi>c</mi><mi>t</mi><mi>r</mi><mi>l</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">M_{const} = {M_{joint}} * M_{ctrl}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1555469999999999em;vertical-align:-0.2914389999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.408561em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2914389999999999em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>In the function below, the result matrix argument would be the joint matrix,and source matrix argument would be the controller matrix.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_pre_mult_matrix</span>(<span class="params">result_mat, source_mat</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Get pre-multiplying matrix</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    :param result_mat: om.MMatrix. the result matrix after multiplication</span></span><br><span class="line"><span class="string">    :param source_mat: om.MMatrix. the source matrix used in pre multiplying</span></span><br><span class="line"><span class="string">    :return: om.MMatrix. matrix used in pre multiplication</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> result_mat * source_mat.inverse()</span><br></pre></td></tr></table></figure><p>Similar process, we are able to find the target controller’s transform based offthe rotational offset and the target joint transform.</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>c</mi><mi>t</mi><mi>r</mi><mi>l</mi></mrow></msub><mo>=</mo><msubsup><mi>M</mi><mrow><mi>c</mi><mi>o</mi><mi>n</mi><mi>s</mi><mi>t</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo>∗</mo><msub><mi>M</mi><mrow><mi>j</mi><mi>o</mi><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">M_{ctrl} = M_{const}^{-1} * {M_{joint}} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1111079999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h4 id="implementation"><a class="markdownIt-Anchor" href="#implementation"></a> Implementation</h4><p>Bringing this back to the context of our IK matching process:</p><p>We know the <strong>current controller</strong> rotation and <strong>current joint</strong> rotation, this will give us theconstraint matrix (rotational offset),</p><p>We also know the <strong>target joint</strong> rotation in world space,Therefore, we can convert this <strong>target joint</strong> rotation to <strong>target controller</strong> rotation in world space.</p><p>Now through script:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1: obtain the constraint matrix</span></span><br><span class="line">current_jnt_rot = matrix.get_matrix(jnt)</span><br><span class="line">current_fk_rot = matrix.get_matrix(fk)</span><br><span class="line">cons_mat = matrix.get_pre_mult_matrix(current_jnt_rot, current_fk_rot)</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2: get controller&#x27;s target matrix </span></span><br><span class="line">target_ctrl_mat = om.MTransformationMatrix(</span><br><span class="line">  cons_mat.inverse() * target_jnt_mat</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>We can later <a href="#rotation">extract the rotation data</a> from the transformation matrix.</p><h3 id="model-matrix"><a class="markdownIt-Anchor" href="#model-matrix"></a> Model Matrix</h3><p>Model matrix converts transformation matrix from world space to object space,this has no direct usage in the IK/FK matching, as <code>cmds.xform()</code> alreadydoes the work for us. But it’s good to cover as it is very relevant.</p><h4 id="post-multiplying-matrix"><a class="markdownIt-Anchor" href="#post-multiplying-matrix"></a> Post-multiplying Matrix</h4><p>Model matrix is a post-multiplying matrix:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>w</mi><mi>o</mi><mi>r</mi><mi>l</mi><mi>d</mi></mrow></msub><mo>=</mo><msub><mi>M</mi><mrow><mi>l</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>l</mi></mrow></msub><mo>∗</mo><msub><mi>M</mi><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">M_{world} = M_{local} * M_{model}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>We now pre-multiply the inverse of the local transform matrix:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>M</mi><mrow><mi>l</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>l</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo>∗</mo><msub><mi>M</mi><mrow><mi>w</mi><mi>o</mi><mi>r</mi><mi>l</mi><mi>d</mi></mrow></msub><mo>=</mo><msubsup><mi>M</mi><mrow><mi>l</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>l</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo>∗</mo><msub><mi>M</mi><mrow><mi>l</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>l</mi></mrow></msub><mo>∗</mo><msub><mi>M</mi><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">M_{local}^{-1} * M_{world} = M_{local}^{-1} * M_{local} * M_{model}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1555469999999999em;vertical-align:-0.2914389999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.408561em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2914389999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1555469999999999em;vertical-align:-0.2914389999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.408561em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2914389999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi>l</mi></mrow></msub><mo>=</mo><msubsup><mi>M</mi><mrow><mi>l</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>l</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo>∗</mo><msub><mi>M</mi><mrow><mi>w</mi><mi>o</mi><mi>r</mi><mi>l</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">M_{model} = M_{local}^{-1} *{M_{world}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1555469999999999em;vertical-align:-0.2914389999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.408561em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2914389999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>So similarly we can create the following function, with the result matrix argumentbeing the world transform matrix,and source matrix argument being the local transform matrix.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_post_mult_matrix</span>(<span class="params">result_mat, source_mat</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Get post multiplying matrix</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param result_mat: om.MMatrix. the result matrix after multiplication</span></span><br><span class="line"><span class="string">    :param source_mat: om.MMatrix. the source matrix used in post multiplying</span></span><br><span class="line"><span class="string">    :return: om.MMatrix. matrix used in post multiplication</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> source_mat.inverse() * result_mat</span><br></pre></td></tr></table></figure><h3 id="decomposing-matrix"><a class="markdownIt-Anchor" href="#decomposing-matrix"></a> Decomposing Matrix</h3><p>Decomposing a transformation matrix (<code>om.MTransformationMatrix</code>) refers toacquiring translation, rotation and scale values as individual <code>list[3]</code> type.These values can now be applied using <code>cmds.xform()</code> either in local space orin world space depending on the input transformation matrix.</p><h4 id="translation"><a class="markdownIt-Anchor" href="#translation"></a> Translation</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">translation = matrix.translation(om.MSpace.kWorld)</span><br></pre></td></tr></table></figure><h4 id="scale"><a class="markdownIt-Anchor" href="#scale"></a> Scale</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scale = matrix.scale(om.MSpace.kWorld)</span><br></pre></td></tr></table></figure><h4 id="rotation"><a class="markdownIt-Anchor" href="#rotation"></a> Rotation</h4><p>Extract rotation in axis angles in default <strong>xyz</strong> rotation order.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">rot_vec = matrix.rotation().asVector()</span><br><span class="line">rotation = [math.degrees(angle) <span class="keyword">for</span> angle <span class="keyword">in</span> (rot_vec.x, rot_vec.y, rot_vec.z)]</span><br></pre></td></tr></table></figure><h2 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h2><p><a href="http://discourse.techart.online/t/convert-world-space-coordinates-to-object-space-coordinates-in-maya/">Tech Artists Org - Convert world space coordinates to object space coordinates in Maya?</a></p><p><a href="https://math.stackexchange.com/questions/237369/">Stack Exchange - Given this transformation matrix, how do I decompose it into translation, rotation and scale matrices?</a></p><p><a href="https://www.akeric.com/blog/?p=1067">AK Eric - Find Euler rotation values of Maya matrix</a></p><p><a href="https://help.autodesk.com/view/MAYAUL/2018/ENU/?guid=__cpp_ref_class_m_fn_transform_html">Maya Help - MFnTransform Class Reference</a></p><p><a href="https://help.autodesk.com/view/MAYAUL/2018/ENU/?guid=__cpp_ref_class_m_matrix_html">Maya Help - MMatrix Class Reference</a></p><p><a href="https://help.autodesk.com/view/MAYAUL/2018/ENU/?guid=__cpp_ref_class_m_transformation_matrix_html">Maya Help - MTransformationMatrix Class Reference</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h2&gt;
&lt;p&gt;IK/FK matching refers to the ability to ma</summary>
      
    
    
    
    <category term="3d math" scheme="https://www.xingyulei.com/categories/3d-math/"/>
    
    
    <category term="maya" scheme="https://www.xingyulei.com/tags/maya/"/>
    
    <category term="python" scheme="https://www.xingyulei.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Using namedtuple</title>
    <link href="https://www.xingyulei.com/post/py-named-tuple/"/>
    <id>https://www.xingyulei.com/post/py-named-tuple/</id>
    <published>2022-01-23T05:00:00.000Z</published>
    <updated>2022-09-10T13:50:49.099Z</updated>
    
    <content type="html"><![CDATA[<p>I recently got side-tracked into exploring the basics of <code>namedtuple()</code> asI got a glimpse of its usage in our engineering codebase. Here’s my summary:</p><h2 id="mutable-and-hashable"><a class="markdownIt-Anchor" href="#mutable-and-hashable"></a> Mutable and Hashable</h2><p>To understand the behavior of <code>namedtuple()</code>, it is best to also visit theconcept of Python object’s mutability and hashability. These two concepts areclosely linked.</p><p><strong>Hashability</strong>: an object’s is hashable when its hash value never changed during its lifetime</p><blockquote><p>Most of Python’s immutable built-in objects are hashable;mutable containers (such as lists or dictionaries) are not;immutable containers (such as tuples and frozensets)are only hashable if their elements are hashable.<strong>Objects</strong> which are <strong>instances</strong> of user-defined classes are hashable by default</p></blockquote><p><strong>Mutability</strong>: an object with a fixed value and cannot be altered is immutable(For example: <code>int</code>, <code>float</code>, <code>string</code>, <code>tuple</code>).in contrast, an object can keep its value while keeping its <code>id()</code> is mutable.(For example: <code>list</code>, <code>dict</code>)</p><h3 id="hash-and-id"><a class="markdownIt-Anchor" href="#hash-and-id"></a> <code>hash()</code> and <code>id()</code></h3><p><strong>identity</strong>: <code>id()</code>, the identity of the two same value variables are the sameIf two objects (that exist at the same time) have the same identity, they’re actually two references to the same object.</p><blockquote><p>The <code>is</code> operator compares items by identity, <code>a is b</code> is equivalent to <code>id(a) == id(b)</code>.</p></blockquote><p><strong>hash value</strong>: <code>hash()</code>, hash value is based off an object’s value, and hash valuemust remain the same for the lifetime of the object. If an object is mutable,then it doesn’t make sense for it to have hash.</p><blockquote><p>The hash value is an integer which is used to quickly compare dictionary keys or sets.</p></blockquote><h3 id="why-hash"><a class="markdownIt-Anchor" href="#why-hash"></a> Why Hash?</h3><p>Hash values are very useful, as they enable quick look-up of valuesin a large collection of values, it’s commonly used in <code>set</code> and <code>dict</code>.</p><p>with <code>if x in elements:</code>:</p><ul><li><p>In a <code>list</code>, Python needs to go through the whole listand compare <code>x</code>'s value with each value in the list elements.</p></li><li><p>In a <code>set</code>, Python keeps track of each element’s hash,Python will get the hash-value for <code>x</code>,look that up in an internal structure and find elements that have the same hash as <code>x</code>.</p></li></ul><p>It also means you can have non-hashable objects in a <code>list</code>,but not in a <code>set</code> or as <strong>keys</strong> in a <code>dict</code>.</p><p><a name='hash-example'></a></p><h3 id="example"><a class="markdownIt-Anchor" href="#example"></a> Example:</h3><p>There is no way to change an <code>int</code> object’s value without re-assigning (copy) itto a different object.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">5</span></span><br><span class="line"><span class="comment"># id(x) is equal to 3054677212104</span></span><br><span class="line">x = <span class="number">6</span></span><br><span class="line"><span class="comment"># id(x) is equal to 3054677212080</span></span><br></pre></td></tr></table></figure><p>But for <code>list</code>, you can edit its value after assignment while keeping its <code>id()</code>the same. (note: use <code>list</code> built-in function rather than re-assignment,this is the same for <code>x.sort</code> vs. <code>x=sorted(x)</code>)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">5</span>]</span><br><span class="line"><span class="comment"># ORIGINAL: id(x) is equal to 3054706521672</span></span><br><span class="line">x.append(<span class="number">6</span>)</span><br><span class="line"><span class="comment"># CORRECT: id(x) is equal to 3054706521672</span></span><br><span class="line">x = [<span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"><span class="comment"># WRONG: id(x) is equal to 3054713375816</span></span><br></pre></td></tr></table></figure><h2 id="namedtuple"><a class="markdownIt-Anchor" href="#namedtuple"></a> NamedTuple</h2><p>A data class are just regular classes that are geared towards storing state,rather than containing a lot of logic, <code>namedtuple()</code> is one kind of data classes.</p><blockquote><p>Every time you create a class that mostly consists of attributes, you make a data class.</p></blockquote><p>With <code>namedtuple()</code>, you can create <strong>immutable</strong> sequence typesthat allow you to access their values using descriptive field namesand the dot notation instead of unclear integer indices.</p><h3 id="initialization"><a class="markdownIt-Anchor" href="#initialization"></a> Initialization</h3><ol><li><strong>typename</strong>: <code>str</code>, class name of the <code>namedtuple</code></li><li><strong>field names</strong>: names that are used to access values in the <code>namedtuple</code>, it can be declared using any of the following:<ul><li>iterable of strings: [“a”, “b”, “c”]</li><li>a string with name seperated by white spaces: “a b c”</li><li>a string with name separated by commas: “a, b, c”</li></ul></li></ol><p>Example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</span><br><span class="line"></span><br><span class="line">Point = namedtuple(<span class="string">&quot;Point&quot;</span>, [<span class="string">&quot;x&quot;</span>, <span class="string">&quot;y&quot;</span>])</span><br><span class="line"></span><br><span class="line">&gt;&gt; Point</span><br><span class="line"><span class="comment"># &lt;class &#x27;__main__.Point&#x27;&gt;</span></span><br><span class="line">&gt;&gt; Point(<span class="number">2</span>, <span class="number">4</span>)</span><br><span class="line"><span class="comment"># Point(x=2, y=4)</span></span><br></pre></td></tr></table></figure><h3 id="access-and-edit-value"><a class="markdownIt-Anchor" href="#access-and-edit-value"></a> Access and Edit Value</h3><p>It is very straight-forward to access a tuple’s attribute value using dot notation</p><p>this gives <code>namedtuple</code> a great edge against <code>dict</code> or <code>tuple</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Person = namedtuple(<span class="string">&#x27;Person&#x27;</span>, <span class="string">&#x27;name children&#x27;</span>)</span><br><span class="line">jj = Person(<span class="string">&#x27;Johnny J&#x27;</span>, [<span class="string">&#x27;Tobby&#x27;</span>])</span><br><span class="line"></span><br><span class="line">&gt;&gt; jj.children</span><br><span class="line"><span class="comment"># [&#x27;Tobby&#x27;]</span></span><br></pre></td></tr></table></figure><p>Since <code>namedtuple</code> is immutable, you can’t assign value to its attribute;what you can do is to use <code>._replace()</code>; and also, its value can be mutable, likea <code>list</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; jj.children = [<span class="string">&#x27;Tobby&#x27;</span>, <span class="string">&#x27;Wang&#x27;</span>]</span><br><span class="line"><span class="comment"># AttributeError: can&#x27;t set attribute</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; jj.children.append(<span class="string">&#x27;Wang&#x27;</span>)</span><br><span class="line"><span class="comment"># Correct</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; jj = jj._replace(name=<span class="string">&#x27;John J&#x27;</span>)</span><br><span class="line"><span class="comment"># Correct</span></span><br></pre></td></tr></table></figure><h3 id="using-_asdict"><a class="markdownIt-Anchor" href="#using-_asdict"></a> Using <code>._asdict()</code></h3><p>The built-in function <code>._asdict()</code> converts <code>namedtuple</code> into a dictionary.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Person = namedtuple(<span class="string">&quot;Person&quot;</span>, <span class="string">&quot;name age height&quot;</span>)</span><br><span class="line">jane = Person(<span class="string">&quot;Jane&quot;</span>, <span class="number">25</span>, <span class="number">1.75</span>)</span><br><span class="line"></span><br><span class="line">&gt;&gt; jane._asdict()</span><br><span class="line"><span class="comment"># &#123;&#x27;name&#x27;: &#x27;Jane&#x27;, &#x27;age&#x27;: 25, &#x27;height&#x27;: 1.75&#125;</span></span><br></pre></td></tr></table></figure><p>and to generate a namedtuple object from dictionary</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;</span><br><span class="line">   <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Jane&#x27;</span>,</span><br><span class="line">   <span class="string">&#x27;age&#x27;</span>: <span class="number">25</span>,</span><br><span class="line">   <span class="string">&#x27;height&#x27;</span>: <span class="number">1.75</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">jane = Person(**d)</span><br></pre></td></tr></table></figure><h2 id="dataclass"><a class="markdownIt-Anchor" href="#dataclass"></a> <code>@dataclass</code></h2><p><code>@dataclass</code> came out after Python 3.7, which is similar to <code>namedtuple</code>, but they are mutable.thus, we can set value to a <code>@dataclass</code> attribute.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> dataclasses <span class="keyword">import</span> dataclass</span><br><span class="line"></span><br><span class="line"><span class="meta">@dataclass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    age: <span class="built_in">int</span></span><br><span class="line">    country: <span class="built_in">str</span> = <span class="string">&quot;Canada&quot;</span></span><br><span class="line"></span><br><span class="line">jane = Person(<span class="string">&quot;Jane&quot;</span>, <span class="number">25</span>)</span><br><span class="line"></span><br><span class="line">&gt;&gt; jane.name = <span class="string">&quot;Jane Doe&quot;</span></span><br><span class="line">&gt;&gt; jane.name</span><br><span class="line"><span class="string">&#x27;Jane Doe&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="frozen-attribute"><a class="markdownIt-Anchor" href="#frozen-attribute"></a> frozen attribute</h3><p>if we want <code>@dataclass</code> to behave like <code>namedtuple</code> with an un-editable “protected” attribute,just use <code>@dataclass(frozen=True)</code>.</p><h3 id="override-__iter__"><a class="markdownIt-Anchor" href="#override-__iter__"></a> override <code>__iter__()</code></h3><p><code>@dataclass</code> are also not iterable by default, unlike <code>namedtuple</code>. We can achievethat by implementing the special method <code>.__iter__()</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> dataclasses <span class="keyword">import</span> astuple, dataclass</span><br><span class="line"></span><br><span class="line"><span class="meta">@dataclass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">   ...</span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">iter</span>(astuple(self))</span><br></pre></td></tr></table></figure><h2 id="subclassing-namedtuple"><a class="markdownIt-Anchor" href="#subclassing-namedtuple"></a> Subclassing <code>namedtuple</code></h2><p>Subclassing <code>namedtuple</code> gives us additional functionality.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">BasePerson = namedtuple(<span class="string">&quot;BasePerson&quot;</span>, <span class="string">&quot;name birthdate country&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>(<span class="params">BasePerson</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;A namedtuple subclass to hold a person&#x27;s data.&quot;&quot;&quot;</span></span><br><span class="line">    __slots__ = ()</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Name: &#123;&#125;, age: &#123;&#125; years old&quot;</span>.<span class="built_in">format</span>(self.name, self.age)</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> (date.today() - self.birthdate).days // <span class="number">365</span></span><br></pre></td></tr></table></figure><p>In the above example, subclassing from <code>namedtuple</code> provides us better documentation(i.e. <code>Person.__doc__</code>), better string representation (i.e. <code>print jane</code>) and anextra property to access based off a Person’s instance attribute value.</p><h3 id="__new__-constructor"><a class="markdownIt-Anchor" href="#__new__-constructor"></a> <code>__new__()</code> constructor</h3><p><a href="http://zecong.hu/2019/08/10/inheritance-for-namedtuples/">Zechong Hu’s Blog - Inheritance for Python Namedtuples</a></p><p>To override the constructor for <code>namedtuple</code> class with default value:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">BasePerson = namedtuple(<span class="string">&quot;BasePerson&quot;</span>, [<span class="string">&quot;name&quot;</span>, <span class="string">&quot;birthdate&quot;</span> ,<span class="string">&quot;country&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>(<span class="params">BasePerson</span>):</span></span><br><span class="line">    __slots__ = ()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span>(<span class="params">cls, name, birthdate=<span class="string">&quot;2000.01.01&quot;</span>, country=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>(Person, cls).__new__(cls, name, birthdate, country)</span><br></pre></td></tr></table></figure><h3 id="__slots__"><a class="markdownIt-Anchor" href="#__slots__"></a> <code>__slots__</code></h3><p>The special attribute <code>__slots__</code> explicitly state what attribute you wantyour class instances to have.</p><p>By default, when an instance (object) is created,<code>__dict__</code> is used to store an object’s (writable) attributes.A <strong>dynamic</strong> dictionary:</p><ol><li>requires more memory</li><li>takes longer time to create.</li></ol><p>Because <code>namedtuple</code> makes immutable instances that are lightweight,we need to prevent the creation of <code>__dict__</code> to get the benefit while subclassingby setting <code>__slots__</code> as empty tuple.</p><p>In a more general note, please consider using <code>__slots__</code> when creatingtons of objects, this saves memory and time when instancing.</p><h4 id="comparison-__dict__-vs-__slots__"><a class="markdownIt-Anchor" href="#comparison-__dict__-vs-__slots__"></a> Comparison <code>__dict__</code> vs. <code>__slots__</code></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, age</span>):</span></span><br><span class="line">      self.name = name</span><br><span class="line">      self.age = age</span><br><span class="line"></span><br><span class="line">john = Person(<span class="string">&#x27;john&#x27;</span>, <span class="number">15</span>)</span><br><span class="line"></span><br><span class="line">&gt;&gt; john.__dict__</span><br><span class="line"><span class="comment"># &#123;&#x27;age&#x27;: 15, &#x27;name&#x27;: &#x27;john&#x27;&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    __slots__ = [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;age&#x27;</span>]</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, age</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">john = Person(<span class="string">&#x27;john&#x27;</span>, <span class="number">15</span>)</span><br><span class="line"></span><br><span class="line">&gt;&gt; john.__slots__</span><br><span class="line"><span class="comment"># [&#x27;name&#x27;, &#x27;age&#x27;]</span></span><br><span class="line">&gt;&gt; john.__dict__</span><br><span class="line"><span class="comment"># AttributeError: &#x27;Person&#x27; object has no attribute &#x27;__dict__&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2><p><a href="https://docs.python.org/3/glossary.html">Python Docs - Glossary</a></p><p><a href="https://medium.com/@meghamohan/mutable-and-immutable-side-of-python-c2145cf72747">Medium megha mohan - Mutable vs Immutable Objects in Python</a></p><p><a href="https://realpython.com/python-namedtuple/">Real Python - namedtuple</a></p><p><a href="https://stackoverflow.com/questions/47955263/">Stack Overflow - What are data classes and how are they different from common classes?</a></p><p><a href="https://www.geeksforgeeks.org/python-use-of-__slots__/">Geeks for Geesk - Use of __slots__</a></p><p><a href="https://stackoverflow.com/questions/472000/">Stack Overflow - Usage of __slots__?</a></p><p><a href="https://stackoverflow.com/questions/34402522">Stack Overflow - Difference between hash() and id()</a></p><p><a href="https://stackoverflow.com/questions/38189660/">Stack Overflow - Two variables in Python have same id, but not lists or tuples</a></p><p><a href="https://stackoverflow.com/questions/17585730">Stack Overflow - What does hash do in python?</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;I recently got side-tracked into exploring the basics of &lt;code&gt;namedtuple()&lt;/code&gt; as
I got a glimpse of its usage in our engineering cod</summary>
      
    
    
    
    <category term="learning log" scheme="https://www.xingyulei.com/categories/learning-log/"/>
    
    
    <category term="python" scheme="https://www.xingyulei.com/tags/python/"/>
    
    <category term="style" scheme="https://www.xingyulei.com/tags/style/"/>
    
  </entry>
  
  <entry>
    <title>Communicate with Maya (2. Streaming Output)</title>
    <link href="https://www.xingyulei.com/post/maya-streaming/"/>
    <id>https://www.xingyulei.com/post/maya-streaming/</id>
    <published>2022-01-09T05:00:00.000Z</published>
    <updated>2022-09-24T03:29:06.821Z</updated>
    
    <content type="html"><![CDATA[<h3 id="maya-connector"><a class="markdownIt-Anchor" href="#maya-connector"></a> Maya Connector</h3><p>I’ve combined the two parts together and created the end result: <a href="https://github.com/leixingyu/mayaConnector">Maya Connector</a> tool.</p><p>The tool will utilize command port to send open streaming command,which establishes the connection and enables the callback.The output is being sent back to the tool and the output is updated in the GUI.</p><p><img src="https://i.imgur.com/89SJibG.gif" alt="maya-connector" /></p><h3 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h3><blockquote><p>Make sure to see <a href="https://www.xingyulei.com/post/maya-commandport/">Part 1</a> for more context in socket programming and maya command port</p></blockquote><p>Like mentioned in the previous blog, this chapter is independent for enablingoutput streaming, but would work even better with command port to send command and get activeresponse from Maya.</p><p>This kind of log streaming feature can be helpful not only for monitoringbut for catching errors like when Maya crashes, or to connect with an IDE similar toPyCharm’s plugin <a href="https://github.com/cmcpasserby/MayaCharm">MayaCharm</a> and Sublime’s plugin<a href="https://github.com/justinfx/MayaSublime/">MayaSublime</a></p><h3 id="listening-server-separation"><a class="markdownIt-Anchor" href="#listening-server-separation"></a> Listening Server Separation</h3><p>I’ve been looking at Maya’s command port to see if the return message would besufficient for debugging log, as command port already is a server.</p><p>But it turns out that this approach is not recommended by many, as there’s littlecontrol on the return message as the TCP communication returns one message percommand, more explained in the previous blog.</p><p>The correct way suggested, and widely used is to stream Maya script output backto the external application.</p><p><img src="https://i.imgur.com/SaDOkMS.png" alt="connection graph" /></p><p>As shown in the graph, two separate communications are established instead of utilizingjust the command port.</p><ol><li>external application (client) send command to Maya’s command port (server) where Mayawould process normally. This is achieved through TCP to ensure no loss in sending command.</li><li>Maya’s <code>MCommandMessage</code> callback triggers (client) send the latest output result to external application’s listeningport (server). This is achieved through UDP to keep the connection fast and easy, but mayresult in lost in feedbacks (which isn’t that important)</li></ol><h3 id="procedures"><a class="markdownIt-Anchor" href="#procedures"></a> Procedures</h3><p>to establish listening server, need to use a different port number than the command port numberif we are also connecting to it.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SERVER = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">PORT = <span class="number">5051</span></span><br><span class="line">ADDR = (SERVER, PORT)</span><br><span class="line"></span><br><span class="line">server = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">server.bind(ADDR)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    data = server.recvfrom(<span class="number">1024</span>)</span><br><span class="line">    message = data[<span class="number">0</span>]</span><br><span class="line">    address = data[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    print(message)</span><br></pre></td></tr></table></figure><p>On the maya client side, there are two parts:</p><ol><li>setup <code>MCommendMessage</code> callback</li><li>stream the data to the listening server</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> maya.OpenMaya <span class="keyword">as</span> om</span><br><span class="line"></span><br><span class="line">SERVER = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">PORT = <span class="number">5051</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;STREAM_CALLBACK&#x27;</span> <span class="keyword">in</span> <span class="built_in">globals</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        om.MMessage.removeCallback(STREAM_CALLBACK)</span><br><span class="line">    <span class="keyword">except</span> RuntimeError:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">STREAM_CALLBACK = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">openStream</span>(<span class="params">addr=(<span class="params">SERVER, PORT</span>)</span>):</span></span><br><span class="line">    <span class="keyword">global</span> STREAM_CALLBACK</span><br><span class="line">    print(<span class="string">&quot;Enable Streaming ScriptEditor at (&#123;&#125;:&#123;&#125;)\n&quot;</span>.<span class="built_in">format</span>(addr[<span class="number">0</span>], addr[<span class="number">1</span>]))</span><br><span class="line">    STREAM_CALLBACK = om.MCommandMessage.addCommandOutputCallback(streamToConsole, addr)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">closeStream</span>():</span></span><br><span class="line">    <span class="keyword">global</span> STREAM_CALLBACK</span><br><span class="line">    print(<span class="string">&quot;Disable Streaming ScriptEditor\n&quot;</span>)</span><br><span class="line">    om.MMessage.removeCallback(STREAM_CALLBACK)</span><br><span class="line">    STREAM_CALLBACK = <span class="literal">None</span></span><br></pre></td></tr></table></figure><p>borrowed some code from <a href="">MayaSublime</a> for stringIO</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">streamToConsole</span>(<span class="params">msg, mtype, addr</span>):</span></span><br><span class="line">    buf = StringIO()</span><br><span class="line">    buf.seek(<span class="number">0</span>)</span><br><span class="line">    buf.truncate()</span><br><span class="line">    buf.write(msg)</span><br><span class="line">    buf.seek(<span class="number">0</span>)</span><br><span class="line">    <span class="comment"># start with trying to send 8kb packets</span></span><br><span class="line">    bufsize = <span class="number">8</span>*<span class="number">1024</span></span><br><span class="line">    <span class="comment"># loop until the buffer is empty</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">while</span> bufsize &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># save our position in case we error and need to roll back</span></span><br><span class="line">            pos = buf.tell()</span><br><span class="line"></span><br><span class="line">            part = buf.read(bufsize)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> part:</span><br><span class="line">                <span class="comment"># buffer is empty. Nothing else to send</span></span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                client.sendto(part, addr)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">if</span> e.errno == errno.EMSGSIZE:</span><br><span class="line">                    <span class="comment"># we have hit a message size limit. </span></span><br><span class="line">                    <span class="comment"># scale down and try the packet again</span></span><br><span class="line">                    bufsize /= <span class="number">2</span></span><br><span class="line">                    buf.seek(pos)</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="comment"># some other error</span></span><br><span class="line">                <span class="keyword">raise</span></span><br><span class="line">            <span class="comment"># message sent without error</span></span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h4 id="message-type"><a class="markdownIt-Anchor" href="#message-type"></a> Message Type</h4><p>Command message type support:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> mtype == om.MCommandMessage.kWarning:</span><br><span class="line">    buf.write(<span class="string">&#x27;# Warning: &#x27;</span>)</span><br><span class="line">    buf.write(msg)</span><br><span class="line">    buf.write(<span class="string">&#x27; #\n&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> mtype == om.MCommandMessage.kError:</span><br><span class="line">    buf.write(<span class="string">&#x27;// Error: &#x27;</span>)</span><br><span class="line">    buf.write(msg)</span><br><span class="line">    buf.write(<span class="string">&#x27; //\n&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> mtype == om.MCommandMessage.kResult:</span><br><span class="line">    buf.write(<span class="string">&#x27;# Result: &#x27;</span>)</span><br><span class="line">    buf.write(msg)</span><br><span class="line">    buf.write(<span class="string">&#x27; #\n&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    buf.write(msg)</span><br></pre></td></tr></table></figure><h4 id="logging-gui"><a class="markdownIt-Anchor" href="#logging-gui"></a> Logging GUI</h4><p>Like a logger, instead of sending output string to standard output, I createda <code>QPlainTextEdit</code> and use <code>insertPlainText(string)</code> to display it.We opened a thread to receive data, so that we still have control over the main tool, andcan send command to maya if wanted.</p><p><strong>Note</strong>: we shouldn’t update the GUI in the listening thread, instead we emita custom signal and pass the return message as argument,we then create a custom slot to handle GUI update.</p><p>so instead of doing:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    data = server.recvfrom(<span class="number">1024</span>)</span><br><span class="line">    message = data[<span class="number">0</span>]</span><br><span class="line">    self.ui_text_edit.insertPlainText(message)</span><br></pre></td></tr></table></figure><p>we should be doing:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    data = server.recvfrom(<span class="number">1024</span>)</span><br><span class="line">    message = data[<span class="number">0</span>]</span><br><span class="line">    self.message_received.emit(message)</span><br></pre></td></tr></table></figure><h4 id="clean-up"><a class="markdownIt-Anchor" href="#clean-up"></a> Clean up</h4><p>During application close, we need to do the following clean up:</p><ol><li>send command to Maya to remove the callback</li><li>close the tool’s UDP listening server</li><li>end the thread to the listening server</li></ol><h3 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h3><p><a href="https://help.autodesk.com/view/MAYAUL/2016/ENU/?guid=__py_ref_class_open_maya_1_1_m_command_message_html">Maya Help - OpenMaya.MCommandMessage Class Reference</a></p><p><a href="https://groups.google.com/g/python_inside_maya/c/pp_E7rCs7d0">Google Groups - Extracting data from Output Window</a></p><p><a href="https://github.com/cmcpasserby/MayaCharm">Github - MayaCharm</a></p><p><a href="https://github.com/justinfx/MayaSublime/">Github - MayaSublime</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;maya-connector&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#maya-connector&quot;&gt;&lt;/a&gt; Maya Connector&lt;/h3&gt;
&lt;p&gt;I’ve combined the two parts together</summary>
      
    
    
    
    <category term="maya communication" scheme="https://www.xingyulei.com/categories/maya-communication/"/>
    
    
    <category term="maya" scheme="https://www.xingyulei.com/tags/maya/"/>
    
    <category term="python" scheme="https://www.xingyulei.com/tags/python/"/>
    
    <category term="socket" scheme="https://www.xingyulei.com/tags/socket/"/>
    
    <category term="threading" scheme="https://www.xingyulei.com/tags/threading/"/>
    
  </entry>
  
  <entry>
    <title>Communicate with Maya (1. Command Port)</title>
    <link href="https://www.xingyulei.com/post/maya-commandport/"/>
    <id>https://www.xingyulei.com/post/maya-commandport/</id>
    <published>2021-12-17T05:00:00.000Z</published>
    <updated>2022-09-10T13:53:07.062Z</updated>
    
    <content type="html"><![CDATA[<h2 id="maya-connector"><a class="markdownIt-Anchor" href="#maya-connector"></a> Maya Connector</h2><p>The end result of this two-part blog is the <a href="https://github.com/leixingyu/mayaConnector">Maya Connector</a> tool.</p><p>This external standalone tool is able to send command to maya and receivereal-time feedback from maya’s script editor output.</p><p><img src="https://i.imgur.com/89SJibG.gif" alt="maya-connector" /></p><h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><blockquote><p>If you are already familiar with maya command port and socket programming, skip to<a href="https://www.xingyulei.com/post/maya-streaming/">Part 2</a> for Maya output streaming.</p></blockquote><p>Although there are a lot of tools that can run internally in Maya which facilitatethe pipeline. The capability of communicating (monitor and control) with Maya externally is very handy.</p><p>Why? we sometime don’t need to interact with Maya GUI directly or have way toomany maya instances to manage. examples are:</p><ul><li>sending cross-application remote command to active maya sessions or syncing between different maya sessions</li><li>batch processing on either maya standalone sessions or active maya sessions</li></ul><p>This requires two components which I will be covering:</p><ol><li>command port: sending commands to maya to execute</li><li>output streaming: actively listening/receiving maya outputs (next blog)</li></ol><p>These two parts can work independently, but are powerful as a whole. Also, referencesin creating <a href="https://www.xingyulei.com/post/maya-batch-mode/">maya standalone sessions</a></p><h2 id="using-cmdscommandport"><a class="markdownIt-Anchor" href="#using-cmdscommandport"></a> Using <code>cmds.commandPort()</code></h2><blockquote><p><a href="https://help.autodesk.com/cloudhelp/2018/ENU/Maya-Tech-Docs/CommandsPython/">cmds.commandPort()</a>:The command port comprises a socket to which a client program may connect</p></blockquote><p>Traditional socket connection provides the basic communication betweenclient and server.But Maya’s built-in command port provides us a very convenient way of sending command for mayato execute.</p><h2 id="procedures"><a class="markdownIt-Anchor" href="#procedures"></a> Procedures</h2><ol><li>Open command port</li></ol><p>The port needs to be opened on Maya’s (server) end first in order for clientto send command; ideally this would be achieved by adding a <code>cmds.commandPort()</code> openduring Maya startup.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> maya.cmds <span class="keyword">as</span> cmds</span><br><span class="line">port = <span class="number">5050</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> cmds.commandPort(<span class="string">&quot;:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(port), query=<span class="literal">True</span>):</span><br><span class="line">    cmds.commandPort(name=<span class="string">&quot;:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(port))</span><br></pre></td></tr></table></figure><ol start="2"><li>Send command through an external application</li></ol><p>the command sent can be either <code>MEL</code> or <code>Python</code> command which must be specified duringthe opening the port determined by <code>sourceType</code> flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># the local host</span></span><br><span class="line">HOST = <span class="string">&#x27;127.0.0.1&#x27;</span> </span><br><span class="line">PORT = <span class="number">5050</span></span><br><span class="line">ADDR = (HOST, PORT)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendCommand</span>():</span></span><br><span class="line">    client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    client.connect(ADDR)</span><br><span class="line">    command = <span class="string">&#x27;polyCube()&#x27;</span></span><br><span class="line">    client.send(command)</span><br><span class="line">    client.close()</span><br></pre></td></tr></table></figure><h3 id="tcp-return-message"><a class="markdownIt-Anchor" href="#tcp-return-message"></a> TCP Return Message</h3><p>We are using <strong>TCP</strong> for our communication protocol to guarantee command being sentwhen the connection is established successfully.</p><blockquote><p><strong>Important:</strong>At this point, we are not attempting to use <code>client.recv(xxx)</code> for data returningfrom Maya, unless it’s a super simple single statement.</p></blockquote><p>Trying to use <code>client.recv(xxx)</code> will result in either <code>None</code> data returned or singlereturn as it is the behaviour of <strong>TCP</strong>. <a href="https://stackoverflow.com/questions/10434525/c-socket-programming-only-receiving-one-line-at-a-time">See here</a></p><p>Also sending command line by line is not reliable as there are no context betweenlines for Maya server to understand. <a href="https://forums.cgsociety.org/t/telnet-or-socket-no-result-back-from-maya/1730817/2">Unless it’s super simple series of commands</a></p><p>In order to receive output, we need a custom listening server to do that which is explained in <a href="https://www.xingyulei.com/post/maya-streaming">Part 2</a>.</p><h3 id="sourcetype"><a class="markdownIt-Anchor" href="#sourcetype"></a> SourceType</h3><p>We are opening a default command port which takes <code>MEL</code> input,we don’t need to specify <code>Python</code> as source type, as we can just use <code>python(&quot;[insert command here]&quot;)</code>to wrap it into <code>MEL</code>, this can be blocks of independent codes or importingand executing python files.</p><h3 id="mixed-quotation-symbol"><a class="markdownIt-Anchor" href="#mixed-quotation-symbol"></a> Mixed Quotation symbol</h3><p>Note that when doing a source type conversion with a string type command, quotation symbol may cause conflicts.</p><p>the solution is to replace it with backslash before quotation symbol.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">command = <span class="string">&#x27;python(&quot;&#x27;</span> + command.replace(<span class="string">r&#x27;&quot;&#x27;</span>, <span class="string">r&#x27;\&quot;&#x27;</span>) + <span class="string">&#x27;&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="socket-programming-introduction"><a class="markdownIt-Anchor" href="#socket-programming-introduction"></a> Socket Programming Introduction</h2><p>It is also very helpful to know the basics of socket programming in Pythonto better understand how server and client communicates, and the differencebetween TCP and UDP, which will be used in the next part.</p><p>This <a href="https://youtu.be/3QiPPX-KeSc">tutorial</a> is very handy, and the followingare a basic template for setting up client and server using <code>socket</code> and <code>thread</code></p><script src="https://gist.github.com/leixingyu/f4b4d6ca7b84cf01af5311857219295e.js"></script><script src="https://gist.github.com/leixingyu/5e55f23113c0280ab5ab16595bda900d.js"></script><h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2><p><a href="https://groups.google.com/g/python_inside_maya/c/7AgWlldtvbE/m/zUTQlAcjBgAJ?pli=1">Google Group - Receiving data from commandPort</a></p><p><a href="https://stackoverflow.com/questions/10434525">Stack Overflow - c socket programming, only receiving one line at a time</a></p><p><a href="https://forums.cgsociety.org/t/telnet-or-socket-no-result-back-from-maya/1730817/2">CG Talk - Telnet or Socket: no result back from Maya</a></p><p><a href="https://youtu.be/3QiPPX-KeSc">Youtube - Python Socket Programming Tutorial</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;maya-connector&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#maya-connector&quot;&gt;&lt;/a&gt; Maya Connector&lt;/h2&gt;
&lt;p&gt;The end result of this two-part blog</summary>
      
    
    
    
    <category term="maya communication" scheme="https://www.xingyulei.com/categories/maya-communication/"/>
    
    
    <category term="maya" scheme="https://www.xingyulei.com/tags/maya/"/>
    
    <category term="python" scheme="https://www.xingyulei.com/tags/python/"/>
    
    <category term="socket" scheme="https://www.xingyulei.com/tags/socket/"/>
    
    <category term="command port" scheme="https://www.xingyulei.com/tags/command-port/"/>
    
  </entry>
  
  <entry>
    <title>QEnum vs. QFlags</title>
    <link href="https://www.xingyulei.com/post/qt-enum-flag/"/>
    <id>https://www.xingyulei.com/post/qt-enum-flag/</id>
    <published>2021-12-06T05:00:00.000Z</published>
    <updated>2022-09-10T13:50:25.515Z</updated>
    
    <content type="html"><![CDATA[<h3 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h3><p>I often take Qt <a href="https://doc.qt.io/qt-5/qt.html">namespace</a> for granted, it becamea natural habit of setting a Qt parameter using Qt namespace, for instance:setting alignment for a <code>QStandardItem</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">item = QtGui.QStandardItem(<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line">item.setTextAlignment(QtCore.Qt.AlignRight)</span><br><span class="line"><span class="built_in">type</span>(QtCore.Qt.AlignRight)</span><br></pre></td></tr></table></figure><p>Here, the <code>Qt.AlignRight</code> is an <code>AlignmentFlag</code> Enum type object which has avalue of <code>0x0002</code> or <code>2</code>, which creates the behavior of aligning with the right edge.</p><p>Now, let’s try parsing the alignment of the <code>QStandardItem</code> again, using:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">align = item.textAlignment()</span><br><span class="line"><span class="built_in">type</span>(align)</span><br></pre></td></tr></table></figure><p>this returns a <code>PyQt5.QtCore.Alignment</code> object, which we don’t reallyknow the value of. And also note that it is not a <code>AlignmentFlag</code> object likepreviously.</p><p>So, What’s the difference between these two, and how should I retrieve the namespacevalue?</p><h3 id="qenum-and-qflags"><a class="markdownIt-Anchor" href="#qenum-and-qflags"></a> <code>QEnum</code> and <code>QFlags</code></h3><p>QFlags is used to store combinations of Enum, which provides type checking safety.thus, <code>Alignment</code> QFlags type is simply a typedef for <code>AlignmentFlag</code> QEnum.</p><ul><li><code>Qt.AlignmentFlag</code> is QEnum type; <code>AlignmentFlag</code> being the enum name</li><li><code>Qt.Alignment</code> is QFlags type; <code>Alignment</code> being the type name</li><li>there’s also non-flag enums, which have the same type and enum name</li></ul><h3 id="example"><a class="markdownIt-Anchor" href="#example"></a> Example</h3><p>Declaration of both object types</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &lt;class &#x27;PyQt5.QtCore.AlignmentFlag&#x27;&gt;</span></span><br><span class="line">align_flag = QtCore.Qt.AlignRight</span><br><span class="line">align_flag_value = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &lt;class &#x27;PyQt5.QtCore.Alignment&#x27;&gt;</span></span><br><span class="line">align = QtCore.Qt.Alignment(align_flag)</span><br><span class="line"><span class="comment"># or &lt;class &#x27;int&#x27;&gt;</span></span><br><span class="line">align = QtCore.Qt.Alignment(align_flag_value)</span><br></pre></td></tr></table></figure><p>As you can see, <code>setAlignment()</code> takes a <code>Qt.Alignment parameter</code>, which means that anycombination of <code>Qt.AlignmentFlag</code> values, or <code>int</code>, is legal.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">item = QtGui.QStandardItem(<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Alignment type is compatible with either int or AlignmentFlag(Enum)</span></span><br><span class="line"><span class="comment"># &lt;class &#x27;PyQt5.QtCore.AlignmentFlag&#x27;&gt;</span></span><br><span class="line">item.setTextAlignment(QtCore.Qt.AlignRight)</span><br><span class="line"><span class="comment"># or &lt;class &#x27;PyQt5.QtCore.Alignment&#x27;&gt;</span></span><br><span class="line">item.setTextAlignment(align)</span><br><span class="line"><span class="comment"># or &lt;class &#x27;int&#x27;&gt;</span></span><br><span class="line">item.setTextAlignment(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>The return value is QFlags type, but it can be cast to an integer type toreveal its Enum value</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &lt;class &#x27;PyQt5.QtCore.Alignment&#x27;&gt;</span></span><br><span class="line">align = pathItem.textAlignment()</span><br><span class="line"></span><br><span class="line"><span class="comment"># to get the Alignment value, convert the QFlags to int</span></span><br><span class="line"><span class="built_in">int</span>(align)</span><br></pre></td></tr></table></figure><h3 id="parse-namespace-and-value-mapping"><a class="markdownIt-Anchor" href="#parse-namespace-and-value-mapping"></a> Parse Namespace and Value Mapping</h3><p>Still not sure what the Enum value means?</p><p>you can either check the docs, oruse this to print out a mapping of the namespace and its corresponding value</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">enum_mapping</span>(<span class="params">cls, enum</span>):</span></span><br><span class="line">    mapping = <span class="built_in">dict</span>()</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> <span class="built_in">dir</span>(cls):</span><br><span class="line">        value = <span class="built_in">getattr</span>(cls, key)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(value, enum):</span><br><span class="line">            mapping[key] = value</span><br><span class="line">    <span class="keyword">return</span> mapping</span><br><span class="line"></span><br><span class="line">enum = enum_mapping(QtCore.Qt, QtCore.Qt.AlignmentFlag)</span><br><span class="line"><span class="comment"># enum = enum_mapping(QtWidgets, QtWidgets.QStyle)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> <span class="built_in">sorted</span>(enum.items(), key=<span class="built_in">str</span>):</span><br><span class="line">    print(<span class="string">&#x27;%s: %s&#x27;</span> % item)</span><br></pre></td></tr></table></figure><h3 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h3><p><a href="https://github.com/qutebrowser/qutebrowser/blob/v1.0.3/qutebrowser/utils/debug.py#L95-L131">GitHub - qutebrowser</a></p><p><a href="https://het.as.utexas.edu/HET/Software/html/qflags.html">Qt Doc - QFlags Class Reference</a></p><p><a href="https://doc.qt.io/qtforpython-5/PySide2/QtCore/QEnum.html">Qt Doc - QEnum/QFlag</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h3&gt;
&lt;p&gt;I often take Qt &lt;a href=&quot;https://doc.qt.io</summary>
      
    
    
    
    <category term="learning log" scheme="https://www.xingyulei.com/categories/learning-log/"/>
    
    
    <category term="pyqt" scheme="https://www.xingyulei.com/tags/pyqt/"/>
    
  </entry>
  
  <entry>
    <title>Find PID and End Process in Windows (Python)</title>
    <link href="https://www.xingyulei.com/post/py-end-process/"/>
    <id>https://www.xingyulei.com/post/py-end-process/</id>
    <published>2021-10-25T04:00:00.000Z</published>
    <updated>2022-11-02T03:35:21.496Z</updated>
    
    <content type="html"><![CDATA[<h3 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h3><p>Interacting with Windows shell to end process is very common,there are many ways to do so, like through the traditional batch script</p><p>but to gain more flexibility, using python is probably a better idea.</p><ul><li><code>os.system</code> is not the most elegant way to use, and it is meant to be replaced by <code>subprocess</code></li><li><code>subprocess</code> comes with Python standard library and allows you to spawn new processes, connect to their input/output/error pipes, and obtain their return codes</li><li><code>psutil</code> (python system and process utilities) is a <strong>cross-platform</strong> library for retrieving information on running processes and system utilization.However, it is a third-party library</li></ul><hr /><h3 id="bare-minimum"><a class="markdownIt-Anchor" href="#bare-minimum"></a> Bare Minimum</h3><p>the bare minimum command to kill process utilizes window’s <code>taskkill</code>;which doesn’t matter if you use <code>os.system</code> or <code>subprocess</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">PROCESS = <span class="string">&#x27;notepad.exe&#x27;</span></span><br><span class="line">STATUS = <span class="string">&#x27;running&#x27;</span>  <span class="comment"># running or not responding</span></span><br><span class="line">CMD = <span class="string">r&#x27;taskkill /fi &quot;IMAGENAME eq &#123;&#125;&quot; /fi &quot;STATUS eq &#123;&#125;&quot; &#x27;</span>.<span class="built_in">format</span>(PROCESS, STATUS)</span><br><span class="line"></span><br><span class="line">os.system(CMD)</span><br></pre></td></tr></table></figure><h3 id="using-ossystem"><a class="markdownIt-Anchor" href="#using-ossystem"></a> Using <code>os.system</code></h3><p>Now consider a more flexible case where you want to gather information about the processes like its PID,and then proceed on ending the process. One of the downside of window shell command is that the outputcan’t be passed on to other command, the output is just text. Therefore, weoutput the text to a csv file which we will later process.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">PROCESS = <span class="string">&#x27;notepad.exe&#x27;</span></span><br><span class="line">STATUS = <span class="string">&#x27;running&#x27;</span>  <span class="comment"># running or not responding</span></span><br><span class="line">TMP = <span class="string">r&#x27;&#123;&#125;/Desktop/tmp.txt&#x27;</span>.<span class="built_in">format</span>(os.environ[<span class="string">&#x27;userprofile&#x27;</span>])</span><br><span class="line">CMD = <span class="string">r&#x27;tasklist /fi &quot;IMAGENAME eq &#123;&#125;&quot; /fi &quot;STATUS eq &#123;&#125;&quot; /fo &quot;csv&quot; &gt; &quot;&#123;&#125;&quot;&#x27;</span>.<span class="built_in">format</span>(PROCESS, STATUS, TMP)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output as csv format</span></span><br><span class="line">os.system(CMD)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(TMP, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> temp:</span><br><span class="line">reader = csv.reader(temp)</span><br><span class="line">header = <span class="built_in">next</span>(reader)</span><br><span class="line">pids = [<span class="built_in">int</span>(row[<span class="number">1</span>]) <span class="keyword">for</span> row <span class="keyword">in</span> reader]</span><br><span class="line"></span><br><span class="line"><span class="comment"># kill process</span></span><br><span class="line"><span class="keyword">for</span> pid <span class="keyword">in</span> pids:</span><br><span class="line">os.kill(pid, signal.SIGTERM) <span class="comment"># or signal.SIGKILL </span></span><br><span class="line">print(<span class="string">&#x27;killed process with pid: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(pid))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> os.path.exists(TMP):</span><br><span class="line">  os.remove(TMP)</span><br></pre></td></tr></table></figure><h3 id="using-subprocess"><a class="markdownIt-Anchor" href="#using-subprocess"></a> Using <code>subprocess</code></h3><p>With <code>subprocess</code>, we no longer need to create a temp file to store the output.</p><script src="https://gist.github.com/leixingyu/293918b0f2bda5112c696f3cccecceec.js"></script><h3 id="using-psutil"><a class="markdownIt-Anchor" href="#using-psutil"></a> Using <code>psutil</code></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> psutil</span><br><span class="line"></span><br><span class="line">PROGRAM = <span class="string">r&#x27;maya.exe&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findProcess</span>(<span class="params">name</span>):</span>    </span><br><span class="line">    procs = <span class="built_in">list</span>()</span><br><span class="line">    <span class="comment">#Iterate over the all the running process</span></span><br><span class="line">    <span class="keyword">for</span> proc <span class="keyword">in</span> psutil.process_iter():</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> proc.name() == name <span class="keyword">and</span> proc.status() == psutil.STATUS_RUNNING:</span><br><span class="line">            pid = proc.pid            </span><br><span class="line">                procs.append(pid)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span>      </span><br><span class="line">    <span class="keyword">return</span> procs</span><br><span class="line"></span><br><span class="line">processes = findProcess(PROGRAM)</span><br></pre></td></tr></table></figure><p>we can find process start time by using</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">startTime = time.strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>, time.localtime(proc.create_time()))</span><br></pre></td></tr></table></figure><p>to kill process, either <code>kill()</code> or <code>terminate()</code> will workrespectfully, <code>SIGKILL</code> or <code>SIGTERM</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">p = psutil.Process(PID)</span><br><span class="line">p.terminate()</span><br><span class="line">p.kill()</span><br><span class="line">p.wait</span><br></pre></td></tr></table></figure><p><a name="find-open-port"></a></p><h3 id="bonus-find-open-port-for-socket-connection"><a class="markdownIt-Anchor" href="#bonus-find-open-port-for-socket-connection"></a> Bonus: Find Open Port (for socket connection)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">process = psutil.Process(pid=PID)</span><br><span class="line"></span><br><span class="line">connections = process.connections(kind=<span class="string">&#x27;tcp4&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> [x <span class="keyword">for</span> x <span class="keyword">in</span> connections <span class="keyword">if</span> x.status == psutil.CONN_LISTEN]:</span><br><span class="line">    <span class="comment"># gets the port number</span></span><br><span class="line">    print(<span class="string">&#x27;port opened: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(c.laddr[-<span class="number">1</span>]))</span><br></pre></td></tr></table></figure><p><a name="find-win-title"></a></p><h3 id="bonus-find-main-window-title"><a class="markdownIt-Anchor" href="#bonus-find-main-window-title"></a> Bonus: Find Main Window Title</h3><p><code>ctypes</code> is a foreign function library for python, resulting a not-pythonic function</p><script src="https://gist.github.com/leixingyu/7d85c0c1439b0cf9b423ba5c0d5ef184.js"></script><h3 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h3><p><a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/tasklist">Microsoft Doc - tasklist</a></p><p><a href="https://thispointer.com/python-check-if-a-process-is-running-by-name-and-find-its-process-id-pid/">ThisPointer - Python : Check if a process is running by name and find it’s Process ID (PID)</a></p><p><a href="https://sjohannes.wordpress.com/2012/03/23/win32-python-getting-all-window-titles/">Johannes Sasongko - Win32 Python: Getting all window titles</a></p><p><a href="https://stackoverflow.com/questions/10266281">Stack Overflow - Obtain Active window using Python</a></p><p><a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/">Microsoft Docs - winuser.h header</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h3&gt;
&lt;p&gt;Interacting with Windows shell to end proc</summary>
      
    
    
    
    <category term="tech summary" scheme="https://www.xingyulei.com/categories/tech-summary/"/>
    
    
    <category term="python" scheme="https://www.xingyulei.com/tags/python/"/>
    
    <category term="windows" scheme="https://www.xingyulei.com/tags/windows/"/>
    
    <category term="batch" scheme="https://www.xingyulei.com/tags/batch/"/>
    
  </entry>
  
  <entry>
    <title>State Machine in Unity Scripting API</title>
    <link href="https://www.xingyulei.com/post/unity-api-statemachine/"/>
    <id>https://www.xingyulei.com/post/unity-api-statemachine/</id>
    <published>2021-08-29T04:00:00.000Z</published>
    <updated>2022-09-10T13:48:33.993Z</updated>
    
    <content type="html"><![CDATA[<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>This post is not about state machine basic, rather how we would setup/access state machine parameters.There is a higher level <code>Animator</code> class to access a part of the animator features, but we need to useUnity’s <code>Animations</code> package in order to dive deeper.</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEditor.Animations;</span><br></pre></td></tr></table></figure><p>There’s a lot of parts composing Unity’s Animator: Layer, Parameter, State machine (and everything inside itincluding states of different kind, transition between states), there are of course multiple parameters inside a single state.</p><p>The examples in this post is only about accessing states and state machines, as the rest is translatable.</p><p>We start from the root: Base layer, if you think about it, a layer is essentially a state machine.Inside this root state machine are sets of states (including blend tree/state/sub-state machine)</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// getting the base layer state machine</span></span><br><span class="line">AnimatorStateMachine rootStateMachine = controller.layers[<span class="number">0</span>].stateMachine;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/HuSyYGs.png" alt="base layer state machine" /></p><p>(Base Layer)</p><p>Next up, a very confusing part of the scripting process are the definition of<code>AnimatorStateMachine</code> vs. <code>ChildAnimatorStateMachine</code> and <code>AnimatorState</code> vs. <code>ChildAnimatorState</code>.I really wish Unity provides internal ways to cast these to each other.</p><p>To summarize:</p><ul><li><p><code>ChildAnimatorStateMachine[]</code> and <code>ChildAnimatorState[]</code> is used in conjunction with Arrays as <code>AnimatorStateMachine.states</code> and<code>AnimatorStateMachine.stateMachines</code> will return the previous mentioned type.</p></li><li><p>Instead of casting, they have an internal property <code>ChildAnimatorStateMachine.stateMachine</code> and <code>ChildAnimatorState.state</code> whichrespectively returns <code>AnimatorStateMachine</code> and <code>AnimatorState</code> type object</p></li></ul><h2 id="states"><a class="markdownIt-Anchor" href="#states"></a> States</h2><p>All states (state or. state with blendtree inside)</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">ChildAnimatorState[] childStates = rootStateMachine.states;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">var</span> childState <span class="keyword">in</span> childStates)</span><br><span class="line">&#123;</span><br><span class="line">    AnimatorState state = childState.state;</span><br><span class="line">    print(state.name);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// state with blendtree</span></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> blendTree = (BlendTree)state.motion;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> child <span class="keyword">in</span> blendTree.children)</span><br><span class="line">        &#123;</span><br><span class="line">            print(<span class="string">&quot;\t&quot;</span> + child.motion.name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// simple state</span></span><br><span class="line">    catch</span><br><span class="line">    &#123;</span><br><span class="line">        print(<span class="string">&quot;\t&quot;</span> + state.motion.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/QbLtx2O.png" alt="simple state" /></p><p>(Simple state only contains a single clip)</p><p><img src="https://i.imgur.com/vQMjJ5z.png" alt="state with blendtree" /></p><p>(BlendTree nested in a state)</p><h2 id="sub-state-machine"><a class="markdownIt-Anchor" href="#sub-state-machine"></a> Sub-state Machine</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ChildAnimatorStateMachine[] childSubStateMachines = rootStateMachine.stateMachines;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">var</span> childSubStateMachine <span class="keyword">in</span> childSubStateMachines)&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Convert `ChildAnimatorStateMachine` to `AnimatorStateMachine`</span></span><br><span class="line">    AnimatorStateMachine subStateMachine = childSubStateMachine.stateMachine;</span><br><span class="line">    print(subStateMachine.name);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// all states in idle sub state machine</span></span><br><span class="line">    ChildAnimatorState[] states = subStateMachine.states;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> childState <span class="keyword">in</span> states)</span><br><span class="line">    &#123;</span><br><span class="line">        print(<span class="string">&quot;\t&quot;</span> + childState.state.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/j6IoXLr.png" alt="sub state machine" /></p><p>(Essentially, another sub layer of state machine)</p><h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2><p><a href="https://docs.unity3d.com/Manual/StateMachineBasics.html">Unity Manual - State Machine Basics</a></p><p><a href="https://docs.unity3d.com/ScriptReference/Animations.AnimatorStateMachine.html">Unity Scripting API - AnimatorStateMachine</a></p><p><a href="https://docs.unity3d.com/ScriptReference/Animator.Play.html">Unity Scripting API - Animator.Play</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h2&gt;
&lt;p&gt;This post is not about state machine basic</summary>
      
    
    
    
    <category term="tech summary" scheme="https://www.xingyulei.com/categories/tech-summary/"/>
    
    
    <category term="unity" scheme="https://www.xingyulei.com/tags/unity/"/>
    
    <category term="c#" scheme="https://www.xingyulei.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>How to Resize QPixmap</title>
    <link href="https://www.xingyulei.com/post/qt-pixmap-scale/"/>
    <id>https://www.xingyulei.com/post/qt-pixmap-scale/</id>
    <published>2021-08-22T04:00:00.000Z</published>
    <updated>2022-09-10T13:50:16.144Z</updated>
    
    <content type="html"><![CDATA[<h3 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h3><p>During my attempts to create custom alignment push buttons, I encountered an issue with icon havingjagged looking (even if with low resolution).</p><p>I use a custom <code>paintEvent()</code> drawing <code>QPixmap</code>, and this happens when I use <code>scaled()</code> to resize my pixmap.</p><p>I noticed the icon does not have the jagged look with the built-in <code>setIcon()</code> and <code>setIconSize</code> in<code>QPushButton</code>. So I know there’s some wrong with my approach.</p><h3 id="example"><a class="markdownIt-Anchor" href="#example"></a> Example</h3><p>To really show out the difference, I first reduce the resolution of my image.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">low_rez = QtCore.QSize(<span class="number">40</span>, <span class="number">40</span>)</span><br><span class="line">high_rez = QtCore.QSize(<span class="number">400</span>, <span class="number">400</span>)</span><br><span class="line">pixmap = QtGui.QPixmap(path)</span><br><span class="line"></span><br><span class="line">pixmap = pixmap.scaled(low_rez)</span><br></pre></td></tr></table></figure><p>I then increase the resolution back to normal. The default scale uses <code>FastTransformation</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pixmap = pixmap.scaled(high_rez)</span><br></pre></td></tr></table></figure><p>This is the result:</p><p><img src="https://imgur.com/8KiYjlW.png" alt="pixmap-not-smooth" /></p><h3 id="the-solution"><a class="markdownIt-Anchor" href="#the-solution"></a> The Solution</h3><p>I’ve searched many forums and people were all saying: enable the <code>SmoothTransformation</code>, I tried but didn’t work.</p><p>Later on I found out that the Qt translation to Python has a mis-match keyword argument:so instead of <code>transformMode=Qt.SmoothTransformation</code>, it should actually be <code>mode=Qt.SmoothTransformation</code></p><p>So here’s the solution:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pixmap = pixmap.scaled(</span><br><span class="line">    high_rez,</span><br><span class="line">    aspectRatioMode=QtCore.Qt.KeepAspectRatio,</span><br><span class="line">    mode=QtCore.Qt.SmoothTransformation</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>and result:</p><p><img src="https://imgur.com/TIjyqkm.png" alt="pixmap-smooth" /></p><h3 id="extra"><a class="markdownIt-Anchor" href="#extra"></a> Extra</h3><p>I also found post saying it might be some settings with the <code>QPainter</code>, but it is not the issue for me.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">painter = QtGui.QPainter(self)</span><br><span class="line">painter.setRenderHint(QtGui.QPainter.Antialiasing, <span class="literal">True</span>)</span><br><span class="line">painter.setRenderHint(QtGui.QPainter.SmoothPixmapTransform, <span class="literal">True</span>)</span><br><span class="line">painter.drawPixmap(self.pixmap)</span><br></pre></td></tr></table></figure><h3 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h3><p><a href="https://doc.qt.io/qt-5/qpixmap.html">Qt Documentation - QPixmap Class</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h3&gt;
&lt;p&gt;During my attempts to create custom alignm</summary>
      
    
    
    
    <category term="tech summary" scheme="https://www.xingyulei.com/categories/tech-summary/"/>
    
    
    <category term="pyqt" scheme="https://www.xingyulei.com/tags/pyqt/"/>
    
  </entry>
  
  <entry>
    <title>Qt Left-align Icon, Center-align Text in Python</title>
    <link href="https://www.xingyulei.com/post/qt-button-alignment/"/>
    <id>https://www.xingyulei.com/post/qt-button-alignment/</id>
    <published>2021-08-21T04:00:00.000Z</published>
    <updated>2022-09-10T13:50:40.363Z</updated>
    
    <content type="html"><![CDATA[<h3 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h3><p>I recently needed to display a series of buttons for my shelf tool, the problem I’m having with this is thatalthough every button has an icon and text label, they are displayed as different width. Using <code>center-align</code>made it look not uniform.</p><p>Should I go with <code>left-align</code>? Well, there are buttons with relatively longer label and some with shorter ones,so it doesn’t look nice either with empty spaces on the right side.</p><p>So the solution is obvious, separate the alignment of the icon and the label: the icon stays <code>left-align</code> togive a clear sign of broader, and the label would be <code>center-align</code> to make the width look uniform.</p><p><img src="https://i.imgur.com/dMOZpkH.jpg" alt="three-alignment-side-by-side" /></p><p>(Left: default center align, Center: left align, Right: custom align)</p><p>In the following section, I will demonstrate three methods of achieving this custom alignment effect:</p><p><img src="https://imgur.com/3G6fmVN.png" alt="push-button-alignment" /></p><h3 id="overriding-qpushbutton-paintevent"><a class="markdownIt-Anchor" href="#overriding-qpushbutton-paintevent"></a> Overriding QPushButton <code>paintEvent()</code></h3><p>This method subclass from <code>QPushButton</code> and override the <code>paintEvent()</code> and <code>sizeHint()</code>to extend how a button is drawn;</p><p>The alignment of content of the button is default to <code>center-aligned</code>, butwe make the pixmap to be drawn on the left-side (5px margin against the left border)</p><p>With this method, we no longer use <code>QIcon</code>, we use <code>QPixmap</code> instead; that is whywe created a custom <code>setPixmap()</code> method to our <code>MyButton</code> to give user accessto the pixmap being drawn.</p><script src="https://gist.github.com/leixingyu/009a594f3d94643d39b9eee5ac6cf118.js"></script><h3 id="custom-layout-inside-pushbutton"><a class="markdownIt-Anchor" href="#custom-layout-inside-pushbutton"></a> Custom layout inside pushbutton</h3><p>Here is another interesting approach:this method defaults its style to <code>left-aligned</code>, but it only contains the icon.</p><p>What about the push button label(text)?</p><p>It is actually a <code>QLabel</code> placed in the <code>QPushButton</code> layout, and being vertically<code>center-aligned</code>; To modify the push button text, use <code>setText()</code> to the labelinside the button layout, instead of the button.</p><script src="https://gist.github.com/leixingyu/78b83e758e74cb56f9da5f076e5c4d9d.js"></script><h3 id="use-qproxystyle"><a class="markdownIt-Anchor" href="#use-qproxystyle"></a> Use <code>QProxyStyle</code></h3><p>I haven’t personally test it because my Qt python binding doesn’t have QProxyStyle included</p><p>but it’s worth putting it here in case someone is able to try it.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProxyStyle</span>(<span class="params">QtWidgets.QProxyStyle</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">drawControl</span>(<span class="params">self, element, option, painter, widget=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="keyword">if</span> element == QtWidgets.QStyle.CE_PushButtonLabel:</span><br><span class="line">            icon = QtGui.QIcon(option.icon)</span><br><span class="line">            option.icon = QtGui.QIcon()</span><br><span class="line">        <span class="built_in">super</span>(ProxyStyle, self).drawControl(element, option, painter, widget)</span><br><span class="line">        <span class="keyword">if</span> element == QtWidgets.QStyle.CE_PushButtonLabel:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> icon.isNull():</span><br><span class="line">                iconSpacing = <span class="number">4</span></span><br><span class="line">                mode = (</span><br><span class="line">                    QtGui.QIcon.Normal</span><br><span class="line">                    <span class="keyword">if</span> option.state &amp; QtWidgets.QStyle.State_Enabled</span><br><span class="line">                    <span class="keyword">else</span> QtGui.QIcon.Disabled</span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">if</span> (</span><br><span class="line">                    mode == QtGui.QIcon.Normal</span><br><span class="line">                    <span class="keyword">and</span> option.state &amp; QtWidgets.QStyle.State_HasFocus</span><br><span class="line">                ):</span><br><span class="line">                    mode = QtGui.QIcon.Active</span><br><span class="line">                state = QtGui.QIcon.Off</span><br><span class="line">                <span class="keyword">if</span> option.state &amp; QtWidgets.QStyle.State_On:</span><br><span class="line">                    state = QtGui.QIcon.On</span><br><span class="line">                window = widget.window().windowHandle() <span class="keyword">if</span> widget <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">                pixmap = icon.pixmap(window, option.iconSize, mode, state)</span><br><span class="line">                pixmapWidth = pixmap.width() / pixmap.devicePixelRatio()</span><br><span class="line">                pixmapHeight = pixmap.height() / pixmap.devicePixelRatio()</span><br><span class="line">                iconRect = QtCore.QRect(</span><br><span class="line">                    QtCore.QPoint(), QtCore.QSize(pixmapWidth, pixmapHeight)</span><br><span class="line">                )</span><br><span class="line">                iconRect.moveCenter(option.rect.center())</span><br><span class="line">                iconRect.moveLeft(option.rect.left() + iconSpacing)</span><br><span class="line">                iconRect = self.visualRect(option.direction, option.rect, iconRect)</span><br><span class="line">                iconRect.translate(</span><br><span class="line">                    self.proxy().pixelMetric(</span><br><span class="line">                        QtWidgets.QStyle.PM_ButtonShiftHorizontal, option, widget</span><br><span class="line">                    ),</span><br><span class="line">                    self.proxy().pixelMetric(</span><br><span class="line">                        QtWidgets.QStyle.PM_ButtonShiftVertical, option, widget</span><br><span class="line">                    ),</span><br><span class="line">                )</span><br><span class="line">                painter.drawPixmap(iconRect, pixmap)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = QtWidgets.QApplication(sys.argv)</span><br><span class="line">    app.setStyle(<span class="string">&#x27;fusion&#x27;</span>)</span><br><span class="line">    proxy_style = ProxyStyle(app.style())</span><br><span class="line">    app.setStyle(proxy_style)</span><br><span class="line"></span><br><span class="line">    w = QtWidgets.QWidget()</span><br><span class="line">    lay = QtWidgets.QVBoxLayout(w)</span><br><span class="line">    icons = [</span><br><span class="line">        app.style().standardIcon(standardIcon)</span><br><span class="line">        <span class="keyword">for</span> standardIcon <span class="keyword">in</span> (</span><br><span class="line">            QtWidgets.QStyle.SP_MediaPlay,</span><br><span class="line">            QtWidgets.QStyle.SP_MediaPause,</span><br><span class="line">            QtWidgets.QStyle.SP_MediaSeekBackward,</span><br><span class="line">            QtWidgets.QStyle.SP_MediaSeekForward,</span><br><span class="line">        )</span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">for</span> text, icon <span class="keyword">in</span> <span class="built_in">zip</span>(<span class="string">&quot;Play Pause Backward Forward&quot;</span>.split(), (icons)):</span><br><span class="line">        button = QtWidgets.QPushButton(text)</span><br><span class="line">        button.setIcon(icon)</span><br><span class="line">        lay.addWidget(button)</span><br><span class="line">    w.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><h3 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h3><p><a href="https://stackoverflow.com/questions/44091339">Stack Overflow - QPushButton icon aligned left with text centered</a></p><p><a href="https://stackoverflow.com/questions/56129402">Stack Overflow - qpushbutton icon left alignment text center alignment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h3&gt;
&lt;p&gt;I recently needed to display a series of b</summary>
      
    
    
    
    <category term="tech summary" scheme="https://www.xingyulei.com/categories/tech-summary/"/>
    
    
    <category term="pyqt" scheme="https://www.xingyulei.com/tags/pyqt/"/>
    
    <category term="template" scheme="https://www.xingyulei.com/tags/template/"/>
    
  </entry>
  
  <entry>
    <title>Qt Detect Double-Click and Hover Effect</title>
    <link href="https://www.xingyulei.com/post/qt-detect-click/"/>
    <id>https://www.xingyulei.com/post/qt-detect-click/</id>
    <published>2021-08-08T04:00:00.000Z</published>
    <updated>2022-09-10T13:50:33.740Z</updated>
    
    <content type="html"><![CDATA[<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>I want to showcase some examples that I used to create push button withcustom behaviours.</p><p><img src="https://i.imgur.com/e2LbhNJ.gif" alt="double" /></p><p>(Double click button)</p><p><img src="https://i.imgur.com/FCzg1MQ.gif" alt="hover" /></p><p>(Button hover effect)</p><h2 id="double-click"><a class="markdownIt-Anchor" href="#double-click"></a> Double Click</h2><h3 id="problem-with-mousebuttondblclick"><a class="markdownIt-Anchor" href="#problem-with-mousebuttondblclick"></a> Problem with <code>MouseButtonDblClick</code></h3><p>Hey, I thought this would be easy, since Qt offers a built-in eventtype: <code>QEvent.MouseButtonDblClick</code>.But the issue is it couldn’t distinguish a single click vs. a double click.Which means, the single click event will also be invoked when double-clicked.</p><h3 id="solution-using-timeout"><a class="markdownIt-Anchor" href="#solution-using-timeout"></a> Solution using timeout</h3><p>Subclass <code>QPushButton</code> and override <code>eventFilter()</code></p><script src="https://gist.github.com/leixingyu/0a38a3d77a848f51cfb3588a3ac19627.js"></script><h3 id="using-eventfilter"><a class="markdownIt-Anchor" href="#using-eventfilter"></a> Using <code>eventFilter()</code></h3><p><code>eventFilter()</code> takes three argument, a <code>QObject</code> that the filter is installedon, a <code>QObject</code> that is being watched, and a reference to a <code>QEvent</code> type objectto be filtered.</p><p>Be sure to add <code>self.installEventFilter(self)</code> so to override event filtering.Now it’s only the matter of adding condition logic to filter out differentevent types such as <code>QEvent.MouseButtonPress</code> and <code>QEvent.MouseButtonDblClick</code>with <code>event.type()</code></p><p>We can also filter which button is being used using <code>event.button()</code>.</p><h3 id="timeout"><a class="markdownIt-Anchor" href="#timeout"></a> timeout</h3><p>Using a built-in timer from Qt <code>QTimer()</code>, we are able to fire off timerevents between our clicks.</p><p>A <code>timeout</code> signal is fired after a certain interval we defined using <code>setInterval()</code>.the <code>timeout()</code> method is then used to determine what custom signal to emit.</p><h3 id="custom-signal"><a class="markdownIt-Anchor" href="#custom-signal"></a> Custom Signal</h3><p>Note that I created three custom signals for three different clicking typeI want to register.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">right_clicked = QtCore.Signal()</span><br><span class="line">left_clicked = QtCore.Signal()</span><br><span class="line">double_clicked = QtCore.Signal()</span><br></pre></td></tr></table></figure><p>This enhanced the usability of the click behaviour, meaning that this extended<code>QPushbutton</code> can tell whether the user did a single left or right click or adouble click.</p><p>In my example above, I wrapped all the click events in the class itself.But in the main application, we can also instantiate <code>MyButton</code> and connect click eventto method of our choice.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">btn = MyButton(<span class="string">&#x27;Button1&#x27;</span>)</span><br><span class="line">btn.doubled_clicked.connect(func1)</span><br><span class="line">btn.right_clicked.connect(func2)</span><br></pre></td></tr></table></figure><h2 id="hover-effect"><a class="markdownIt-Anchor" href="#hover-effect"></a> Hover Effect</h2><p>As a bonus, I want to include a “Button” with custom hover effect, but it istechnically a <code>QLabel</code> object with extended functionality, which is being usedin my <a href="https://github.com/leixingyu/snapTool">SnapTool</a>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HoverBtn</span>(<span class="params">QtWidgets.QLabel</span>):</span></span><br><span class="line"></span><br><span class="line">    clicked = QtCore.Signal(QtCore.QObject)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, parent</span>):</span></span><br><span class="line">        <span class="built_in">super</span>(HoverBtn, self).__init__(parent)</span><br><span class="line"></span><br><span class="line">        style = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        QFrame&#123;</span></span><br><span class="line"><span class="string">            border-radius: 25px;</span></span><br><span class="line"><span class="string">            border-width: 2px;</span></span><br><span class="line"><span class="string">            border-style: solid;</span></span><br><span class="line"><span class="string">            border-color: rgb(20, 20, 20);</span></span><br><span class="line"><span class="string">            background-color: rgb(170, 170, 170);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.installEventFilter(self)</span><br><span class="line">        self.setStyleSheet(style)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eventFilter</span>(<span class="params">self, obj, event</span>):</span></span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span>() == QtCore.QEvent.Enter:</span><br><span class="line">            self.set_outline(<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> event.<span class="built_in">type</span>() == QtCore.QEvent.Leave:</span><br><span class="line">            self.set_outline(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span>() == QtCore.QEvent.MouseButtonPress \</span><br><span class="line">                <span class="keyword">and</span> event.button() == QtCore.Qt.LeftButton:</span><br><span class="line">            self.clicked.emit(self)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_outline</span>(<span class="params">self, status</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Update widget stylesheet when highlight</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        style = self.styleSheet()</span><br><span class="line"></span><br><span class="line">        border_pattern = <span class="string">r&#x27;border-color\: rgb\(\d+, \d+, \d+\)&#x27;</span></span><br><span class="line">        dark = <span class="string">&#x27;border-color: rgb(20, 20, 20)&#x27;</span></span><br><span class="line">        light = <span class="string">&#x27;border-color: rgb(21, 255, 9)&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> status == <span class="number">1</span>:</span><br><span class="line">            style = re.sub(border_pattern, light, style)</span><br><span class="line">        <span class="keyword">elif</span> status == <span class="number">0</span>:</span><br><span class="line">            style = re.sub(border_pattern, dark, style)</span><br><span class="line"></span><br><span class="line">        self.setStyleSheet(style)</span><br></pre></td></tr></table></figure><p>The hover effect is achieved by swapping stylesheet properties, and the restof the event filtering is very similar to the previous double click button.</p><h3 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h3><p><a href="https://www.qtcentre.org/threads/7858-Double-Click-Capturing">Qt Centre - Double Click Capturing</a></p><p><a href="https://stackoverflow.com/questions/19247436">Stack Overflow - Pyqt Mouse MouseButtonDblClick event</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;introduction&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#introduction&quot;&gt;&lt;/a&gt; Introduction&lt;/h2&gt;
&lt;p&gt;I want to showcase some examples that I us</summary>
      
    
    
    
    <category term="tech summary" scheme="https://www.xingyulei.com/categories/tech-summary/"/>
    
    
    <category term="pyqt" scheme="https://www.xingyulei.com/tags/pyqt/"/>
    
    <category term="template" scheme="https://www.xingyulei.com/tags/template/"/>
    
  </entry>
  
</feed>
