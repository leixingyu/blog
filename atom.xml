<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tech Art Learning</title>
  
  
  <link href="https://www.xingyulei.com/atom.xml" rel="self"/>
  
  <link href="https://www.xingyulei.com/"/>
  <updated>2025-06-21T04:39:07.562Z</updated>
  <id>https://www.xingyulei.com/</id>
  
  <author>
    <name>Xingyu Lei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Design Dices with Any Number of Faces in Maya</title>
    <link href="https://www.xingyulei.com/post/hid/maya-python-fair-dices/"/>
    <id>https://www.xingyulei.com/post/hid/maya-python-fair-dices/</id>
    <published>2025-06-20T16:00:00.000Z</published>
    <updated>2025-06-21T04:39:07.562Z</updated>
    
    <content type="html"><![CDATA[<h2 id="the-goal-any-n-faced-dice-fair-and-beautiful"><a class="markdownIt-Anchor" href="#the-goal-any-n-faced-dice-fair-and-beautiful"></a> The Goal: Any-N-Faced Dice, Fair and Beautiful</h2><p><img src="https://www.gmdice.com/cdn/shop/files/uncommon-dice-set_grande.jpg" alt="dices" /></p><p>Dice are everywhere in games and probability, but traditional geometry only allows a handful of Platonic solids — regular polyhedra like the cube (d6), dodecahedron (d12), and icosahedron (d20). What if we want a d17, a d32, or even a d91? How do we make a die with any number of faces that is:</p><ul><li>Visually balanced</li><li>Approximately fair (equal probability for each face)</li><li>Controllable and artistically tunable</li><li>Procedurally generated in Maya</li></ul><p>This post follows my journey through geometry, mesh hacking, and custom algorithms in Maya Python to create these “impossible” dice.</p><hr /><h2 id="what-is-regular-polyhedra-the-platonic-limit"><a class="markdownIt-Anchor" href="#what-is-regular-polyhedra-the-platonic-limit"></a> What is Regular Polyhedra &amp; the Platonic Limit</h2><p>At first, I explored regular polyhedra — Platonic and Archimedean solids. These are geometrically perfect, with identical faces and angles. Unfortunately, there’s a strict limit:</p><ul><li>Only 5 Platonic solids exist</li><li>Only a few more semi-regular solids offer symmetric face layouts</li><li>Only specific face counts are possible (like 4, 6, 8, 12, 20, 32)</li></ul><p>So unless your dice are one of those lucky numbers, this approach doesn’t scale.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mesh = cmds.polyPlatonicSolid(r=<span class="number">2</span>, st=<span class="number">0</span>)[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p>Here you can choose the limited solid type available: dodecahedron, icosahedron, octahedron or tertrahedron.</p><p><img src="https://i.imgur.com/uQmZb8t.png" alt="solid" /></p><hr /><h2 id="method-1-face-subdivision-and-reduction"><a class="markdownIt-Anchor" href="#method-1-face-subdivision-and-reduction"></a> Method 1: Face Subdivision and Reduction</h2><p>Next, I tried a workaround using a combination of Maya’s Subdivide and Reduce tool. The idea:</p><ol><li>Start with a low-poly geometry</li><li>Apply polySubdivideFacet until roughly N faces available</li></ol><p>or.</p><ol><li>Start with a high-poly geometry</li><li>Apply polyReduce and tweak until roughly N faces remain</li></ol><p>It kind of works, but control is limited. Face counts are not exact, and distribution can be messy. Also, most faces become triangles, which limits aesthetics and fairness perception.</p><h3 id="subdivide"><a class="markdownIt-Anchor" href="#subdivide"></a> Subdivide</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">face_count = cmds.polyEvaluate(mesh, face=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">while</span> face_count &lt; <span class="number">25</span>:</span><br><span class="line">    cmds.polySubdivideFacet(mesh + <span class="string">&quot;.f[*]&quot;</span>, dv=<span class="number">1</span>, ch=<span class="literal">False</span>)</span><br><span class="line">    face_count = cmds.polyEvaluate(mesh, face=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>The problem as you can see is that extra faces are generated by dividing existing flat faces, which is not actually creating the dice faces which can be rolled on.</p><p><img src="https://i.imgur.com/SOt6GFw.png" alt="subdivide" /></p><h3 id="face-reduction"><a class="markdownIt-Anchor" href="#face-reduction"></a> Face Reduction</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cmds.polyReduce(mesh,</span><br><span class="line">                version=<span class="number">1</span>,            <span class="comment"># modern polyReduce</span></span><br><span class="line">                termination=<span class="number">2</span>,        <span class="comment"># 0=ratio, 1=vertex, 2=face target</span></span><br><span class="line">                tct=face_count,</span><br><span class="line">                keepBorder=<span class="number">1</span>,</span><br><span class="line">                keepHardEdge=<span class="number">1</span>,</span><br><span class="line">                cachingReduce=<span class="number">0</span>,</span><br><span class="line">                symmetryPlaneW=<span class="number">0</span>)     <span class="comment"># no symmetry enforcement</span></span><br></pre></td></tr></table></figure><p>Note that the face count here is actually the triangle count.There’s also other options such as limiting the percentage or the vertex.</p><p><img src="https://i.imgur.com/sgijlv0.png" alt="reduce" /></p><hr /><h2 id="method-2-triangulation-with-scattered-points"><a class="markdownIt-Anchor" href="#method-2-triangulation-with-scattered-points"></a> Method 2: Triangulation with Scattered Points</h2><p>Trying to control geometry directly, I generated N evenly scattered points on a sphere, and connected them using Delaunay-like triangulation. The result is a clean triangle mesh.</p><p>Problems:</p><ul><li>The number of points ≠ number of faces</li><li>Every face is a triangle — no variation</li><li>Hard to get patch-like regions, like you’d see on a real ball</li></ul><p>for generating points on surface, see: <a href="#bonus-how-to-scatter-points-evenly-on-a-sphere">this section</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> maya.cmds <span class="keyword">as</span> cmds</span><br><span class="line"><span class="keyword">from</span> scipy.spatial <span class="keyword">import</span> ConvexHull</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_polyhedron</span>(<span class="params">n_faces=<span class="number">32</span>, scale=<span class="number">5.0</span></span>):</span><br><span class="line">    <span class="comment"># Step 1: Generate points</span></span><br><span class="line">    points = fibonacci_sphere(n_faces)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Step 2: Compute convex hull</span></span><br><span class="line">    hull = ConvexHull(points)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Step 3: Create mesh from hull</span></span><br><span class="line">    all_verts = []</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> points:</span><br><span class="line">        all_verts.append([coord * scale <span class="keyword">for</span> coord <span class="keyword">in</span> p])</span><br><span class="line">    </span><br><span class="line">    face_verts = []</span><br><span class="line">    <span class="keyword">for</span> simplex <span class="keyword">in</span> hull.simplices:</span><br><span class="line">        face_verts.append([all_verts[i] <span class="keyword">for</span> i <span class="keyword">in</span> simplex])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Flatten vertices and create mesh</span></span><br><span class="line">    mesh_verts = []</span><br><span class="line">    mesh_faces = []</span><br><span class="line"></span><br><span class="line">    vert_index_map = &#123;&#125;</span><br><span class="line">    index_counter = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> face <span class="keyword">in</span> face_verts:</span><br><span class="line">        face_indices = []</span><br><span class="line">        <span class="keyword">for</span> vertex <span class="keyword">in</span> face:</span><br><span class="line">            v_key = <span class="built_in">tuple</span>(vertex)</span><br><span class="line">            <span class="keyword">if</span> v_key <span class="keyword">not</span> <span class="keyword">in</span> vert_index_map:</span><br><span class="line">                vert_index_map[v_key] = index_counter</span><br><span class="line">                mesh_verts.append(vertex)</span><br><span class="line">                index_counter += <span class="number">1</span></span><br><span class="line">            face_indices.append(vert_index_map[v_key])</span><br><span class="line">        mesh_faces.append(face_indices)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create Maya mesh</span></span><br><span class="line">    mesh_name = <span class="string">&quot;d&#123;&#125;_hull&quot;</span>.<span class="built_in">format</span>(n_faces)</span><br><span class="line">    mesh = cmds.polyCreateFacet(p=mesh_verts, n=mesh_name)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Delete default faces and rebuild custom ones</span></span><br><span class="line">    cmds.delete(mesh, ch=<span class="literal">True</span>)</span><br><span class="line">    cmds.delete(mesh, constructionHistory=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(cmds.polyEvaluate(mesh, face=<span class="literal">True</span>)):</span><br><span class="line">        cmds.delete(<span class="string">f&quot;<span class="subst">&#123;mesh&#125;</span>.f[<span class="subst">&#123;i&#125;</span>]&quot;</span>, ch=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">for</span> face <span class="keyword">in</span> mesh_faces:</span><br><span class="line">        face_points = [mesh_verts[i] <span class="keyword">for</span> i <span class="keyword">in</span> face]</span><br><span class="line">        cmds.polyCreateFacet(p=face_points)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> mesh</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/BtccFxu.png" alt="triangulate" /></p><p>As you can see, the dice seems fair with its face approximately the same size, but it doesn’t look nice, with only triangle faces, it just looks like an oddly-shape polygon.</p><hr /><h2 id="method-3-soccer-ball-inspiration-the-slicing-trick"><a class="markdownIt-Anchor" href="#method-3-soccer-ball-inspiration-the-slicing-trick"></a> Method 3: Soccer Ball Inspiration – The Slicing Trick</h2><p>Eventually, inspiration struck from something unexpected: soccer balls.</p><p>Soccer balls use a combination of hexagons and pentagons — not regular polyhedra, but still visually even and fair enough. This led to a breakthrough: What if we scattered points on a sphere, and used them to slice the sphere into patches?</p><p>The Slicing Method:</p><ol><li>Scatter N points on a sphere surface</li><li>For each point, slice a patch using a spherical Voronoi or convex cut</li><li>The result: a mesh with N face-like patches, not limited to triangles!</li></ol><p>This allows for any number of sides — even prime numbers like 17 or 19 — and visually balanced results that look and feel like real dice.</p><p>for generating points on surface, see: <a href="#bonus-how-to-scatter-points-evenly-on-a-sphere">this section</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">generate</span>(<span class="params">faces, iteration, depth</span>):</span><br><span class="line">    pts = generate_even_sphere_points(n_points=faces, iterations=iteration)</span><br><span class="line">    locators = create_locators(pts)</span><br><span class="line">    sphere = cmds.polySphere(r=<span class="number">5</span>, name=<span class="string">&#x27;targetSphere&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, pos <span class="keyword">in</span> <span class="built_in">enumerate</span>(pts):</span><br><span class="line">        <span class="comment"># 2. Create a cutter plane for each point</span></span><br><span class="line">        cutter = cmds.polyCube(w=<span class="number">10</span>, h=depth, d=<span class="number">10</span>, name=<span class="string">f&#x27;cutter_<span class="subst">&#123;i&#125;</span>&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        cmds.xform(cutter, translation=[pos[<span class="number">0</span>], pos[<span class="number">1</span>], pos[<span class="number">2</span>]], worldSpace=<span class="literal">True</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 3. Rotate the cutter to face the center (0,0,0)</span></span><br><span class="line">        cmds.aimConstraint(sphere, cutter, aimVector=(<span class="number">0</span>,-<span class="number">1</span>,<span class="number">0</span>), upVector=(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>), worldUpType=<span class="string">&quot;scene&quot;</span>)</span><br><span class="line">        sphere = cmds.polyCBoolOp(sphere, cutter, op=<span class="number">2</span>, name=<span class="string">&#x27;cutResult&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/T5VaLOj.png" alt="slice" /></p><ul><li>You can adjust the depth of the slice: more depth creates narrower edges between dice faces</li><li>Iteration controls the repulsion based algorithm to generate evenly distributed splice points, note that the larger the number of faces in combination with iteration will significantly increase the generation time</li></ul><h2 id="bonus-how-to-scatter-points-evenly-on-a-sphere"><a class="markdownIt-Anchor" href="#bonus-how-to-scatter-points-evenly-on-a-sphere"></a> Bonus: How to Scatter Points Evenly on a Sphere</h2><p>Getting evenly distributed points on a sphere is a problem on its own. Two methods I tested:</p><h3 id="fibonacci-sphere"><a class="markdownIt-Anchor" href="#fibonacci-sphere"></a> Fibonacci Sphere</h3><ul><li>Fast and elegant</li><li>Uses golden angle to place points around the sphere</li><li>Good for approximate distributions</li></ul><p>Drawback: Not perfectly uniform — more clustering near poles</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fibonacci_sphere</span>(<span class="params">n_points</span>):</span><br><span class="line">    points = []</span><br><span class="line">    golden_angle = math.pi * (<span class="number">3</span> - math.sqrt(<span class="number">5</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n_points):</span><br><span class="line">        y = <span class="number">1</span> - (i / <span class="built_in">float</span>(n_points - <span class="number">1</span>)) * <span class="number">2</span></span><br><span class="line">        radius = math.sqrt(<span class="number">1</span> - y * y)</span><br><span class="line">        theta = golden_angle * i</span><br><span class="line">        x = math.cos(theta) * radius</span><br><span class="line">        z = math.sin(theta) * radius</span><br><span class="line">        points.append([x, y, z])</span><br><span class="line">    <span class="keyword">return</span> points</span><br></pre></td></tr></table></figure><h3 id="repulsion-based-relaxation"><a class="markdownIt-Anchor" href="#repulsion-based-relaxation"></a> Repulsion-Based Relaxation</h3><ul><li>Start with random points</li><li>Simulate repelling forces between them</li><li>After several iterations, points naturally spread out evenly</li><li>Much fairer for small N (like 7, 17, etc.)</li></ul><p>In practice: For 10–100 points, repulsion-based methods yield the best results visually and statistically.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> maya.cmds <span class="keyword">as</span> cmds</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">normalize</span>(<span class="params">v</span>):</span><br><span class="line">    mag = math.sqrt(<span class="built_in">sum</span>(x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> v))</span><br><span class="line">    <span class="keyword">return</span> [x / mag <span class="keyword">for</span> x <span class="keyword">in</span> v]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">subtract</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">return</span> [a[i] - b[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">return</span> [a[i] + b[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">scale</span>(<span class="params">v, s</span>):</span><br><span class="line">    <span class="keyword">return</span> [x * s <span class="keyword">for</span> x <span class="keyword">in</span> v]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">distance</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">return</span> math.sqrt(<span class="built_in">sum</span>((a[i] - b[i]) ** <span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">repulsion_step</span>(<span class="params">points, strength=<span class="number">0.01</span></span>):</span><br><span class="line">    new_points = []</span><br><span class="line">    <span class="keyword">for</span> i, pi <span class="keyword">in</span> <span class="built_in">enumerate</span>(points):</span><br><span class="line">        force = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> j, pj <span class="keyword">in</span> <span class="built_in">enumerate</span>(points):</span><br><span class="line">            <span class="keyword">if</span> i == j:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            diff = subtract(pi, pj)</span><br><span class="line">            dist = <span class="built_in">max</span>(distance(pi, pj), <span class="number">0.001</span>)</span><br><span class="line">            f = scale(normalize(diff), strength / (dist ** <span class="number">2</span>))</span><br><span class="line">            force = add(force, f)</span><br><span class="line">        new_pi = normalize(add(pi, force))  <span class="comment"># project back to sphere</span></span><br><span class="line">        new_points.append(new_pi)</span><br><span class="line">    <span class="keyword">return</span> new_points</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_even_sphere_points</span>(<span class="params">n_points=<span class="number">17</span>, iterations=<span class="number">500</span>, radius=<span class="number">5</span></span>):</span><br><span class="line">    <span class="comment"># Start with random points on the sphere</span></span><br><span class="line">    points = []</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n_points):</span><br><span class="line">        theta = random.uniform(<span class="number">0</span>, <span class="number">2</span> * math.pi)</span><br><span class="line">        phi = math.acos(random.uniform(-<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">        x = math.sin(phi) * math.cos(theta)</span><br><span class="line">        y = math.sin(phi) * math.sin(theta)</span><br><span class="line">        z = math.cos(phi)</span><br><span class="line">        points.append([x, y, z])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Relax points using repulsion</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(iterations):</span><br><span class="line">        points = repulsion_step(points)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Scale to radius and return</span></span><br><span class="line">    <span class="keyword">return</span> [scale(p, radius) <span class="keyword">for</span> p <span class="keyword">in</span> points]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_locators</span>(<span class="params">points</span>):</span><br><span class="line">    locators = <span class="built_in">list</span>()</span><br><span class="line">    <span class="keyword">for</span> i, p <span class="keyword">in</span> <span class="built_in">enumerate</span>(points):</span><br><span class="line">        loc=cmds.spaceLocator(p=p, name=<span class="string">&quot;slicePoint_%d&quot;</span> % i)</span><br><span class="line">        center = cmds.objectCenter(loc, gl = <span class="literal">True</span>)</span><br><span class="line">        cmds.xform(loc, pivots = center)</span><br><span class="line">        locators.append(loc)</span><br><span class="line">    <span class="keyword">return</span> locators</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">This blog explores generating fair, visually appealing dice with any number of faces using Maya and Python. It moves beyond traditional Platonic solids by experimenting with mesh subdivision, reduction, and finally a breakthrough method, slicing a sphere using scattered points and spherical Voronoi regions to create balanced, customizable N-faced dice.</summary>
    
    
    
    <category term="maya" scheme="https://www.xingyulei.com/categories/maya/"/>
    
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
    <category term="math" scheme="https://www.xingyulei.com/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>Unreal Remote Control (TikTok Integration)</title>
    <link href="https://www.xingyulei.com/post/ue-remote-control/"/>
    <id>https://www.xingyulei.com/post/ue-remote-control/</id>
    <published>2024-08-24T16:00:00.000Z</published>
    <updated>2024-08-26T11:01:18.051Z</updated>
    
    <content type="html"><![CDATA[<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>In many of my previous blog posts, I discussed running Python scripts through the Unreal command line to achieve production automation. I also introduced how to build your own custom render farm and process render jobs remotely. Today, I want to focus on remote control, which is more closely tied to gameplay features and can enable remote or cross-application interactive experiences.</p><p>One of my initial inspirations for exploring this topic was TikTok’s live stream interactive gaming with audiences. While audience interaction with live streams has been around for a while on platforms like Twitch, it wasn’t until recently that I considered how this could be achieved.</p><p><img src="https://i.ytimg.com/vi/FwIHaEyUfdI/maxresdefault.jpg" alt="tiktok" /></p><p>In the following post, I’ll create a prototype of a game running on a live stream. The game can be controlled by audience interactions, such as receiving gifts, gaining new followers, or simply monitoring the number of viewers currently watching the stream. (Of course, there are many more practical uses for remote control since it essentially opens up the Unreal application through a web interface that can be accessed and controlled by anything)</p><h3 id="remote-control-basics"><a class="markdownIt-Anchor" href="#remote-control-basics"></a> Remote Control Basics</h3><p>Fortunately, Unreal has a system called Remote Control (previously known as Web Control) that makes this functionality possible. The Remote Control system works by running a web server inside the Unreal Engine that services WebSocket messages and HTTP requests made by remote web applications through a REST-like API. We can enable this feature simply by activating Unreal’s “RemoteControlAPI” plugin.</p><h2 id="blueprint-setup"><a class="markdownIt-Anchor" href="#blueprint-setup"></a> Blueprint Setup</h2><p>Next, let’s set up a test blueprint. Here, I created one function and one event as examples, each with its own custom argument and type. This allows us to test the functionality of passing in custom values.</p><p><img src="https://i.imgur.com/b2qiivG.png" alt="bpFunction" /></p><p>The idea behind this function is to set the current gameplay speed based on the number of viewers. The more viewers there are, the faster and harder the gameplay becomes.</p><p><img src="https://i.imgur.com/wu2Gox3.png" alt="bpEvent" /></p><p>This event acts as a one-time trigger, initiating a “burst fire” (with a variable passed in to enhance the effect). This could be linked to an on-stream event.</p><h2 id="remote-control-interface"><a class="markdownIt-Anchor" href="#remote-control-interface"></a> Remote Control Interface</h2><p><img src="https://i.imgur.com/9yACjgu.png" alt="rcInterface" /></p><p>You can easily test if these functionalities are working correctly by:</p><ol><li>Creating a Remote Control Unreal asset.</li><li>Binding it to a blueprint actor and its event or function.<ul><li>You can also take this time to configure the custom arguments.</li></ul></li><li>Running the game instance, opening the Remote Control interface, and clicking the “Call Function.”</li></ol><p>You should see the desired result as if those events and functions were triggered.</p><h3 id="troubleshoot"><a class="markdownIt-Anchor" href="#troubleshoot"></a> Troubleshoot</h3><p>If something isn’t working, check if the server has started. By default, the auto-start web server should be turned on.</p><p><img src="https://i.imgur.com/JUVU3qC.png" alt="rcplugin" /></p><p>You can also manually control the web server by accessing the game instance command console using the backtick key <code>`</code></p><ul><li><code>WebControl.StartServer</code><ul><li>Starts the web server and begins listening for incoming requests on port 30010.</li></ul></li><li><code>WebControl.StopServer</code><ul><li>stops the web server, preventing any more requests to your Unreal Editor instance from being handled.</li></ul></li></ul><h3 id="testing"><a class="markdownIt-Anchor" href="#testing"></a> Testing</h3><p><strong>PIE Mode</strong></p><p>When running the game in Editor, you need to add the prefix “UEDPIE_0_” before the level name when specifying it via a web request. This is not necessary if you’re using the Remote Control UI. <a href="https://forums.unrealengine.com/t/does-web-remote-control-work-during-runtime/463743/5">source</a></p><p><strong>Package build</strong></p><p>For a packaged build, you need to run the executable with the “-RCWebControlEnable” flag. You can do this either through the command prompt or by creating a shortcut and adding “-RCWebControlEnable” afterward. <a href="https://www.youtube.com/watch?v=jlT-pSWcEr0">source</a></p><p><img src="https://i.imgur.com/M6U4sRQ.png" alt="shortcut" /></p><h2 id="http-request-via-postman"><a class="markdownIt-Anchor" href="#http-request-via-postman"></a> Http Request via Postman</h2><p>Next, we will test using the super user-friendly Postman web service to send remote commands without relying on the built-in Unreal Remote Control interface.</p><p>I will not cover how to use Postman as there are many instructions out there, here I demonstrated read and write commands.</p><p><img src="https://i.imgur.com/O65kyEZ.png" alt="postmanSet" /></p><p><img src="https://i.imgur.com/WmDIi38.png" alt="postmanGet" /></p><h2 id="http-request-api-via-python"><a class="markdownIt-Anchor" href="#http-request-api-via-python"></a> Http Request API via Python</h2><p>The next step is to extend this further by using a Python script to replicate the HTTP requests. Fortunately, it’s quite easy and requires minimal setup.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">r&#x27;http://localhost:30010/remote/object/call&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sendBurst</span>(<span class="params">multiplier=<span class="number">10</span></span>):</span><br><span class="line">    d = &#123;</span><br><span class="line">        <span class="string">&quot;objectPath&quot;</span>: <span class="string">&quot;/Game/Main/Maps/UEDPIE_0_Test.Test:PersistentLevel.BP_ContinuousCannonTest_C_1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;functionName&quot;</span>: <span class="string">&quot;Burst&quot;</span>,</span><br><span class="line">        <span class="string">&quot;parameters&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;Multiplier&quot;</span>: multiplier</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;generateTransaction&quot;</span>: <span class="literal">True</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    r = requests.put(url, json=d)</span><br><span class="line">    <span class="keyword">return</span> r.text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">updateSpeedByAudience</span>(<span class="params">count</span>):</span><br><span class="line">    d = &#123;</span><br><span class="line">        <span class="string">&quot;objectPath&quot;</span>: <span class="string">&quot;/Game/Main/Maps/UEDPIE_0_Test.Test:PersistentLevel.BP_ContinuousCannonTest_C_1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;functionName&quot;</span>: <span class="string">&quot;Set Speed By Audience Count&quot;</span>,</span><br><span class="line">        <span class="string">&quot;parameters&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;count&quot;</span>: count + <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;generateTransaction&quot;</span>: <span class="literal">True</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    r = requests.put(url, json=d)</span><br><span class="line">    <span class="keyword">return</span> r.text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    updateSpeedByAudience(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>Here, we recreated the same functionality presented via Postman, but now we’re able to execute those commands via a Python script. This is useful if you have an external application that uses Python.</p><p>Next, let’s see how this works with TikTok’s Python API.</p><h2 id="optional-tiktok-linking"><a class="markdownIt-Anchor" href="#optional-tiktok-linking"></a> (Optional) TikTok Linking</h2><p>For TikTok integration, you can use the following library:<a href="https://github.com/zerodytrash/TikTok-Live-Connector">https://github.com/zerodytrash/TikTok-Live-Connector</a></p><p>You can input your TikTok ID using TikTokLiveClient(unique_id). Events on TikTok, such as user joining or commenting, will trigger events or functions in the Unreal instance.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> TikTokLive <span class="keyword">import</span> TikTokLiveClient</span><br><span class="line"><span class="keyword">from</span> TikTokLive.events <span class="keyword">import</span> CommentEvent, JoinEvent, RoomUserSeqEvent</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create the client</span></span><br><span class="line">client: TikTokLiveClient = TikTokLiveClient(unique_id=<span class="string">&quot;@xxx&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@client.on(<span class="params">RoomUserSeqEvent</span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">on_user_info</span>(<span class="params">event: RoomUserSeqEvent</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;something&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(event.total_user)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">on_comment</span>(<span class="params">event: CommentEvent</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;user commented &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(event.content))</span><br><span class="line">    sendBurst(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">on_join</span>(<span class="params">event: JoinEvent</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;welcome user &#123;&#125; joining&#x27;</span>.<span class="built_in">format</span>(event.user_id))</span><br><span class="line">    sendBurst(<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">client.add_listener(JoinEvent, on_join)</span><br><span class="line">client.add_listener(CommentEvent, on_comment)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># Run the client and block the main thread</span></span><br><span class="line">    <span class="comment"># await client.start() to run non-blocking</span></span><br><span class="line">    client.run()</span><br></pre></td></tr></table></figure><h2 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h2><p><a href="https://docs.unrealengine.com/4.27/en-US/ProductionPipelines/ScriptingAndAutomation/WebControl/QuickStart/">Unreal Forum - Remote Control Quick Start</a></p><p><a href="https://docs.unrealengine.com/4.27/en-US/ProductionPipelines/ScriptingAndAutomation/WebControl/Endpoints/">Unreal Forum - Remote Control API HTTP Reference</a></p>]]></content>
    
    
    <summary type="html">Inspired by TikTok&#39;s live stream interaction games, this blog covers using Unreal Engine&#39;s Remote Control system to create interactive gameplay experiences. Learn to set up blueprints, test with Postman, and integrate Python scripts for remote control. Additionally, it demonstrates linking TikTok events to Unreal Engine actions.</summary>
    
    
    
    <category term="unreal" scheme="https://www.xingyulei.com/categories/unreal/"/>
    
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
    <category term="python" scheme="https://www.xingyulei.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Lighting Methods for Games - Overview</title>
    <link href="https://www.xingyulei.com/post/graphics-lighting-mode/"/>
    <id>https://www.xingyulei.com/post/graphics-lighting-mode/</id>
    <published>2024-07-24T16:00:00.000Z</published>
    <updated>2024-08-26T11:04:02.630Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="380e433006d14b58aa7d8588f46c0ef6b9910652d616ac362edcfb9faa8f34b7"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Donate $3 or subscribe $2/month for password access to exclusive posts">Donate $3 or subscribe $2/month for password access to exclusive posts</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Lighting is crucial in film and game visuals, balancing quality and performance. Techniques like lightmaps, light probes, vertex lighting, and real-time lighting offer various solutions for static and dynamic scenes. Each method has specific uses, benefits, and costs, optimizing both visual fidelity and computational efficiency.</summary>
    
    
    
    <category term="graphics" scheme="https://www.xingyulei.com/categories/graphics/"/>
    
    
    <category term="rendering" scheme="https://www.xingyulei.com/tags/rendering/"/>
    
    <category term="optimization" scheme="https://www.xingyulei.com/tags/optimization/"/>
    
  </entry>
  
  <entry>
    <title>Unreal Physics System: Learning the Essentials in 10 Minutes</title>
    <link href="https://www.xingyulei.com/post/ue-physics-basic/"/>
    <id>https://www.xingyulei.com/post/ue-physics-basic/</id>
    <published>2024-06-16T16:00:00.000Z</published>
    <updated>2024-07-17T10:12:08.839Z</updated>
    
    <content type="html"><![CDATA[<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>Unreal’s real-time physics body system is quite powerful, using physics it is easy to add fun and organic animation to your project, (also as a non-animator, I don’t have to hand key anything) which is why I just love it.</p><p>Today I want to show you a basic example that you can create within 10 minutes as an introductory to Unreal’s physics system. Afterward, you’ll be able to create many physics mechanic using the principle we learned today.</p><p>Here’s the final result we’re creating: a dynamic jump bad that bounces object off, then return to original position.</p><p><img src="https://i.imgur.com/ZM2ifvF.gif" alt="jump pad" /></p><h2 id="physics-body-and-constraints"><a class="markdownIt-Anchor" href="#physics-body-and-constraints"></a> Physics Body and Constraints</h2><p>Generally speaking we need at least one physics body (two in our case) and an physics constraints to build a dynamic mechanic system.</p><p><img src="https://i.imgur.com/FXcwAKq.png" alt="outline" /></p><ul><li><p><strong>Physics body:</strong> contains the physics attribute of the object, usually mass, center of gravity, collision shape, physics material (how it reacts to surface) and etc</p></li><li><p><strong>Physics constraints:</strong> dictate the movement of the physics object/body.</p></li></ul><p>To create physics body, is quite easy, we add static meshes and check “Simulate Physics”,</p><p>To create a physics constraint there must be two component specified, we can have many constrains, but each constraint tell Unreal the relationship between the two physics body. (we only need one in our example, which is the relationship between our pad and our base)</p><ul><li><p>Component 1 (Pad): is the “child” component of the two, the one with simulated physics turned on</p></li><li><p>Component 2 (Base): is the “parent” component of the two, our base is static, which means you can also leave this component as “None” which will default as the scene root</p></li></ul><p><img src="https://i.imgur.com/3Y44geb.png" alt="constraint" /></p><p>Disabled collision in the physics constraint should be enabled if possible to avoid collision between the two simulated component</p><h2 id="constraint-limits"><a class="markdownIt-Anchor" href="#constraint-limits"></a> Constraint Limits</h2><p>The movement limits is one of the most important attribute of our system. There are two types of constraint limits: linear and angular.</p><p>Axes:Usually if you want the movement on certain axes either rotation or translation toggle on free (unrestricted) or limited motion (restricted within certain range), if you don’t want any movement at certain axes you would specify it to be locked</p><p><img src="https://i.imgur.com/Up0xqPE.png" alt="linear" /></p><p>For our jump pad example, we would like to limit our translation movement to be up and down, so we locked the X and Y motion.</p><p><img src="https://i.imgur.com/XuCMNzQ.png" alt="angular" /></p><p>We would like our jump pad to swing sideways but no twisting motion, which is why we locked the twist motion axis (the naming can be confusing sometime)</p><p>What is good is that unreal provides this gizmo which you can easily tell if you have the correct range of motion setup.</p><p><img src="https://d3kjluh73b9h9o.cloudfront.net/original/4X/3/6/c/36ce57be35bf5ffa0571bf85b70cde17c274c6a1.png" alt="gizmo" /></p><h3 id="soft-constraint"><a class="markdownIt-Anchor" href="#soft-constraint"></a> Soft Constraint</h3><p>Movement Range:Limited motion allows you to specify a limit range also enabling you to turn on soft constraint</p><p>The soft constraint being soft means that you can also tweak the stiffness and the damping of the soft constraint to mimic a spring behavior</p><ul><li>There’s also an angular breakable or linear breakable which can be helpful to break the constraint when the force reached a certain threshold</li></ul><h2 id="motor"><a class="markdownIt-Anchor" href="#motor"></a> Motor</h2><p>A simulated body with no reaction will appear very boring, because it will basic rest eventually.</p><p>That’s where motor are introduced, this can be used in example such as a revolving door that rotates infinitely, a seesaw that returns to its neutral balanced position, and in our case, after our jump pad launches, it will snap back to its initial position.</p><p>Another example usage of motor is to create a resilient resistances internal force that fights back the external force. In our case the bouncing springy motion when an external heavy object is dropped on our jump pad.</p><p>I will explain the linear and angular motor together as they have the same principle:</p><h3 id="target-positionorientation"><a class="markdownIt-Anchor" href="#target-positionorientation"></a> Target Position/Orientation:</h3><p>The settling position/orientation that the constraint will try to make our physics body rest at, <strong>the strength is how much the motor forces to drive the simulated component back to the target (i.e. how much this is enforced by our motor)</strong></p><ul><li>The target position/orientation should be kept at zero if the initial position is the desired rest position.</li></ul><h3 id="velocity-target"><a class="markdownIt-Anchor" href="#velocity-target"></a> Velocity Target:</h3><p>The settling velocity that the constraint will try to maintain on our physics body, the strength is the same as before.</p><p>For angular motor:the drives should match the movement along certain axes</p><ul><li>The target velocity should be kept at zero if we want the physics body to stay still (0 velocity) at the end.</li></ul><h3 id="note-and-tips"><a class="markdownIt-Anchor" href="#note-and-tips"></a> Note and Tips</h3><ul><li><p>The motor force is determined by both the strength and multiply the mass/weight of the simulated component. The heavier the object, the more strength you’ll need</p></li><li><p>The target velocity kept at zero (means the constraint will try to cancel out any velocity) with a small strength can help reduce the wobbliness caused by the motor fighting the gravity.</p></li><li><p>A target velocity only (meaning no target position/rotation), this will be able to apply a continuous movement/velocity to keep it moving, good for infinite rotating door</p></li></ul><p><img src="https://i.imgur.com/0374icV.png" alt="motor" /></p><h2 id="bp-access"><a class="markdownIt-Anchor" href="#bp-access"></a> BP Access</h2><h3 id="example-not-starting-with-non-neutral-position"><a class="markdownIt-Anchor" href="#example-not-starting-with-non-neutral-position"></a> Example: Not starting with non-neutral position</h3><p>Let’s consider an initial pulled back springboard that will return to neutral position.</p><p>In order to achieve this effect, we need to pull the simulated component in the viewport and apply the counter offset value which will put the component back to neutral</p><p>if the neutral is (0, 0, 120), and pull back is (0, 0, 60)</p><p>Steps:</p><ol><li>in the viewport set it to (0, 0, 60)</li><li>then in the linear motor set it to (0, 0, -60)<ul><li>-60 comes from subtracting 60 with 120</li></ul></li><li>this will make the springboard launch to the neutral position when starting as pulled back</li></ol><p><img src="https://i.imgur.com/BSkPyok.png" alt="bp" /></p><p>This can be done in blueprint via set linear position target on the constraint.</p><ul><li>you can also use this BP node to dynamically change the target, for instance you need to make a radial switch level that can flip-flop between 2 target state, or a seesaw that bouncing back and forth infinitely.</li></ul><h2 id="other-notes"><a class="markdownIt-Anchor" href="#other-notes"></a> Other Notes</h2><ul><li><p>To save compute power, Unreal will put physics object to sleep if it’s not moving, we need to specify “sleep velocity threshold” or make use of the “Wake Rigid Body” function call in BP to make our physics object operating as normal</p></li><li><p>The base can be hidden or set to not visible, but it has to exist because the physics constraint needs two components to work you can also disable collision on the base by setting the collision preset to query only and ignore everything</p></li></ul><h2 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h2><p>Everything in this guy’s YouTube channel is gold:<a href="https://www.youtube.com/@Lusiogenic">YouTube -Lusiogenic</a></p>]]></content>
    
    
    <summary type="html">Unreal Engine&#39;s powerful real-time physics system allows easy, organic animation without hand-keying. This 10-minute tutorial shows how to create a dynamic jump pad while teaching basic physics principles for future projects. Perfect for game developer</summary>
    
    
    
    <category term="unreal" scheme="https://www.xingyulei.com/categories/unreal/"/>
    
    
    <category term="animation" scheme="https://www.xingyulei.com/tags/animation/"/>
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>Create Hexo Blog for Free Part 2: Custom Blog Theme and Url</title>
    <link href="https://www.xingyulei.com/post/general-hexo-blog-2/"/>
    <id>https://www.xingyulei.com/post/general-hexo-blog-2/</id>
    <published>2024-05-11T16:00:00.000Z</published>
    <updated>2024-06-17T02:08:41.111Z</updated>
    
    <content type="html"><![CDATA[<h2 id="overview"><a class="markdownIt-Anchor" href="#overview"></a> Overview</h2><p><a href="https://hexo.io/index.html">Hexo</a> is a framework used to generate static website. GitHub is used as web server.</p><p>I’ve been using this for years and is the very website you are browsing right now. By the end of this tutorial, you will be able to create something similar to this: <a href="https://www.flygogo.studio/">https://www.flygogo.studio/</a> or the current website you are in: <a href="https://www.xingyulei.com/">https://www.xingyulei.com/</a></p><p>Here is the most comprehensive guide out there, enjoy!</p><ul><li><a href="https://www.xingyulei.com/post/general-hexo-blog-1">Create Your Blog using Hexo and GitHub Page, for Free!</a></li><li><a href="https://www.xingyulei.com/post/general-hexo-blog-2">Customize Hexo Blog with Theme and Custom Domain</a></li></ul><p><img src="https://i.imgur.com/NOhLI7P.png" alt="finished" />(Finished product)</p><h2 id="hexo-theme"><a class="markdownIt-Anchor" href="#hexo-theme"></a> Hexo Theme</h2><blockquote><p>Pick a theme, any theme</p></blockquote><p>The following showcases the customizable of Hexo blog framework, because we can use and modify (more advance topic) the different Hexo theme/template.</p><h3 id="pick-your-theme"><a class="markdownIt-Anchor" href="#pick-your-theme"></a> Pick Your Theme</h3><p>Based on your personal needs, you can choose theme that best suits the content of your website. Hexo works best with blog, but it can be used for other purpose such as a product page, a portfolio website, an image gallery and more.</p><p>You can find the theme library from <a href="https://hexo.io/themes/index.html;">https://hexo.io/themes/index.html;</a> which you’ll be able to look at the demo/preview website, as well as go to the source code (usually linked to a git repo) of the theme.</p><p>For this example, I choose the theme “Tranquility” and I can take a peek to its source repo where there are instructions and dependency specifically used for this theme: <a href="https://github.com/hooozen/hexo-theme-tranquility">https://github.com/hooozen/hexo-theme-tranquility</a></p><h3 id="install"><a class="markdownIt-Anchor" href="#install"></a> Install</h3><p>You can install the theme in multiple ways, by downloading the zip file or through git clone command, this is pretty standard process.</p><p>If you prefer downloading the zip file: decompressing it to your <code>blog/themes</code> directory</p><p>If choose running <code>git clone</code>, also do it at your <code>blog/themes</code> directory (not the blog root directory) launch commandline. (e.g. <code>git clone https://github.com/hooozen/hexo-theme-tranquility.git tranquility</code>)</p><h3 id="requirements"><a class="markdownIt-Anchor" href="#requirements"></a> Requirements</h3><p>Different blog theme has different plugin/dependency requirements, usually you would follow the <code>readme.md</code> guide in each theme’s source repo to see what is it needed to be installed.</p><p>You can check <code>blog\node_modules</code> to ensure the necessary packages are in place.</p><h3 id="configure"><a class="markdownIt-Anchor" href="#configure"></a> Configure</h3><p>Once again back in the <code>_config.yml</code> we would update the following fields:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://leixingyu.github.io/flygogo</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">tranquility</span></span><br></pre></td></tr></table></figure><p>Next up, follow the author’s guide (usually on <code>readme.md</code>) on configuring the template theme which is located <code>blog\theme\&lt;theme name&gt;\_config.yml</code>.</p><ul><li>It is important to check the readme and issues in the GitHub page which filters out poorly supported theme, a good theme as well written documentation and also answer to user’s notes about more feature requests.</li></ul><p>When you host it locally you should now see the theme come in as so:</p><p><img src="https://i.imgur.com/QDRHQHz.png" alt="theme" /></p><p>Next you are ready to deploy onto GitHub.</p><h3 id="update"><a class="markdownIt-Anchor" href="#update"></a> Update</h3><p>For any reason you need to update the theme because the author has implemented a new feature that you really need, you can do the following:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/tranquility</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><p>And then you deploy.</p><ul><li>Although I think it’s pretty rare you need to update the theme since a lot of the hexo project are pretty stabled and the author has moved on with other projects.</li></ul><h2 id="custom-domain-name"><a class="markdownIt-Anchor" href="#custom-domain-name"></a> Custom Domain Name</h2><p>Now you have the blog you need in a visual you like, let’s get rid of the ugly domain name (url) shall we?</p><h3 id="dns-configuration"><a class="markdownIt-Anchor" href="#dns-configuration"></a> DNS Configuration</h3><p>Now you do need to purchase a domain name from a web hosting company, such as namecheap, godaddy, <a href="http://domain.com">domain.com</a>, and etc.</p><ul><li>The one that I’m using is namecheap, and a domain name usually cost around $10 per year. Of course feel free to choose any website as I’m not sponsored by any.</li></ul><p>After you registered a domain name, you also need to configure the DNS in domain hosting websites.</p><p>Input the following to replace the “host records”:</p><ul><li><img src="https://i.imgur.com/GZixMY9.png" alt="dns" /></li></ul><h3 id="hexo-configuration"><a class="markdownIt-Anchor" href="#hexo-configuration"></a> Hexo Configuration</h3><p>Now go back to your “blog/source” folder and create a <code>CNAME</code> file (no extension), and put in your custom domain name. The CNAME provides an alias for another domain which maps the website to the custom url.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.flygogo.studio</span><br></pre></td></tr></table></figure><p>You would also need to configure the <code>__config.yml</code> (we did it quite a few times now).</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://www.flygogo.studio</span></span><br></pre></td></tr></table></figure><p>Make note of the <code>https://</code> in the front, it’s important to put in the whole url.</p><h3 id="github-configuration"><a class="markdownIt-Anchor" href="#github-configuration"></a> Github Configuration</h3><p>This is the very last step, we also need to go back to the repository’s “settings” page over at GitHub.</p><p>Under the custom domain field, put your url:</p><p><img src="https://i.imgur.com/JiS3G7e.png" alt="github page" /></p><p>After when everything is done, finally we can see it now!</p><p><img src="https://i.imgur.com/NOhLI7P.png" alt="finished" /></p><h2 id="whats-next"><a class="markdownIt-Anchor" href="#whats-next"></a> What’s Next</h2><p>There’s far more you can do with Hexo, you can customize it with the theme’s documentation provided by the author and much more.</p><p>If you know javascript and html, you can freely branch out from the source theme and customize the elements to your liking. Hell you can create a brand new theme on your own too! (make sure to share it with the community)</p><p>There’s also a lot of built-in Hexo plugins, for example:</p><ul><li>Font Awesome Support: <a href="https://github.com/hexojs/hexo-fontawesome"></a></li><li>Post Word Count: <a href="https://github.com/next-theme/hexo-word-counter"></a></li><li>Code Highlighting: <a href="https://github.com/ele828/hexo-prism-plugin"></a></li><li>Related Posts Display: <a href="https://github.com/tea3/hexo-related-popular-posts"></a></li><li>Latex Math Renderer: <a href="https://github.com/next-theme/hexo-filter-mathjax"></a></li><li>Gallery: <a href="https://github.com/sachinchoolur/lightGallery"></a></li></ul><p>You can also plug your page into Google Analytics and Search Console to get it indexed and also track the traffic. Wow, so much stuff to do right?</p>]]></content>
    
    
    <summary type="html">Learn how to make your Hexo blog truly yours! Our latest post guides you through customizing your blog&#39;s theme and URL. Stand out online with a look that&#39;s uniquely you. Dive in and start crafting your blog&#39;s perfect look today.</summary>
    
    
    
    <category term="general" scheme="https://www.xingyulei.com/categories/general/"/>
    
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
    <category term="design" scheme="https://www.xingyulei.com/tags/design/"/>
    
  </entry>
  
  <entry>
    <title>Create Hexo Blog for Free Part 1: Hexo Intro and Using GitHub Page</title>
    <link href="https://www.xingyulei.com/post/general-hexo-blog-1/"/>
    <id>https://www.xingyulei.com/post/general-hexo-blog-1/</id>
    <published>2024-04-16T16:00:00.000Z</published>
    <updated>2024-05-12T10:19:10.925Z</updated>
    
    <content type="html"><![CDATA[<h2 id="overview"><a class="markdownIt-Anchor" href="#overview"></a> Overview</h2><p><a href="https://hexo.io/index.html">Hexo</a> is a framework used to generate static website. GitHub is used as web server.</p><p>I’ve been using this for years and is the very website you are browsing right now. By the end of this tutorial, you will be able to create something similar to this: <a href="https://www.flygogo.studio/">https://www.flygogo.studio/</a> or the current website you are in: <a href="https://www.xingyulei.com/">https://www.xingyulei.com/</a></p><p>Here is the most comprehensive guide out there, enjoy!</p><ul><li><a href="https://www.xingyulei.com/post/general-hexo-blog-1">Create Your Blog using Hexo and GitHub Page, for Free!</a></li><li><a href="https://www.xingyulei.com/post/general-hexo-blog-2">Customize Hexo Blog with Theme and Custom Domain</a></li></ul><p><img src="https://i.imgur.com/NOhLI7P.png" alt="finished" />(Finished product)</p><h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>There’s a lot I can say of website building, from the early days in college when I first started learning HTML, CSS and JS, finding myself designing layout in Adobe Dreamweaver for hours. Later I found Adobe Muse, a fluid, adaptive website builder with no coding requirement until it was discontinued in 2018. I also tried the old fashion website builder such as Wix, Squarespace or WordPress, which in my opinion is too expensive for charging over $100/yr.</p><p>Today, I will show you how to use a combination of Hexo framework and Github Page to build and host your own blog website (almost for free, you only need to pay for custom domain name which is optional).</p><h2 id="create-hexo-scaffolding"><a class="markdownIt-Anchor" href="#create-hexo-scaffolding"></a> Create Hexo Scaffolding</h2><h3 id="install-npm"><a class="markdownIt-Anchor" href="#install-npm"></a> Install npm</h3><p><code>npm</code> is a JavaScript package manager, a must-have to install various packages to build our blog including the Hexo framework.</p><p>Download instruction: <a href="https://www.npmjs.com/package/npm">https://www.npmjs.com/package/npm</a></p><h3 id="install-hexo"><a class="markdownIt-Anchor" href="#install-hexo"></a> Install Hexo</h3><p>Once <code>npm</code> has finished installing, go to commandline and install Hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="initialize-hexo-blog"><a class="markdownIt-Anchor" href="#initialize-hexo-blog"></a> Initialize Hexo Blog</h3><p>Now we can create the Hexo Blog scafolding:</p><p><img src="https://i.imgur.com/k98rtNY.png" alt="scafold" /></p><p>Choose a root directory where the hexo blog folder will be located and execute the following command.</p><p><strong>Important: all command listed below should be launched from the blog folder root path.</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br><span class="line">$ cd blog</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>We don’t need to create a new root folder, as Hexo commandline will create one called “blog” for us, we can just rename it afterward.</p><p>Afterward, we should see the same thing being generated like the image above.</p><h3 id="add-your-blog-post-optional"><a class="markdownIt-Anchor" href="#add-your-blog-post-optional"></a> Add Your Blog Post (optional)</h3><p>All Hexo post should be written in Markdown (<code>.md</code>) format, if you have existing post, you can move it to the <code>&lt;blog_name&gt;/source/_posts/</code> directory.</p><p>If not, there’s a default <a href="http://helloworld.md">helloworld.md</a> in there already, and it is serving as an example.</p><h3 id="generate-static-website"><a class="markdownIt-Anchor" href="#generate-static-website"></a> Generate Static Website</h3><p>You can generate the website using those scafold and host it using your local machine as the server, thus allowing you to preview it</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>Once you get a confirmation from the commandline, at this point open a browser and go to the following url: <a href="http://localhost:4000/">http://localhost:4000/</a></p><p>And there you have it.</p><p><img src="https://i.imgur.com/34NK7NX.png" alt="local server" /></p><h2 id="github-and-git-deployer-configuration"><a class="markdownIt-Anchor" href="#github-and-git-deployer-configuration"></a> GitHub and Git Deployer Configuration</h2><p>The next thing to do is getting the website on to the GitHub server which offers free hosting, nice isn’t it?</p><h3 id="install-deployer"><a class="markdownIt-Anchor" href="#install-deployer"></a> Install Deployer</h3><p>Install hexo-deployer-git plugin for Hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git -save</span><br></pre></td></tr></table></figure><h3 id="create-github-repo"><a class="markdownIt-Anchor" href="#create-github-repo"></a> Create GitHub Repo</h3><p>Second thing is to create a brand new and blank repository with any name, this repo is used to store all the files related to your blog.</p><p>The name of the repo doesn’t have to be <code>username.github.io</code>, it can be anything</p><ul><li>I see many misconception about forcing you to use this repo name, how would one host multiple websites using GitHub if this was required.</li></ul><h3 id="configure"><a class="markdownIt-Anchor" href="#configure"></a> Configure</h3><p>Next thing is to specify the newly created repo in your blog configuration file so that the “Git deployer” knows where to upload the file to:</p><p>In your <code>_config.yml</code>, create the following fields (or modify if you have it already) like so:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:USERNAME/USERNAME.github.io.git</span></span><br></pre></td></tr></table></figure><p>You would replace the repo url with the one in your repo’s SSH.</p><h3 id="deploy"><a class="markdownIt-Anchor" href="#deploy"></a> Deploy</h3><p>Finally, you are good to deploy</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>Go to your repo to see if it’s updated, you should see something like so:</p><p><img src="https://i.imgur.com/KNdYzEy.png" alt="update" /></p><h3 id="common-command"><a class="markdownIt-Anchor" href="#common-command"></a> Common Command</h3><p>I like to bundle the hexo deploy command with the hexo clean command which will prompt a re-population of the whole directory, this gives a cleaner result.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure><h2 id="whats-next"><a class="markdownIt-Anchor" href="#whats-next"></a> What’s Next</h2><p>Please follow my next blog post and learn about blog customization using theme and custom domain name:<a href="https://www.xingyulei.com/post/general-hexo-blog-2">https://www.xingyulei.com/post/general-hexo-blog-2</a></p><h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2><p><a href="https://xwu64.github.io/2019/02/19/Tutorial-for-Hexo-Github-Blog/">Xiaoliang’s Blog - Tutorial for Hexo+Github=Blog</a></p><p><a href="https://hexo.io/index.html">Hexo</a></p>]]></content>
    
    
    <summary type="html">Learn Hexo, a framework for generating static websites, and utilizes GitHub as a web server. Discover how to build and host your blog using Hexo and GitHub Page almost for free.</summary>
    
    
    
    <category term="general" scheme="https://www.xingyulei.com/categories/general/"/>
    
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
    <category term="design" scheme="https://www.xingyulei.com/tags/design/"/>
    
  </entry>
  
  <entry>
    <title>Performance Optimization Part 3: Environmental Memory</title>
    <link href="https://www.xingyulei.com/post/graphics-optimization-3/"/>
    <id>https://www.xingyulei.com/post/graphics-optimization-3/</id>
    <published>2024-03-18T16:00:00.000Z</published>
    <updated>2024-08-26T11:04:02.634Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="45c6f6a775fcd39e34526bbcf927e66209f0505dd077d84c25680d7bbd2c7f63"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Donate $3 or subscribe $2/month for password access to exclusive posts">Donate $3 or subscribe $2/month for password access to exclusive posts</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Learn how to streamline actor and texture memory usage for improved performance without sacrificing visual quality. Dive into LOD, instance reduction, texture compression, and more. Learn strategies like texture packing and material overrides to maximize efficiency.</summary>
    
    
    
    <category term="graphics" scheme="https://www.xingyulei.com/categories/graphics/"/>
    
    
    <category term="rendering" scheme="https://www.xingyulei.com/tags/rendering/"/>
    
    <category term="optimization" scheme="https://www.xingyulei.com/tags/optimization/"/>
    
  </entry>
  
  <entry>
    <title>Performance Optimization Part 2: Light, Shadow and Shading</title>
    <link href="https://www.xingyulei.com/post/graphics-optimization-2/"/>
    <id>https://www.xingyulei.com/post/graphics-optimization-2/</id>
    <published>2024-02-18T16:00:00.000Z</published>
    <updated>2024-08-26T11:04:02.557Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="27738c97f6befc1df6b8835b827793f31a5379a752a96fe639fc75e5660909c6"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Donate $3 or subscribe $2/month for password access to exclusive posts">Donate $3 or subscribe $2/month for password access to exclusive posts</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Learn how to maximize resources while maintaining stunning visuals in your interactive experiences. Part 2 delves into light, shadow, and shading, revealing advanced techniques for optimizing performance in real-time rendering.</summary>
    
    
    
    <category term="graphics" scheme="https://www.xingyulei.com/categories/graphics/"/>
    
    
    <category term="rendering" scheme="https://www.xingyulei.com/tags/rendering/"/>
    
    <category term="optimization" scheme="https://www.xingyulei.com/tags/optimization/"/>
    
  </entry>
  
  <entry>
    <title>Performance Optimization Part 1: Overdraws</title>
    <link href="https://www.xingyulei.com/post/graphics-optimization-1/"/>
    <id>https://www.xingyulei.com/post/graphics-optimization-1/</id>
    <published>2024-01-19T16:00:00.000Z</published>
    <updated>2024-08-26T11:04:02.481Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="5526dd035d5610277946e951096d67b0fab59bdcc0b48f2ce6e11a1d4887096e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Donate $3 or subscribe $2/month for password access to exclusive posts">Donate $3 or subscribe $2/month for password access to exclusive posts</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Explore the forefront of real-time graphics optimization in our latest piece. Dive into advanced techniques like LODs, pixel-density prioritization, and effective culling methods. Learn how these strategies are enhancing visual fidelity and performance in games.</summary>
    
    
    
    <category term="graphics" scheme="https://www.xingyulei.com/categories/graphics/"/>
    
    
    <category term="rendering" scheme="https://www.xingyulei.com/tags/rendering/"/>
    
    <category term="optimization" scheme="https://www.xingyulei.com/tags/optimization/"/>
    
  </entry>
  
  <entry>
    <title>Cloth CFX Pipeline for Offline Simulation</title>
    <link href="https://www.xingyulei.com/post/general-cfx/"/>
    <id>https://www.xingyulei.com/post/general-cfx/</id>
    <published>2023-12-12T16:00:00.000Z</published>
    <updated>2024-08-26T11:04:02.618Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6e95e028ed44909c3a43b3c715689cef133c8000a8cd856c6bc691ac3c053db3"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Donate $3 or subscribe $2/month for password access to exclusive posts">Donate $3 or subscribe $2/month for password access to exclusive posts</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Dive into the world of dynamic simulations, emphasizing the role of artists in offline cloth simulation. It covers the stages of cloth rig building, simulation, and post-processing. The article also explores potential improvements in pipeline efficiency.</summary>
    
    
    
    <category term="maya" scheme="https://www.xingyulei.com/categories/maya/"/>
    
    
    <category term="animation" scheme="https://www.xingyulei.com/tags/animation/"/>
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>Git Summary: Command and Workflow</title>
    <link href="https://www.xingyulei.com/post/general-git-tip/"/>
    <id>https://www.xingyulei.com/post/general-git-tip/</id>
    <published>2023-11-19T16:00:00.000Z</published>
    <updated>2024-01-27T20:59:35.565Z</updated>
    
    <content type="html"><![CDATA[<h2 id="command-comparison"><a class="markdownIt-Anchor" href="#command-comparison"></a> Command Comparison</h2><h4 id="setting-up-repository"><a class="markdownIt-Anchor" href="#setting-up-repository"></a> Setting up Repository</h4><ul><li><code>git init</code> vs. <code>git clone</code><ul><li><code>git init</code> is a setup process where you initialize a bare local repo</li><li><code>git clone</code> obtain a local development clone repo from an already setup central repository, which can be treated as combining <code>git init</code> and <code>git remote add &lt;name&gt; &lt;url&gt; git</code></li></ul></li></ul><h4 id="push-vs-pull"><a class="markdownIt-Anchor" href="#push-vs-pull"></a> Push vs. Pull</h4><ul><li><code>git pull</code> vs <em><strong>pull request</strong></em> and <code>git push</code> vs <em><strong>push request</strong></em><ul><li><code>git pull</code> pulls the changes from the remote repo to your local repo, which is effectively a <code>git fetch</code> followed by a <code>git merge</code></li><li><em><strong>pull request</strong></em> is you requesting another repo to pull your change (more or less asking them to <code>git pull</code> from your repo). A <em>push request</em> is the other way around, where the target repo ask you to <code>git push</code> your changes</li></ul></li></ul><h4 id="configuration"><a class="markdownIt-Anchor" href="#configuration"></a> Configuration</h4><ul><li><p><code>git config</code>this command allows you to configure your Git configuration on a global or local project level, some common usage includes setting up name and email, configuring text color, or editor choice. There are three configuration levels: <code>--local</code>, <code>--global</code>, <code>--system</code></p><ul><li><p><code>git --global user.name &quot;John Doh&quot;</code></p></li><li><p><code>git --system core.editor vim</code></p></li><li><p>Note: most config only need to be set once, email is an exception where you will want to use personal email for personal projects and professional email for work-related projects.</p></li></ul></li></ul><h3 id="submodule"><a class="markdownIt-Anchor" href="#submodule"></a> Submodule</h3><ul><li><p>initialize submodule</p><blockquote><p><code>git submodule add https://github.com/repo_name &lt;folder_name&gt;</code></p></blockquote></li><li><p>update submodule to the latest</p><blockquote><p><code>git submodule update --remote --merge</code></p></blockquote></li><li><p>reset submodule if you’ve made a modification internally</p><blockquote><p><code>git submodule foreach --recursive git reset --hard</code></p></blockquote></li><li><p>hard reset the submodule by de-initializing it and re-initializing it</p><blockquote><p><code>git submodule deinit -f .</code></p></blockquote><blockquote><p><code>git submodule update --init</code></p></blockquote></li><li><p>remove submodule completely</p><blockquote><p><code>git submodule deinit -f &lt;submodule path&gt;</code></p></blockquote><blockquote><p><code>git rm --force &lt;submodule path&gt;</code></p></blockquote><blockquote><p><code>rm -rf .git/modules/&lt;submodule path&gt;</code></p></blockquote></li></ul><h3 id="common-workflow"><a class="markdownIt-Anchor" href="#common-workflow"></a> Common Workflow</h3><p><img src="https://i.redd.it/nm1w0gnf2zh11.png" alt="workflow" /></p><p>TLDR:</p><ul><li>Working directory: where we edit files</li><li>Staging area: a temporary location where files are kept for the next commit</li><li>Local repository: contains the code that has been committed</li><li>Remote repository: the remote server that stores the code</li></ul><hr /><h3 id="remote"><a class="markdownIt-Anchor" href="#remote"></a> Remote</h3><p>remote repo stores all branches that are tracked remotely and publicly available, which includes: <em>master</em> (the develop branch), other feature branches (<em>feature1, feature2</em> and etc)</p><h3 id="local"><a class="markdownIt-Anchor" href="#local"></a> Local</h3><p><strong>tracking ref</strong> (e.g. <em>origin/master, origin/feature1)</em></p><pre><code>copy of the remote repo you last fetched. `git fetch` grabs the *remote repo* and makes a copy of it on your local machine. You never work directly on that copy, because it is used for tracking. When you rebase a branch, it updates your *local branch* with all the latest from that copy you just fetched.- Usage: `git fetch` updates the latest change from remote (this needs to be combined with `git merge/rebase` to actually affect the working tree)</code></pre><p><strong>local branch</strong> (e.g. <em>master, feature1)</em></p><pre><code>current branch with all committed changes. So if you have uncommitted changes they are not represented in the local branch above.- `git status` tracks the change between the *local branch* and *tracking ref*, but it doesn't know the latest corresponding remote branch unless we fetch it.</code></pre><p><strong>working tree</strong> and index/staging area:</p><pre><code>the current state of the files in your current branch. So everything in the branch with your un-committed changes on top of it.- `git add` and `git commit` to reflect changes onto the *local branch*</code></pre><h3 id="feature-branch-workflow"><a class="markdownIt-Anchor" href="#feature-branch-workflow"></a> Feature Branch Workflow</h3><p><strong>Get the Latest Production Code:</strong></p><ul><li><code>git checkout master</code> switches <em>local branch</em> to <em>master</em> and <code>git status</code> to see if there are local/active changes made in the last session</li><li><code>git fetch origin</code> pulls the latest code (of all remote branches in the <em>remote repo</em> like remote <em>master</em>, remote <em>feature1, feature2</em>, etc) from the remote host (e.g. bitbucket). So, you get the most up-to-date code for <em>tracking ref.</em></li><li><code>git rebase origin/develop</code> copy that up-to-date code over to your working tree</li></ul><p><strong>Start a Feature Branch:</strong></p><ul><li><code>git flow feature start featureName</code> will branch off a new feature branch (e.g. <em>feature3</em>) and check it out (making it your <em>local branch</em> and updating your <em>working tree</em>). So, make sure you have fetched and rebased to the latest before starting. From this point, everything you change is local and isolated on the feature branch.</li></ul><p><strong>Save Changes:</strong></p><ul><li><p><code>git add</code> and <code>git commit</code> to updating the <em>local branch</em> with your active change</p></li><li><p><code>git push origin</code> will push the <em>local branch</em> (e.g. <em>feature3</em>) to the remote version of that branch (note: not the remote <em>master</em> but the remote <em>feature;</em> never push directly to develop) this made the feature branch available for others so they could pull it down to their machine and test it.</p><blockquote><p>the first time you push a branch to <em>remote repo</em> that doesn’t have it yet, there could be an error saying “no upstream branch”, to fix: <code>git push --set-upstream origin feature/feature3</code>')</p></blockquote></li><li><p>open up a pull request to merge remote <em>feature</em> to remote <em>master</em> and add reviewers</p></li></ul><p><strong>Update Feature to Match Master:</strong></p><p>if you are on a feature branch (e.g. <em>feature3</em>) and you want your branch up-to-date with <em>master</em> because maybe someone has pushed a branch to <em>remote repo</em> that you want the changes from, or addressing a PR comment; you can rebase your branch.</p><p><code>git fetch origin</code> and <code>git rebase origin/develop</code></p><ul><li><p>get the latest in <em>remote repo</em> and rebase your feature branch on top of <em>master</em>, make the adjustments and commit and push. you may get an error while trying to push your branch again. need to use force overwrite.</p><blockquote><p>commit or stash your active change before rebasing otherwise you might lose it, you’ll be notified for any code conflicts during rebase</p></blockquote></li><li><p>if your code, on the other hand, is decoupled from anything else, you could just skip the rebase and commit and push.</p></li></ul><p><strong>Update Feature Branch:</strong></p><ul><li><code>git checkout feature/branch1</code></li><li><code>git status</code> to see if you have local change by checking it against the current local tracking branch and <code>git fetch origin</code> to update the local tracking branch from remote</li><li><code>git rebase origin/feature/branch1</code>: while on feature branch1, rebase local workspace to local tracking branch that was just synced, you now have the latest from remote locally (if there’s local change on the workspace, you need to stash or revert it))</li></ul>]]></content>
    
    
    <summary type="html">Unlock the power of Version Control with Git using our easy-to-follow summary. Learn the most commonly used git commands. Our step-by-step guide provides instructions on using git submodules, also common workflow such as feature branch which is professionally used. Whether you&#39;re a beginner or an advanced user, our tutorial will help you master the techniques, and provide a helpful git reference for tech artist.</summary>
    
    
    
    <category term="general" scheme="https://www.xingyulei.com/categories/general/"/>
    
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>Write Metadata in Unreal: Blueprint-Driven Workflows</title>
    <link href="https://www.xingyulei.com/post/ue-metadata/"/>
    <id>https://www.xingyulei.com/post/ue-metadata/</id>
    <published>2023-10-12T16:00:00.000Z</published>
    <updated>2023-11-19T00:13:06.986Z</updated>
    
    <content type="html"><![CDATA[<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>In the world of digital workflows, handling metadata is a common practice.In most CG pipelines, metadata is stored in external text files,allowing tools to easily read and write data. But when dealing with Unreal Engine,which operates predominantly in real-time,the challenge arises to access metadata through Blueprint scripting,requiring the metadata to be in Unreal’s native format.</p><p>After some research, I came across a proposal from a staff member in the UnrealDeveloper Community. In this article,we’ll explore the different methods from the proposal anddiscuss the approach I’ve settled on.</p><h2 id="data-table"><a class="markdownIt-Anchor" href="#data-table"></a> Data Table</h2><p>Data tables offer a flexible way to structure data.However, it’s important to note that you need to define the data structurein advance to use them effectively</p><p>To have a working data table we need to first create adata structure where each entry of the data table will conform to.</p><p><img src="https://i.imgur.com/E3CUgEy.png" alt="data table and data structure" />Data Table (left) with corresponding Data Structure (right)</p><h3 id="how-to-read-data-table"><a class="markdownIt-Anchor" href="#how-to-read-data-table"></a> How to Read Data Table</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> unreal</span><br><span class="line"></span><br><span class="line">dt_path = <span class="string">r&#x27;/Game/Cinematics/Metadata/DT_TestMetadata.DT_TestMetadata&#x27;</span></span><br><span class="line"></span><br><span class="line">dt = unreal.EditorAssetLibrary.find_asset_data(dt_path).get_asset()</span><br><span class="line"></span><br><span class="line">col_name = <span class="string">&quot;Version&quot;</span>    </span><br><span class="line">row_names = unreal.DataTableFunctionLibrary.get_data_table_row_names(dt)</span><br><span class="line">positions = unreal.DataTableFunctionLibrary.get_data_table_column_as_string(dt, col_name)</span><br><span class="line"><span class="keyword">for</span> idx, col <span class="keyword">in</span> <span class="built_in">enumerate</span>(positions):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;row_names[idx]&#125;</span> - <span class="subst">&#123;col_name&#125;</span>: <span class="subst">&#123;col&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># entry1 - Version: 2</span></span><br><span class="line"><span class="comment"># entry2 - Version: 0</span></span><br></pre></td></tr></table></figure><h3 id="how-to-write-data-table"><a class="markdownIt-Anchor" href="#how-to-write-data-table"></a> How to Write Data Table</h3><p>It seems like data tables are ready-only at first, as there are only <code>get_data</code> function sets:<a href="https://forums.unrealengine.com/t/set-data-table-row/85844">https://forums.unrealengine.com/t/set-data-table-row/85844</a></p><p>However, there are in fact a way to write to data table, and that is with the use of.csv or .json.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unreal.DataTableFunctionLibrary.fill_data_table_from_json_file(data_table, json_file_path, data_structure)</span><br><span class="line">unreal.EditorAssetLibrary.save_loaded_asset(data_table, <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>I won’t go into how to update .csv or .json files, but do note that the formatting ofthe text file is important, and you can get a reference ofwhat the file would look at by simply export out the data table with some test data like so:</p><p><img src="https://i.imgur.com/2eFGgas.png" alt="export option" /></p><h2 id="metadata"><a class="markdownIt-Anchor" href="#metadata"></a> Metadata</h2><p>To access metadat for each asset, you can do a right-click “Asset Actions”, “Show Metadata”.</p><p><img src="https://i.imgur.com/OhmFOSY.png" alt="asset action" /></p><p>This is quite handy since, based on our need, it can be bound to an asset.</p><p>And if we want to separate the binding between the asset and the data,we can also do so by creatingan empty blueprint asset and use it as a central container to store metadata.</p><p>The limitation however is that all the values are string type.</p><h3 id="how-to-read-metadata"><a class="markdownIt-Anchor" href="#how-to-read-metadata"></a> How to Read Metadata</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> unreal</span><br><span class="line"></span><br><span class="line">u_asset_path = <span class="string">r&#x27;/Game/LevelPrototyping/Meshes/SM_ChamferCube.SM_ChamferCube&#x27;</span></span><br><span class="line">asset = unreal.EditorAssetLibrary.find_asset_data(u_asset_path).get_asset()</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span> = unreal.EditorAssetLibrary.get_metadata_tag_values(asset)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">map</span>)</span><br><span class="line"><span class="comment"># &#123;&quot;version&quot;: &quot;4&quot;&#125;</span></span><br><span class="line"></span><br><span class="line">value = unreal.EditorAssetLibrary.get_metadata_tag(asset, <span class="string">&quot;version&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(value)</span><br><span class="line"><span class="comment"># 4</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/vJ4P1H2.png" alt="show metadata" /></p><h3 id="how-to-write-metadata"><a class="markdownIt-Anchor" href="#how-to-write-metadata"></a> How to Write Metadata</h3><p>We can also easily set and remove the metadata tag and values like so.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">unreal.EditorAssetLibrary.set_metadata_tag(asset, <span class="string">&quot;version&quot;</span>, <span class="string">&quot;4&quot;</span>)</span><br><span class="line">unreal.EditorAssetLibrary.save_asset(u_asset_path)</span><br><span class="line"></span><br><span class="line">unreal.EditorAssetLibrary.remove_metadata_tag(asset, <span class="string">&quot;version&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="blueprint-variable"><a class="markdownIt-Anchor" href="#blueprint-variable"></a> Blueprint Variable</h2><p>And lastly, I want to introduce the approach I ended up with:map variable in a custom blueprint asset.</p><p>We first create a Blueprint asset using the basic Object class, and then add ourcustom ‘Version’ variable as a string: integer mapthis is basically equivalent to:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;Version&quot;</span>: &#123;<span class="built_in">str</span>: <span class="built_in">int</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/zYKf2l8.png" alt="variable-1" /></p><p><img src="https://i.imgur.com/645AMpd.png" alt="variable-2" /></p><p>Through scripting, we first need to get the default class object of the blueprint,which can be achieved like so:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> unreal</span><br><span class="line"></span><br><span class="line">u_bp_path = <span class="string">r&#x27;/asset_path&#x27;</span></span><br><span class="line">u_bp = unreal.EditorAssetLibrary.find_asset_data(u_bp_path).get_asset()</span><br><span class="line"></span><br><span class="line"><span class="comment"># generated class</span></span><br><span class="line">u_bp_generated = unreal.load_object(<span class="literal">None</span>, u_bp.generated_class().get_path_name())</span><br><span class="line"></span><br><span class="line"><span class="comment"># dco</span></span><br><span class="line">u_bp_dco = unreal.get_default_object(u_bp_generated)</span><br></pre></td></tr></table></figure><p>The advantage here lies in having a single blueprint asset capable of storingnumerous variables, each natively typed to Unreal.Nevertheless, I haven’t yet attempted to create variables solely through code.</p><h3 id="how-to-read-blueprint-variable"><a class="markdownIt-Anchor" href="#how-to-read-blueprint-variable"></a> How to Read Blueprint Variable</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_version</span>(<span class="params">dco, name</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        version = dco.get_editor_property(<span class="string">&#x27;version&#x27;</span>)[name]</span><br><span class="line">    <span class="keyword">except</span> KeyError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;no &#123;&#125; key&#x27;</span>.<span class="built_in">format</span>(name))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> version</span><br></pre></td></tr></table></figure><h3 id="how-to-write-blueprint-variable"><a class="markdownIt-Anchor" href="#how-to-write-blueprint-variable"></a> How to Write Blueprint Variable</h3><p>Note that we use the <code>get_editor_property()</code> to set the metadata</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">set_version</span>(<span class="params">dco, name, version</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        u_bp_dco.get_editor_property(<span class="string">&#x27;version&#x27;</span>)[name] = version</span><br><span class="line">    <span class="keyword">except</span> TypeError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;TypeError: &#123;&#125; of &#123;&#125; incorrect, &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">type</span>(version), version, e))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line">    unreal.EditorAssetLibrary.save_asset(bp_path)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><h3 id="example"><a class="markdownIt-Anchor" href="#example"></a> Example</h3><p>Since, this approach is the one I have experimented the furthest along,here’s an example on how I access it in another Blueprint:</p><p><img src="https://i.imgur.com/8FhwmLA.png" alt="bp" /></p><p>Another way is to use ‘Get Class Default Object’ and ‘Cast To BP Test Metadata’ whichreturn ‘As BP Test Metadata’ and can then access the “Version” variable.</p><h2 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h2><p><a href="https://forums.unrealengine.com/t/how-to-store-text-data-with-python/688813">Unreal Forum - How to store text data with Python?</a></p><p><a href="https://forums.unrealengine.com/t/reimport-datatable-csv-with-python/567768">Unreal Forum - Reimport DataTable(csv) with python</a></p><p><a href="https://forums.unrealengine.com/t/reading-a-datatables-values-with-python/232300">Unreal Forum - Reading a DataTable’s Values with Python</a></p>]]></content>
    
    
    <summary type="html">Explore the seamless integration of metadata in Unreal Engine, and learn how to access and utilize native metadata within Blueprint-driven workflows. Unleash the full potential of Unreal Engine with this in-depth guide.</summary>
    
    
    
    <category term="unreal" scheme="https://www.xingyulei.com/categories/unreal/"/>
    
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
    <category term="python" scheme="https://www.xingyulei.com/tags/python/"/>
    
    <category term="blueprint" scheme="https://www.xingyulei.com/tags/blueprint/"/>
    
  </entry>
  
  <entry>
    <title>Customize Windows 10/11 Right-click Context Menu</title>
    <link href="https://www.xingyulei.com/post/py-win-contextmenu/"/>
    <id>https://www.xingyulei.com/post/py-win-contextmenu/</id>
    <published>2023-08-28T16:00:00.000Z</published>
    <updated>2023-11-19T00:15:22.388Z</updated>
    
    <content type="html"><![CDATA[<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>It’s been a while, today we have a pretty awesome content to explorethat is how we can create the right-click context menu in Windows.</p><p>I found that there’s not a lot of comprehensive and up-to-date tutorial onthis subject for tech artists, but this would be a really powerful tool tospeed up any types of workflow that involves going into Windows Explorer.(for example, right-click on a file and have a shortcut to get its perforce depot info)</p><p>And the best thing is: it’s super easy to follow, certainly much easier than learning how to create a context menu in Qt.</p><p><img src="https://i.imgur.com/YGnh1VC.gif" alt="result" /></p><h2 id="registry-setup"><a class="markdownIt-Anchor" href="#registry-setup"></a> Registry Setup</h2><p>Everything regards to the Windows context menu setup is donewithin the Windows Registry Editor.</p><h3 id="hierarchy"><a class="markdownIt-Anchor" href="#hierarchy"></a> Hierarchy</h3><p>First I’m gonna do an example of manual implementation.</p><ol><li><p>we’ll want to navigate to this path for now: <code>HKEY_CURRENT_USER\Software\Classes\directory\Background\shell</code> (we’ll explain this later <a href="#target-type">here</a>)</p><ul><li>right-click on the ‘Background’ key/folder and create a new ‘key’ named ‘shell’ if there isn’t one already</li></ul></li><li><p>create a key under ‘shell’ (I named mine ‘test_menu’) and then create a key under it called ‘command’</p></li></ol><p><img src="https://i.imgur.com/ENk9JDP.png" alt="test menu" /></p><h3 id="field"><a class="markdownIt-Anchor" href="#field"></a> Field</h3><p>Next we’ll want to modify the field of those keys, in the menu item key(in my case the ‘test_menu’) there are some optional fields we can add customizethe appearance of our menu item.</p><p>The following are some optional String Field:</p><p>(To add field, right-click on the right panel, ‘New’ - ‘String Value’)</p><ul><li>MUIVerb: The display name of the menu item, if this is not set, the name will defaultto the key name (i.e. “test_menu” in our case)</li><li>Icon: For displaying icon, the data should be set as the icon path, common format for the iconsare .ico and .dll</li><li>Position: changes the location of the menu item, e.g. “Top”, “Bottom”</li></ul><p><img src="https://i.imgur.com/wJxCBvL.png" alt="test menu field" /></p><p><img src="https://i.imgur.com/0AxLphb.png" alt="result" /></p><h2 id="setting-up-command"><a class="markdownIt-Anchor" href="#setting-up-command"></a> Setting up Command</h2><p>Finally, we’ll want to modify the command key’s field, so it can actually performcustom operations.</p><p>Go to the {Default} and edit the Data to whatever operation we would like to performwhen clicking this menu item. The syntax would be an execution command similarto ones we would put in command prompt or a .bat file.</p><h3 id="running-python-script"><a class="markdownIt-Anchor" href="#running-python-script"></a> Running Python Script</h3><p>Here’s an example to run python script:</p><p>In the Data section we would put: <code>&quot;path to python.exe&quot; &quot;path to python script.py&quot;</code></p><h3 id="passing-argument"><a class="markdownIt-Anchor" href="#passing-argument"></a> Passing Argument</h3><p>In order to pass in arguments, such as<br />the directory or the file where the menu was initiated.</p><p>We add <code>%v</code> for directory and <code>%1</code> for file path at the end of the command Data:</p><ul><li>e.g. <code>&quot;D:/python39/python.exe&quot; &quot;D:/p4clipboard.py&quot; &quot;%1&quot;</code></li><li>be aware of the slashes</li><li>if you would like to debug your python script and not make it close immediately after execution simplyadd <code>-i</code> flag after the <code>&quot;python.exe&quot;</code></li></ul><p>And within the <code>p4clipboard.py</code> file, we can parse the argument passed in as such:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># converts the selected file to its perforce depot path and add to clipboard</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> p4Util  <span class="comment"># this is a mock p4 module</span></span><br><span class="line"><span class="keyword">import</span> winUtil  <span class="comment"># also a mock module</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   selected_file = sys.argv[<span class="number">1</span>]</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">with</span> p4Util.connect():</span><br><span class="line">       p4_path = p4Util.get_depot_path(selected_file)</span><br><span class="line">       winUtil.copy_to_clip(p4_path)</span><br></pre></td></tr></table></figure><h2 id="python-registry-automation"><a class="markdownIt-Anchor" href="#python-registry-automation"></a> Python Registry Automation</h2><p>The above examples are very cool, but requires a lot of manual set up, we canleverage Python to set up the registry entries for us.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># example from: https://github.com/seddie95/folder_organizer/blob/master/make_key.py</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> winreg <span class="keyword">as</span> reg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">python_exe = sys.executable</span><br><span class="line">script_path = <span class="string">r&quot;D:\test.py&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">reg_root_path = <span class="string">r&#x27;Directory\\Background\\shell&#x27;</span></span><br><span class="line"></span><br><span class="line">reg_root = reg.OpenKey(reg.HKEY_CLASSES_ROOT, reg_root_path, <span class="number">0</span>, reg.KEY_ALL_ACCESS)</span><br><span class="line">reg_menu = reg.CreateKey(reg_root, <span class="string">r&quot;test_menu\\&quot;</span>)</span><br><span class="line">reg.SetValue(reg_menu, <span class="string">&#x27;MUIVerb&#x27;</span>, reg.REG_SZ, <span class="string">&#x27;this is my test menu&#x27;</span>)</span><br><span class="line">reg.CloseKey(reg_menu)</span><br><span class="line"></span><br><span class="line">reg_root = reg.OpenKey(reg.HKEY_CLASSES_ROOT, reg_root_path, <span class="number">0</span>, reg.KEY_ALL_ACCESS)</span><br><span class="line">reg_menu_command = reg.CreateKey(reg_root, <span class="string">r&quot;test_menu\\command&quot;</span>)</span><br><span class="line">reg.SetValue(reg_menu_command, <span class="string">&#x27;&#x27;</span>, reg.REG_SZ, <span class="string">&quot;&#123;&#125; &#123;&#125; %v&quot;</span>.<span class="built_in">format</span>(python_exe, script_path))</span><br><span class="line">reg.CloseKey(reg_menu_command)</span><br></pre></td></tr></table></figure><h2 id="reg-file"><a class="markdownIt-Anchor" href="#reg-file"></a> Reg File</h2><p>Another way to transfer out the registry setup is by exportingout from registry editor directly to a <code>.reg</code> file.</p><p>This can be done by simply selecting the top key and right-clickand select ‘Export’; the <code>.reg</code> file is a text based file.</p><h3 id="cascade-menu"><a class="markdownIt-Anchor" href="#cascade-menu"></a> Cascade Menu</h3><p><img src="https://i.imgur.com/7f8imK0.png" alt="cascade result" /></p><p>How should we go about implementing a multi-layered menu?I found a lot of examples online that are either complicated/messyor not working at all.</p><p>Eventually I’ve come across this blog explaining what I thinkis the ideal way to implement Cascading menu. It keeps everythingin one place, has this clean and easy to understand hierarchy, andvery easy.</p><p>Essentially, we only need to add one additional field on thetop level menu item called: <code>subcommands</code>, and we then keepall the children menu item nested within it like what we have previously done.</p><p><img src="https://i.imgur.com/ZmeMdAI.png" alt="cascade menu field" />(An example of the full hierarchy breakdown)</p><h2 id="target-type"><a class="markdownIt-Anchor" href="#target-type"></a> Target Type</h2><p>Different context menu triggering condition requires editing different registry keys,This goes the same for different user group (registration visible to the current user vs. affecting globally to the machine).</p><p><strong>Background:</strong> when right-click on the backdrop of the explorer or desktop</p><p>if you are administrator</p><ul><li><code>HKEY_CLASSES_ROOT\Directory\Background\shell</code></li></ul><p>if you are a normal user</p><ul><li><code>HKEY_CURRENT_USER\Software\Classes\directory\Background\shell</code></li></ul><p><strong>Folder</strong>: when right-click on a folder in the explorer or desktop</p><p>if you are administrator</p><ul><li><code>HKEY_CLASSES_ROOT\Directory\shell</code></li></ul><p>if you are a normal user</p><ul><li><code>HKEY_CURRENT_USER\Software\Classes\directory\shell</code></li></ul><p><strong>File</strong>: when right-click on a file in the explorer or desktop</p><p>if you are administrator</p><ul><li><code>HKEY_CLASSES_ROOT\*\shell</code></li></ul><p>if you are a normal user</p><ul><li><code>HKEY_CURRENT_USER\Software\Classes\*\shell</code></li></ul><p><strong>File Type Association</strong>: when right-click on a specific file type:</p><p>if you are administrator:</p><ul><li><code>HKEY_LOCAL_MACHINE\Software\Classes\SystemFileAssociations\&#123;.format&#125;\shell</code></li></ul><p>if you are a normal user:</p><ul><li><code>HKEY_CURRENT_USER\Software\Classes\SystemFileAssociations\&#123;.format&#125;\shell</code></li></ul><h2 id="noteworthy-mentions"><a class="markdownIt-Anchor" href="#noteworthy-mentions"></a> Noteworthy Mentions</h2><p>To further customize the context menu, we might be interestedwith adding separators between menu items, also having specific order ormenu items. These can all be achieved quite easily described in Sverrir’s Blog whichI’ve linked below.</p><p>Furthermore, there are also menu item with toggle box or check box; these arenot explored as of now.</p><h2 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h2><p><a href="https://stackoverflow.com/questions/20449316/how-add-context-menu-item-to-windows-explorer-for-folders">Stack Overflow - How add context menu item to Windows Explorer for folders</a></p><p><a href="https://www.notion.so/Creating-a-context-menu-with-sub-menu-for-Windows-for-a-specific-file-extension-61d5a0d696ed4b1db52f043656f936d6">Notion - Creating a context menu with sub-menu for Windows for a specific file extension</a></p><p><a href="https://stackoverflow.com/questions/2123762/add-menu-item-to-windows-context-menu-only-for-specific-filetype/47745854#47745854">Stack Overflow - Add menu item to Windows context menu only for specific filetype</a></p><p><a href="https://blog.sverrirs.com/2014/05/creating-cascading-menu-items-in.html">Sverrir’s Blog - Creating Cascading Menu Items in Windows Explorer 7, 8, 8.1 &amp; 10</a></p><p><a href="https://learn.microsoft.com/en-us/archive/blogs/andrew_richards/enhancing-the-open-command-prompt-here-shift-right-click-context-menu-experience">Microsoft - Enhancing the “Open Command Prompt here” Context Menu experience</a></p>]]></content>
    
    
    <summary type="html">Discover how to personalize the Windows right-click context menu using registry tweaks and automation techniques. Elevate your Windows journey with expert insights and step-by-step guides.</summary>
    
    
    
    <category term="windows" scheme="https://www.xingyulei.com/categories/windows/"/>
    
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
    <category term="python" scheme="https://www.xingyulei.com/tags/python/"/>
    
    <category term="template" scheme="https://www.xingyulei.com/tags/template/"/>
    
  </entry>
  
  <entry>
    <title>Run Maya Batch Mode in 2023!</title>
    <link href="https://www.xingyulei.com/post/maya-batch-mode-2/"/>
    <id>https://www.xingyulei.com/post/maya-batch-mode-2/</id>
    <published>2023-05-05T16:00:00.000Z</published>
    <updated>2023-11-17T19:13:36.931Z</updated>
    
    <content type="html"><![CDATA[<p>I’m reviving a post from exactly 4 years ago ⌛️. It was severely flawed since it wasone of my earliest post while I’m still learning my ways around Maya.</p><h2 id="standalone-module"><a class="markdownIt-Anchor" href="#standalone-module"></a> Standalone Module</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> maya.standalone</span><br><span class="line">maya.standalone.initialize(name=<span class="string">&#x27;python&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="using-mayapy-interpreter"><a class="markdownIt-Anchor" href="#using-mayapy-interpreter"></a> Using <code>mayapy</code> Interpreter</h3><blockquote><p>I strongly recommend using <code>mayapy</code> in order to stay consistent with the behaviourof GUI maya.</p></blockquote><p>Prefer using <code>mayapy</code>: Maya’s own python interpreter, this ensuresall the libraries and plugins are compatible, it also saves some trouble configuringenvironments.</p><h3 id="using-external-python-interpreter"><a class="markdownIt-Anchor" href="#using-external-python-interpreter"></a> Using External Python Interpreter</h3><p>When using external interpreter for whatever reason, we’ll need to check:</p><ul><li><p>The python interpreter should match the maya python version</p><ul><li>e.g. (<em>python27</em> for Maya 2018)</li></ul></li><li><p>System environment variable will need to set up in order to find maya modules</p><ul><li>Otherwise, we may encounter the following:</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ImportError: No module named maya.standalone</span><br></pre></td></tr></table></figure></li></ul><p>To configure the environment for our external interpreter:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MAYA_LOCATION = <span class="string">&quot;C:/Program Files/Autodesk/Maya2018&quot;</span></span><br><span class="line">PYTHON_LOCATION = MAYA_LOCATION + <span class="string">&quot;/Python/Lib/site-packages&quot;</span></span><br><span class="line"></span><br><span class="line">os.environ[<span class="string">&quot;MAYA_LOCATION&quot;</span>] = MAYA_LOCATION</span><br><span class="line">os.environ[<span class="string">&quot;PYTHONPATH&quot;</span>] = PYTHON_LOCATION</span><br><span class="line"></span><br><span class="line">sys.path.append(MAYA_LOCATION)</span><br><span class="line">sys.path.append(PYTHON_LOCATION)</span><br><span class="line">sys.path.append(MAYA_LOCATION+<span class="string">&quot;/bin&quot;</span>)</span><br><span class="line">sys.path.append(MAYA_LOCATION+<span class="string">&quot;/lib&quot;</span>)</span><br><span class="line">sys.path.append(MAYA_LOCATION+<span class="string">&quot;/Python&quot;</span>)</span><br><span class="line">sys.path.append(MAYA_LOCATION+<span class="string">&quot;/Python/DLLs&quot;</span>)</span><br><span class="line">sys.path.append(MAYA_LOCATION+<span class="string">&quot;/Python/Lib&quot;</span>)</span><br><span class="line">sys.path.append(MAYA_LOCATION+<span class="string">&quot;/Python/Lib/plat-win&quot;</span>)</span><br><span class="line">sys.path.append(MAYA_LOCATION+<span class="string">&quot;/Python/Lib/lib-tk&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>.join(sys.path))</span><br></pre></td></tr></table></figure><h2 id="making-our-first-standalone-script"><a class="markdownIt-Anchor" href="#making-our-first-standalone-script"></a> Making Our First Standalone Script</h2><p>After <code>maya.standalone</code> has initialized, we can import <code>maya.cmds</code> as usual.</p><p>Let’s add a test function to our standalone script.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> maya.cmds <span class="keyword">as</span> cmds</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>():</span><br><span class="line">    maya_file_to_open = <span class="string">r&quot;C:\Users\Lei\Desktop\test.ma&quot;</span></span><br><span class="line">    cmds.file(maya_file_to_open, o=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># import a file and rename</span></span><br><span class="line">    maya_file_to_import = <span class="string">r&quot;C:\Users\Lei\Desktop\import.ma&quot;</span></span><br><span class="line">    cmds.file(maya_file_to_import, i=<span class="literal">True</span>, <span class="built_in">type</span>=<span class="string">&quot;mayaAscii&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    temp_name = <span class="string">r&quot;C:\Users\Lei\Desktop\temp.ma&quot;</span></span><br><span class="line">    cmds.file(rename=temp_name)</span><br><span class="line">    cmds.file(force=<span class="literal">True</span>, save=<span class="literal">True</span>, options=<span class="string">&#x27;v=1;p=17&#x27;</span>, <span class="built_in">type</span>=<span class="string">&#x27;mayaBinary&#x27;</span>)</span><br></pre></td></tr></table></figure><p>This test function opens a maya file on my desktop and import a maya fileand save out as another file.</p><h2 id="execution"><a class="markdownIt-Anchor" href="#execution"></a> Execution</h2><p>Here I’m using <code>mayapy</code> as example, we can of course using the external pythoninterpreter, but again, it takes extra steps.</p><p><strong>Execute from Command Line</strong></p><ul><li><p>make sure to add <code>mayapy</code> to our system environment variable.</p><ul><li>in system variable: add <code>C:\Program Files\Autodesk\Maya2018\bin</code> to <code>Path</code></li></ul></li><li><p>open command prompt, and enter <code>mayapy [directoryTo/firstStandalone.py]</code></p></li></ul><p><strong>Execute using <code>subprocess</code></strong></p><p>We can do it without going to command line, but by executing another <code>.py</code> using subprocess</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">mayapy = <span class="string">r&#x27;C:\Program Files\Autodesk\Maya2018\bin\mayapy.exe&#x27;</span></span><br><span class="line">script = <span class="string">r&#x27;[directory/firstStandalone.py]&#x27;</span></span><br><span class="line"></span><br><span class="line">process = subprocess.Popen(</span><br><span class="line">    [mayapy, script],</span><br><span class="line">    stdout=subprocess.PIPE,</span><br><span class="line">    stderr=subprocess.STDOUT,</span><br><span class="line">    env=env</span><br><span class="line">)</span><br><span class="line">out, error = process.communicate()</span><br></pre></td></tr></table></figure><p>Here I’m removing the environment setup in <code>firstStandlone.py</code>, and add a wrapper:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> maya.standalone</span><br><span class="line">maya.standalone.initialize(name=<span class="string">&#x27;python&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> maya.cmds <span class="keyword">as</span> cmds</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>():</span><br><span class="line">    maya_file_to_open = <span class="string">r&quot;C:\Users\Lei\Desktop\test.ma&quot;</span></span><br><span class="line">    cmds.file(maya_file_to_open, o=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># import a file and rename</span></span><br><span class="line">    maya_file_to_import = <span class="string">r&quot;C:\Users\Lei\Desktop\import.ma&quot;</span></span><br><span class="line">    cmds.file(maya_file_to_import, i=<span class="literal">True</span>, <span class="built_in">type</span>=<span class="string">&quot;mayaAscii&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    temp_name = <span class="string">r&quot;C:\Users\Lei\Desktop\temp.ma&quot;</span></span><br><span class="line">    cmds.file(rename=temp_name)</span><br><span class="line">    cmds.file(force=<span class="literal">True</span>, save=<span class="literal">True</span>, options=<span class="string">&#x27;v=1;p=17&#x27;</span>, <span class="built_in">type</span>=<span class="string">&#x27;mayaBinary&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cmds.evalDeferred(runMode)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        logging.error(traceback.print_exc())</span><br></pre></td></tr></table></figure><h2 id="standalone-script-with-arguments"><a class="markdownIt-Anchor" href="#standalone-script-with-arguments"></a> Standalone Script with Arguments</h2><p>Sometimes, we would want to pass arguments to our standalone script</p><h3 id="using-sysargv"><a class="markdownIt-Anchor" href="#using-sysargv"></a> Using <code>sys.argv</code></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">file_path = sys.argv[<span class="number">1</span>]</span><br><span class="line">file_name = sys.argv[<span class="number">2</span>]</span><br></pre></td></tr></table></figure><p>Example from Toadstorm Nerdblog:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">maya_path = <span class="string">&#x27;directory/mayapy.exe&#x27;</span>  <span class="comment"># mayapy or full path to mayapy.exe</span></span><br><span class="line">script_path = <span class="string">&#x27;directory/firstStandalone.py&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_layer</span>(<span class="params">file_names,layer_name</span>):</span><br><span class="line">    <span class="keyword">for</span> file_name <span class="keyword">in</span> file_names:</span><br><span class="line">        command = <span class="string">r&#x27;mayapy &#123;&#125; &#123;&#125; &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">            script_path, file_name, layer_name</span><br><span class="line">        )</span><br><span class="line">        </span><br><span class="line">        process = subprocess.Popen(</span><br><span class="line">            command,</span><br><span class="line">            stdout=subprocess.PIPE,</span><br><span class="line">            stderr=subprocess.PIPE</span><br><span class="line">        )</span><br><span class="line">        process.wait()</span><br><span class="line">        <span class="built_in">print</span>(process.returncode)  <span class="comment"># this return the message from cmd</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># define a list of filenames to iterate through</span></span><br><span class="line">    files = [<span class="string">&#x27;file1&#x27;</span>, <span class="string">&#x27;file2&#x27;</span>, <span class="string">&#x27;file3&#x27;</span>]</span><br><span class="line">    render_layer = <span class="string">&#x27;a new render layer&#x27;</span></span><br><span class="line">     </span><br><span class="line">    <span class="comment"># run procedure, assuming you&#x27;ve already defined it</span></span><br><span class="line">    add_layer(files, render_layer)</span><br></pre></td></tr></table></figure><h3 id="using-argparser"><a class="markdownIt-Anchor" href="#using-argparser"></a> Using <code>argparser</code></h3><p>In the commandline launch script, add argment:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">scene = <span class="string">r&quot;C:\Users\Lei\Desktop\test.ma&quot;</span></span><br><span class="line"></span><br><span class="line">process = subprocess.Popen(</span><br><span class="line">    [mayapy, script, <span class="string">&#x27;scene=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(scene)],</span><br><span class="line">    stdout=subprocess.PIPE,</span><br><span class="line">    stderr=subprocess.STDOUT,</span><br><span class="line">    env=env</span><br><span class="line">)</span><br><span class="line">out, error = process.communicate()</span><br></pre></td></tr></table></figure><p>And then in the wrapper, use the <code>ArgumentParser()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.add_argument(<span class="string">&#x27;scene&#x27;</span>)</span><br><span class="line"></span><br><span class="line">command_line_args = parser.parse_args()</span><br><span class="line">SCENE = command_line_args.scene</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">example</span>():</span><br><span class="line">    cmds.file(SCENE, <span class="built_in">open</span>=<span class="literal">True</span>, force=<span class="literal">True</span>)</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><h2 id="bonus-integrate-ui-elements-from-qt"><a class="markdownIt-Anchor" href="#bonus-integrate-ui-elements-from-qt"></a> Bonus: Integrate UI Elements from Qt</h2><p>It is easy to integrate UI in a standalone tool by creating a <code>QApplication</code> instance,and for Maya GUI, Maya has <code>QApplication</code> instance already created.</p><p>but for maya standalone script, we need to make sure to create a <code>QApplication</code> instancebefore the standalone initialization:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Qt <span class="keyword">import</span> QtWidgets</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = QtWidgets.QApplication(sys.argv)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> maya.standalone</span><br><span class="line">maya.standalone.initialize()</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Depending on our tool need, usually standalone script wouldn’t block themain event loop, so we just exit when finished, therefore, no need to add <code>sys.exit(app.exec_())</code></p><h2 id="bonus-copying-gui-maya-environment"><a class="markdownIt-Anchor" href="#bonus-copying-gui-maya-environment"></a> Bonus: Copying GUI Maya Environment</h2><p>To get the exact environment as the GUI Maya version (this could be useful if there’s anystartup scripts that modifies the environment)</p><p>In the maya session, parse out the environment and save it as a dictionary:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">env_dict = <span class="built_in">dict</span>(os.environ)</span><br></pre></td></tr></table></figure><p>And in the commandline setup .py, apply the environment from the dictionary:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">env_dict_copy_from_maya = &#123;<span class="string">&#x27;TEST&#x27;</span>: <span class="string">&#x27;THIS IS A TEST&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">current_env = os.environ.copy()</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> env_dict_copy_from_maya.items():</span><br><span class="line">    current_env[key] = value</span><br><span class="line"></span><br><span class="line">process = subprocess.Popen(</span><br><span class="line">    ...,</span><br><span class="line">    env=current_env</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2><p><a href="https://www.xingyulei.com/post/maya-batch-mode/">Xingyu Lei - Save Time and Boost Efficiency: Learn to Run Maya in Batch Mode</a></p><p><a href="https://stackoverflow.com/questions/68062715/maya-standalone-with-pyside2">Stack Overflow - maya standalone with pyside2</a></p><p><a href="http://discourse.techart.online/t/import-maya-standalone-problem/1437">Tech-Artist Org - Import maya.standalone problem</a></p><p><a href="https://stackoverflow.com/questions/27437733">Stack Overflow - use external python script to open maya and run another script inside maya</a></p><p><a href="https://stackoverflow.com/questions/17500157">Stack Overflow - How to use an external interpreter for Maya?</a></p><p><a href="https://www.toadstorm.com/blog/?p=136">Toadstorm Nerdblog - Python in Maya Standalone</a></p>]]></content>
    
    
    <summary type="html">Learn how to run Maya in batch mode for animation and game development with our step-by-step tutorial. Streamline your workflow and save time with this efficient method for rendering large scenes and complex animations. Join our community of artists and game developers today and take your projects to the next level with Maya!</summary>
    
    
    
    <category term="maya" scheme="https://www.xingyulei.com/categories/maya/"/>
    
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
    <category term="python" scheme="https://www.xingyulei.com/tags/python/"/>
    
    <category term="batch" scheme="https://www.xingyulei.com/tags/batch/"/>
    
  </entry>
  
  <entry>
    <title>Beginner&#39;s Guide to Object-Oriented Design for Scalable Application</title>
    <link href="https://www.xingyulei.com/post/general-oo-design/"/>
    <id>https://www.xingyulei.com/post/general-oo-design/</id>
    <published>2023-04-01T16:00:00.000Z</published>
    <updated>2023-11-17T19:17:43.572Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>This blog is a second processed product/summary of the tutorial series:<a href="https://www.linkedin.com/learning/topics/object-oriented-programming">Linkedin Learning: Object-Oriented Programming</a>.Bullet points extracted by me and reformatted with help from ChatGPT.</p></blockquote><p>Object-oriented design is a fundamental concept in software development thatfocuses on modeling the behavior and characteristics of real-world objects in a program.By understanding the basics of object identity, properties and attributes, behavior, and class, developers can create well-designed, efficient, and maintainable software.</p><h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p><strong>Object Identity:</strong>Objects are unique entities within a program that are separate and distinguishable from one another, even if they belong to the same class or type. Each object has a unique identifier that differentiates it from other objects, and this identity is essential for managing and manipulating objects within a program.</p><p><strong>Properties and Attributes:</strong>Objects have properties or attributes that define their characteristics, such as size, weight, color, and shape. These attributes are essential for representing real-world objects in a program and can be used to distinguish between different objects of the same type.</p><p><strong>Behavior:</strong>Objects have behavior or actions that they can perform, such as filling, swimming, or ringing. Behavior is typically defined as methods or functions that manipulate an object’s attributes or interact with other objects in the program.</p><p>One of the challenges of object-oriented design is <strong>identifying what can be an objectin a program</strong>. In general, objects should be represented by nouns and not verbs,and they should have a unique identity, attributes, and behavior. The focus should be on identifying the main objects in the program and their interactions with one another.</p><p>A class is a template for creating objects in a program. It defines the name, type, attributes, and behavior of objects that belong to that class. A class can be used to create multiple objects of the same type and is an essential component of object-oriented design.</p><h3 id="steps-for-object-oriented-design"><a class="markdownIt-Anchor" href="#steps-for-object-oriented-design"></a> Steps for Object-Oriented Design</h3><p>The process of object-oriented design involves analyzing and designing the program before writing the code.This includes gathering requirements, describing the application, identifying the main objects, describing the interactions between objects, and creating a class diagram using Unified Modeling Language (UML).</p><h2 id="softwaresystem-requirements"><a class="markdownIt-Anchor" href="#softwaresystem-requirements"></a> Software/System Requirements</h2><p>In object-oriented design, understanding the software/system requirements is essential for creating awell-designed, efficient, and maintainable program.</p><h3 id="sets-of-requirements"><a class="markdownIt-Anchor" href="#sets-of-requirements"></a> Sets of Requirements</h3><p>Software/system requirements can be divided into two sets of questions:</p><ul><li>what does it need to do?</li><li>how should it do it?</li></ul><p>The first set of questions refers to the functionality of the program, while the second set refers to performance, legal, support, and security requirements.</p><ul><li><p><strong>Function Requirements:</strong>refer to what the system/application must do. These requirements capture the bare necessities of the program and define the core functionality that the program needs to provide.</p></li><li><p><strong>Non-Functional Requirements:</strong>define how the system/application should do something. These requirements are concerned with aspects such as usability, reliability, performance, supportability, design, implementation, interface, and physical constraints.</p></li></ul><h3 id="furps-requirement-model"><a class="markdownIt-Anchor" href="#furps-requirement-model"></a> FURPS Requirement Model</h3><p>The FURPS requirement model is a framework for thinking about software/system requirements.FURPS stands for functionality, usability, reliability, performance, and supportability.</p><ul><li><p><strong>Functionality</strong>refers to the capabilities of the system, while the other four elements are non-functional requirements.</p></li><li><p><strong>Usability</strong>focuses on the user and include factors such as human factors UI and documentation.The usability of the program is essential for ensuring that users can efficiently and effectively use the system.</p></li><li><p><strong>Reliability</strong>is concerned with predictability, availability, and failure rate.These requirements ensure that the program operates consistently and reliably.</p></li><li><p><strong>Performance</strong>relates to speed, efficiency, and limitations. These requirements ensure that the program operates efficiently and effectively, even when processing large amounts of data.</p></li><li><p><strong>Supportability</strong>is concerned with extensibility, configurability, and testability. These requirements ensure that the program can be maintained and updated over time.</p></li></ul><p>Design, Implementation, Interface, and Physical ConstraintsIn addition to the FURPS requirements, other non-functional requirements include design (how the program is built), implementation (the programming language used and standards to follow), interface (the ability of the program to interface with other systems), and physical constraints (the hardware limitations of the system).</p><h2 id="use-case"><a class="markdownIt-Anchor" href="#use-case"></a> Use Case</h2><p>The use case is a scenario that outlines a particular goal of an actor (user) with the system. It consists of the following elements:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Title] </span><br><span class="line">    Short and simple goal</span><br><span class="line">[Primary Actor] </span><br><span class="line">    The user who desires to achieve the goal</span><br><span class="line">[Success Scenario] </span><br><span class="line">    Steps or paragraphs describing how to achieve the goal</span><br></pre></td></tr></table></figure><p>To create a use case,identify the actors who interact with the system and separate them by their roles in the use case, not job titles.Focus on the intent of the goal and not go into too specific steps or too broad a goal.The scenario should be concise and avoid detailed technical implementation or UI elements.Focus on the “sunny-day” scenario and avoid including rarely encountered scenarios.Avoid needless words and keep the scenario short and concise.</p><h2 id="conceptual-model"><a class="markdownIt-Anchor" href="#conceptual-model"></a> Conceptual Model</h2><p>In object-oriented design, creating a conceptual model is acrucial step in developing a software or system.A conceptual model helps to identify the objects and their relationships that will form the backbone of the software.Here are the steps involved in creating a conceptual model.</p><ul><li><p><strong>Identify Objects:</strong>The first step is to identify the objects that will be used as class objects in the system.This can be done by looking at the user story or use case and picking out the relevant <strong>nouns.</strong></p><ul><li>For example, in a user story about ordering a meal, the relevant objects might include “customer,” “menu,” and “order.”</li></ul></li><li><p><strong>Identify Class Relationships:</strong>Once the objects have been identified, the next step is to connect them with lines to show their relationships.It is important to write down the <strong>verbs</strong> on each line to avoid using generic words like “use.”Instead, use verbs that describe the relationship between the objects.</p><ul><li>For example, in the meal ordering system, the “customer” might “place” an “order” from the “menu.”</li></ul></li><li><p><strong>Figure Out Class Responsibilities:</strong>The final step is to figure out the responsibilities of each class.This involves identifying the behaviors or actions that each class will perform.This can be done by looking at the user story or use case and picking out the relevant verbs.</p><ul><li>For example, in the meal ordering system, the “menu” class might have the responsibility of “displaying” the available items while the “order” class might have the responsibility of “calculating” the total cost of the meal.</li></ul></li></ul><p>It is important to note that each behavior should belong to the class that is most responsible for it.A behavior usually involves multiple objects, but each object should be responsible for itself.Avoid putting too much responsibility on a single object, which can lead to a “god object” that controls everything in the system.</p><p>In addition to these steps, another useful tool for creating a conceptual model is CRC (Class Responsibility Collaboration) cards.These cards can be used to organize the classes and their responsibilities, making it easier to visualize the system and identify any potential issues.</p><h2 id="class-diagram-and-class-relationship"><a class="markdownIt-Anchor" href="#class-diagram-and-class-relationship"></a> Class Diagram and Class Relationship</h2><p>In object-oriented design, UML class diagrams are used to represent the structure of a system’s classes and the relationships between them.Here are some important considerations when creating UML class diagrams.</p><p>Each class in a UML class diagram should have a name, attributes, and behaviors.When creating classes, it’s important to focus on the behaviors of the objects,rather than just their attributes. This is because objects are meant to do things,not just hold data.In general, it’s recommended to keep as many class attributes and methods as private as possible,only making them public if we are certain that other objects will need to use them.</p><p><strong>Constructor:</strong></p><p>Constructors are considered as behavior and should be treated as such when creating UML class diagrams.In UML, a constructor is represented as a method with the same name as the class.</p><p><strong>Interface:</strong></p><p>In UML, abstract classes and interfaces are represented as types.Abstract classes are used to represent a general category of objects,while interfaces are used to represent shared capabilities or behaviors.For example, a draw() interface can be shared between different types of objects that can be drawn on a screen.While objects of different types cannot be categorized under the same abstract class,they can all share the draw() interface to be able to draw on the screen.A system can iterate through all objects and call the draw() interface to update the screen.</p><h2 id="principles-and-patterns"><a class="markdownIt-Anchor" href="#principles-and-patterns"></a> Principles and Patterns</h2><p>There are several principles and patterns that can help make our software development more efficient and effective.</p><ol><li><p>Single Responsibility Principle: A class should have only one responsibility. Avoid creating god objects that try to do everything. Instead, split responsibilities into multiple classes.</p></li><li><p>Don’t Repeat Yourself (DRY): Avoid duplicating code. Reuse code and extract common functionality into methods or classes.</p></li><li><p>You Ain’t Gonna Need It (YAGNI): Don’t overdo it. Only add features that are necessary and useful. Avoid adding unnecessary complexity.</p></li><li><p>Error Handling and Prompt to Guide Users: Design our software to handle errors gracefully and provide clear prompts to guide users. Good error handling can improve the user experience and prevent bugs.</p></li><li><p>Software Testing: Testing is an important part of software development. Write automated tests to ensure that our code is working as intended and to catch regressions.</p></li><li><p>Design Patterns: Design patterns are reusable solutions to common software design problems.</p></li></ol><h3 id="design-pattern"><a class="markdownIt-Anchor" href="#design-pattern"></a> Design Pattern</h3><p>They provide a template to help structure our code around.One of the most well-known books on design patterns is <em>“Design Patterns: Elements of Reusable Object-Oriented Software”</em>by the “Gang of Four”, which describes 23 patterns.</p><ul><li><p><strong>Creational Patterns:</strong>These patterns deal with the instantiation of objects. Examples include Abstract Factory, Builder, Factory Method, Prototype, and Singleton.</p></li><li><p><strong>Structural Patterns:</strong>These patterns deal with how classes are designed and composed. Examples include Adapter, Bridge, Composite, Decorator, Facade, Flyweight, and Proxy.</p></li><li><p><strong>Behavioral Patterns:</strong>These patterns deal with communication between objects. Examples include Chain of Responsibility, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Strategy, Template Method, and Visitor.</p></li></ul><p>By following these principles and patterns, we can create software that is more modular, maintainable, and scalable.</p>]]></content>
    
    
    <summary type="html">Learn about important principles and techniques in Object-Oriented Design in this comprehensive guide. Discover how to create a conceptual model, use UML class diagrams, and apply software development principles and design patterns. Improve your software development skills and create efficient, reusable code with these essential tips and best practices.</summary>
    
    
    
    <category term="general" scheme="https://www.xingyulei.com/categories/general/"/>
    
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
    <category term="design" scheme="https://www.xingyulei.com/tags/design/"/>
    
  </entry>
  
  <entry>
    <title>Unreal Distributed Rendering Server Handbook: Render Farm Implementation</title>
    <link href="https://www.xingyulei.com/post/ue-rendering-remote-farm/"/>
    <id>https://www.xingyulei.com/post/ue-rendering-remote-farm/</id>
    <published>2023-02-03T16:00:00.000Z</published>
    <updated>2024-08-26T11:04:02.514Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="db5d333d2aac3a93e63279778b6956feb9ce928bd3d53633c21ecb8485bbf83d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Donate $3 or subscribe $2/month for password access to exclusive posts">Donate $3 or subscribe $2/month for password access to exclusive posts</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Get started with implementing an Unreal Distributed Rendering Server for your render farm using our comprehensive handbook. Our step-by-step guide provides practical examples and best practices for setting up a scalable and efficient rendering environment that meets your specific needs. Whether you&#39;re a beginner or an advanced user, our handbook will help you master the techniques needed to implement an Unreal Distributed Rendering Server and streamline your rendering pipeline</summary>
    
    
    
    <category term="unreal" scheme="https://www.xingyulei.com/categories/unreal/"/>
    
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
    <category term="rendering" scheme="https://www.xingyulei.com/tags/rendering/"/>
    
    <category term="python" scheme="https://www.xingyulei.com/tags/python/"/>
    
    <category term="sequencer" scheme="https://www.xingyulei.com/tags/sequencer/"/>
    
  </entry>
  
  <entry>
    <title>Render with Unreal Custom Movie Render Queue (MRQ) Executors</title>
    <link href="https://www.xingyulei.com/post/ue-rendering-custom-executor/"/>
    <id>https://www.xingyulei.com/post/ue-rendering-custom-executor/</id>
    <published>2023-01-15T16:00:00.000Z</published>
    <updated>2024-08-26T11:04:02.582Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="3e43cdc863fd47ba0511d19c740e6ed95904ce8217ed178216d40833277bbc4b">bbf0d22aa852fb1050a9ca25593d2923e4bedeb23b7f22d601ad13999eb3c5418faa66c54ceacbd0f4cee6dc0884c9b8c166d1ef82dd6e08ca74459dc0aadf1cf86e9155c93d179fc7f748e62a15788c60df7dcb358ff0424e985ebf744ff20d33b69381e35d66759a07ba1cff71d4dff2c62be571992b23fb564e16e51c1ad8b84c534420e4a1156595cd2ecbff55df94586e01413f5c60c612bfb0a4b36315fded46ef999cfae44a0968ede3ffc01d1fe20ec0a2eebe59b620fb646c72b9239eb894d147300594be31a7f663578b7013a31f07d40b63633cbe7194bdf3043f997ebeaf7fe55cea28c890d1cee4cbf2f458618726d439caa246dd76860e16d8e1a71b0b548ea61abcb93d66a37ef61cbf67fc0940c5ffc60a75473141b800b9301c56c3cd4e5888cbe558def6e5e5e78a253a192fab4093dfdb21cad88aca2dbcba3358ea42bc8691386690a7f8a3a4a4c73f5f5b16ba22e921e43a062c80662b46c7156b4721238002ba5d55e2bacdc5581b57331a586a4900acbec44e98a29bcaf5784b37c959ae7e5462e6e6a0275b3c10205db4713906c8f2d0ead9e589601012e7d3bc0034f485f2919ff9b9b55fed34a6ec8799c7cc8a87c9c54cf61ad4abcd59efce139efb0037c016bb4fa556446ce2023831664a0840a839f07a624dd840feaba96bf9ef9e5f48ffd73dbc718d331da9dcfaca17eefab6e1078b61630c117573c9578d5cd6bea89afeb318d2bbcfb110c04c2126ccd5f2b687f353085c9f821d742e185fe8d14b936050194e47e506acb568828ff3d8d9ffd1534a1233807ae0c21743358db28095f1d8b06ee91e41626d2e1263aaaaa714b3ad17cc7ed7a5cf56edc938c43854a78394acac7c0fe5d0af4b61012a3cb2c821cef9ac4b679f335e4f0ed971b414c0e92450b0169104edb1369d32e6486197f08b0141f787d9159dbb3130378295dd81262799f69588f2e4e759393bbe8f3eb0f14d1ea4e2bbd468964c33b744ee40b5b063a3d33bfc18c824026b03887ca6f64656df5aa27dd5d33cf70855b31ad05c19039cdab1df6c1fd87a43d372f9a08ac6da84302736d2fe0a266e19aa004df44abde1ce7b26f338f8466a7c1a088fba88dbf2425f6f764c02cf6e14ed7e540d1df2f4bbcb004204fc701916e7cb4032f6e16e9c7747df49960082c7e78bd5ec95efee519b0ada1fd4d2796dcb2df43f9063846043e504f388e97334d328e291d3e01cabf533249966ad4ad1fd3f33c41df693df4d2f591ee5abff97684d871a4badaf309c4c4f0970e32745ca538f43a42696e1f83c74b527210c31a4418921c7cb911d08ee8dc17d347cbf985943d291a60d5b2d1079e43af6465ff7a664b6606030cf80917b2b040c189e4af991f427136c2a5a1b9e96d85fd9941b4abc3105591a49cc5e453007203ea030f08075a883f0e663a3a7cf40b26b0344d18d05dd9eb7b8d4ed1b2365d250a1060b2459495d6c521dbbcdf222450213994667a23ca7f1986ca48ebdead1d7822e0dc322dd01a427e1b87755c9b3988bdb550284f047ab320c670658a63facd4936748fe9b77ca5440b9a5a7a58d573b67742c54c51870aa15512a22386a0da3f2080dfa164e41cd342091fb5b57fe2a283c012200b7b27aa2d6ba7686f8227217b0ebc09e87c2c95971c43a5c530804bb1fc13054fadab8f395e5a3969c0bece34acf701ba8bd3e82b82e5796aaec9fdc6053d73fce2a704ddf259fcdc2943bf3427ed8e9e459d26eb6ae06d487d059c7e3b13a355518a25fe983a8e38d85f5cee836e0e097ad4d000a573463c0570518fcda652f1124e082aa4bce105f7812d2ae73abb8f711d00e783629eb8428ea05f2d1885513067f3322dd81b0f06af3e04058edc52408ababd0e92457f7a4c3ce1c88dc24d7d6ea542f9fcc2ee060f8760067c4765840e7b64c0774bf5aecc4352bb86a250915215604de1a674c77fafae66a0e7632c206f120d6b878226caf597a76a351de6a6b54227ddf25a869efa1e19e124f7a5f865ce5706d50db55c636cbc3d90b1a9b5ef3aa428c0b056621859897b358ab6b09fdca973910bbf907b621ccccd0982b99a5394a278925c60877c30aeac1da60de614dc10b052b6763a7e821a3f4930ae0a6f2674e3f0e3d7f790ff5a5e5863faa0949daef3680e5d0fcd42d92cab12094658254c2dc932ba6553d7d779d7229f59206617181fd210597e9f61d54b50b8b65ffe17c42510005fee8a889809a06ee44b03649ba4dd37be45333dfd78fed9bf6ad10e596ad8661c98acb43e140dfde7117bc2be4c0df4db8d211121261ccd319b6eabc7858f74d8d385d8cc60d49f9ca5f983772b75fe472fa8ff95df3c280251b108565169a01bfae92f6ea9982ed36da98d509c3d0d1dd13ab2e22aa2f83d9e149fdf378767e6ec5ce46e2416a739051cf3331fa904cea6e59dce2588e19bd5616c9c4cf0feb0aa9e4deb000b917dcce98cd8260cffd223614816be6ddd7ed0df8f5a79e2043a8cf47cb2aa7eabe6c1bb8fa36e0da5ccde52a19846c77d6b2814bef9b7419d2d77c9fe96107410e5e44c879d73b4ede0d063876c5ecb8e0686493a2c45e5ae537e8921767b944d5d5b72f5796ecc987b76d9fd784ef6526627d666292f333fcedd12db456a643b90a8ebd7d8eaa342002e241a4fb7b57355957b881d3fd539f3cd11f8694bc919759083669655f6513923359623daefe1678fb11671ddccfe772a8740bc06383cbde153fe035e9e5617de6ba5fe060226591b0c55ea55e02282949960765e483360ffe789b8e25f5138885c4e4ec5d1fd758cca1dcde40841dfeef960be4e35cef58a6db0a4503280d1601f494bda4f13a82e392ef9032bb91164c8569813ac5e785704a4d9d6f48ffced3d65b1df3492648b684855d576ffe1cef35178caf47fcfcbbad72cecd4ff84761f69fd1d11f3a8d891c94dc2e401e49e61b1922d28f6673013cc3cae30a07bbbd9c23187d714d216292f6dabcc160f6fce6c150e633d7795f172e2e044db051e04fe6a06743c08450588e15b23285787bdb543af9ea84c248096b954b3e21e145584d26ad41725115bd5bb149230b38f9627c793af86a491a4e28741b1935682da74bce8b2512c99cc753cf3d4d53cef57493a437feabde1c51d6db3a16be1635fea925e8e99ba1cf855142271918dc429c5b2122965cc06d9f834cfea359ded4ec956b09c9d2c3ab2737fba3f07a4733cbe5068a272c0df292ab9ef69ecb31246a746e64189542651106ab365764ddad1c24aebc5a7e4ecc56ddf052b9e2dca329e0be9afbbe959b22a68cd496bb50c3e0cf5c67c50faae6ab93b2d39741bfaab04b7e3d26805730a5724dcd2d27945378bec5981662b78a8d77471befbc54e1e20c2f7279971b0d4f928c31f5caaa4794f8eb1a6bee4c1e21da93054fbc093fdea6e8bfc6876512d69df75a89009e2cf2214e21522800d67c8aefc878c95632d2ec755b56b85aed208423373362c3c8c1bc982307db7f96f50c3e79b18b4cd7a558c3ecb754e0174ffe5c77cc0b886f38a7da325c4b5e2000048f2c8cf13467428efc6ad9ee80d28dc1762f6ce5b7783c29674b4bd2e0cdcd533b1105d5b7ebb605432ad1047ae6d660134018b4daecbe8a86280da8d4dafbbaf834569c26628e7112e002e7357ef98d503b65637a45813031ab9d744c13541077ebcf39a3a75e5fe9c788996cdc31ddc73d51070cf631ac19acda3acd5dbbec385de328167c794f2163ffc454161602012985739ed84243644a7eb90203e6c1c64233d14fb5582443b01e9a88ef32f9de906f0d6ff789dbf0ccd15f95c06e6dd83dbc74d55e0a635da2b4bf857040af84127afd300a3a99707b8144e69c29175ee670adc2b41505b148b71520cd592392f509ecd00876cf959fac4bc9fe86433f5b9b0dfc74c783cbe783ba5e6dfe4aca0cae5009ad1d7fc059730c6134d5465d45940702053f5fe1e9756b1c4cbb3d8be0183b66c047b1c641d80e0fb77252c3858ef4f4a1c49e3314abbaaf69d0045381144d295f91c36577fbaf98abf778a3083a10747571fe7d8e140c71e36e04faac0e89dcc801b2f1bca7ec64fc3d2cf032f26cefcd59548f70abcde6f7044bbfef6b8ce733846f9295a983ae49aac853cef3b7934367dbaa84a670757119500c35058757575896c21ea09ee8320a5545b9431e18425c901172a07cb99a5a4b2d32d86b53a6f38f3b55b7cc0d00e86b2d21791a750df4be662c7c78259b30bbed67e2f2718981f985eed543ffc7fc6216c61217bb6645f9d4e1afe7123fe230c8d1866e8b57c0cf7b4a9590deb752879a6198371b1dacf106a391f5b11a838cdc2b5b0581dbdc0eb4f344c14f1e1c590973a46882aefa4bea1bfc22e88ae3541b79fe5b5065385bb9c4aaebfa162e9dd4259e164891b98cba1627a457f9a208816fbee061462184422ffb203c58c995df837187ed0bc44bed2719494c16ac2154d06c6ee0e0ffa463d5042554dfdb87240e04bec8d47f0bc474f4f6130da01695c22699ce2f9436e5437a7d84f48281fa4ecc1333ec5e4244f0184e19fdc26cea38b279df987372d86153fc090d648f9e27c3d0e912559e4668fd3842e603c38bee4acef26a976ad538b05db8a0f3b96b9f4849deba71fd4cb222540344c4d67485003a66b57db6915654229003067d96647c60b328f90273f0b6dbfcc1996b5f42374747e583ce0604dfaa99030eb699b71227ce2b0777f453ccc0061db255d0fe89ca3ddb9a8bca3e5347ea63873d3aaf0fb47962f8084a7e71965cb3fe9c91a60c3122c2ca0213c292ab9f346d5e0ac9aca8dc0fd63f8c007ffc48443f9e415bae7af95f7d116c7d72a421c6e45e04a07c29b406c2e37f21c7ccca4aff846677ca2231586fb37bcf2321eeaa8dabda4c285a2c19c29693da719b10c116de963f0913cce67dd47b2dd14a862bc7ab76ea6dd833f1f93899afe35c0b8d68cc797ec0bac7614ab5c9e0934f82403c967458caa75b57b9468a23f290dddc15fcc5fa9bf913282e2939a01660a91ad22a064d66e5061b258103817fc10aef10fec85879affe5ff46b1da92c2610af66ab83f24a9d4758d5f66e20b60f86c008aace3d771174a567de167aa52a96df41a610bc966563bb10aed1f4024c5395b425b826719cad523049a5fe2eaaf9dd2c9a790187cd2423feacff1dda49473831653a2c69102421c255727f8223307fe9e750a991c0eaf6d4b3599ad8ff8ba739a85ba7f793366db68eeb4e29cdd2d9e6e66b618956bbfd076675971949ef128810b3f3473b5ca590e83bb2e8bae2278ab1933bc84732e96cb19a3cb8c548b48d684205308276e2ce710ccdbe2d113c6ecc6fee4b4eacb67e7cb8a6d106764cc5b2d07baed866a6094d3826698b70992655d45b217342c1b116effa0052a061fa13d5af6a668c11a9767bf04b66a43d2390cccf60a7651e3f997b4cfe4bb69920f19128e823432b97cb813fa5bee75814e3c68a98ca1941171be3f2ae843206c9aad98c64289a5aea34334a3dbd4ff8c0ec3b2c2bade946993aa01b8b3b20f0db0ace8cc192a8224d27b774080ea27983e5793e57c897043783a41397908b2db5681de9e704a1533e2744e0f2d5565f7c82279a26ef176617b71c0863ebc89470a4b38c3b68b3e279907ba3cb8682c2a72a7d8c7374f18cb3f5e73edb9cb50cb36773a29ad8d2ddd7fad3f2b34dccf3df13318ce648cbff0f810e81a782589d18ce4be9cd26958dadceccf6497f62210c406159a55f13910099eb0ca9dece26254dcb248b6a36ee55846d80e95afaa17ec5d4731dd640af0b6a3e46b5891b4f90c3857208939f952cfa27891de02150320858a60fc57dbfac39bf9c84f3f2a96a9f0adad25af5a1ad7d51973160960ca6effcbdcc60fe07f6c48e925fe5da360016ec90c49b8bdf1222a39ea0f4ad24302ef592b772a0315f7812e1b21cb1470a11fed8347bdb1d9d0302c66a0f424bfffd7d084b8cfcb061076f2b2ee8ed493e870a70300515caded57aa3605e578eb34edd876486513b57d043249757d93a196a995e50013eea833880cf0aff1e0151582b381827bd0b64190c302526ef91805185eb10df5aaeff7dc2cafc18c09804900a18f2b0d20525b8a2f47713cc75724862a67abedac3c49da29d44006f5a629d99e5216c95e973f2dfc4d7feac86019305daf2d48c671fe6c32c095a22d537b4c4fe94677cc4b26aa7c57618b3c675da30a8d816613aa43137516abd12577d7ee13ebfcc0907579de116fa6eda6881e92c170c87ae016072fe1a50ddf6b4fe33e3f515500cd58779f6d9942ec9d70101e9cb461799632e4c4be1eeefb53ef964e9e5284f3dbfd73ef4ddb10fccfe720212ad07eed4ec67cdb4a07a5feb3fd01958eea517e26cdce48e7d6a74398825f7b256c0ccc2e0a1acf235ad1ee413ba34af44bdeaaf5bbe706f5a97d0a24ca9f39eb1b5ffe51278531761625583214ee26bf549756404c6b6a58f2dffe1f125de8958e40f1c74504360ba260d0676e393e98c6104e09a90af54383c0a50e99cc8c4b51ae6eb7d7b503006da866c792a3aa6f5b1525d99d91cc498a5b9b5bd1967fee30235d12976a4635ba5209209a21dc295f2f25b64f88ee116ffc6c4b8be056d76d08dbf86ac9154215af26752447633ba66611d1882fb96bb1ea2d9844f471cfd934ae4d58263741ebc8243094335146ad6802ccb9a2f1724dfc6997ed9027ee27742d4d5d77f44f23b55da22c9be307593c425ae22c062e7042fbbe19c598b80f8fad1bf5e4f43bf3023e4a258fffc6c12d0ef18f5bcf1bb147639b2c135ce9b90a6f0c905c4b2532996897f9102faed90f3be26c13bbb022e243413da23bb89193b5f6170eb7745ef718b1909ec8992fa0f224f4a3b997afe46778723e3210e6d2ad692c63e54fef9d79103607e3b93c7bf0b1af369a4c22f34b8c1f2c2ca9a0d7d09b91086c8fb3c7981df906b01e90ebb4d27e189c014838f676bf9f45ab8459275d424b54fa88e43eda8124cfd7c9fe05de5aa67c8710e58dda6e84f589bd1843a314bb5abfada2a9a84fc263f637f2305ce91e641de9dc40dff0a43a6c08d0eb0acc85ede8a4e656521f7028539364f9ab3ea808c6240aa7d02b81e4a2bf5341b9206be68bb18fa28e122f3d2eec52114164e5adda311db39f46edca6778747f112fe2601d6b9d43d0cedba7df9ea656df1be4bb4fec35c3ccd9e47ad529f7f74fb56ed7bf2b185e17b9f6ca5c325cf41f91adf6495b1f68db7ab4e3f024472ee8c1a2dca1a91ae12928e51c829b87d1264e8e7cc5c303058d5d85ba88b55e3fac68ecdfc0e5ff9a41c23d37a4ef57bf86863210627ad299877444d16dcf0ed0bc40ead3ff10bfbae8632d4c59d5dbda94a657281102e4a365e57583e5693ab143cd7974671dca3104f9c2eea75a4d84129ddd7f19f09f9ea4b57be02a1d879f18c567a3b7295ec5dff499292912e00c85f42abc4401858c5d0cc049cc884875e8195b53d9ea09a11f57010b58b1ed38170e5436faca16517b3857b50ca1fa9baf05ede8728c149908c056dcc6a0fcd1be033405b5f11e63f7d8e2f9e780e7247b3f2d8b0d617f22324735ecefd02595d76faf7ebd00ffd521c883e082911ec26cf1e8d4e80618631108698ea4a7fcd618c46a831fbac501210e11d9ee2455aeb175dbc07c852b326639c05f9ea1b864c1f52f88c18c0e2038d205090be8d6acafd7f10f71abe910c1ad3dcfeaed168ee1e8176d69451ececdf158896fec3f75fee7d68069d96d5f91e2f32478f86d4b2021a40d9acc9639c71e2af769bd8f62147eb7501cb754ea0dfde37d96c4176af64f5d5d1b1e5101bba59fe2c976b5db773d20736789029109e32e3ddf7cb4eb5fe6df7a316eaaff29a56a2f12c4881564087304b741e3242a7838e3ba48ada5316243a44e853cd3b626d6f13f54ee5041b3f0eb2ea500b5020c573137a6feae1607f99a9e8d505cb2da4f16e52f51be8e1e5b36e07cd080f122bb8eb12ab1fbc5eeb3e0aebc8305eac5a81e99c598f37607b29764127ad42f1220ea8b180a71fde1cee3a798d469d52a69574a331f494b90b5c2cf6563dd6622781066fb179be9e1ec6ff756d30c228262588b565ab9194e214199530b7e206a8ccd0bdad3c7aad32b09b228ee4a439cb9bc67b7e7cc617fcea7112641b61bc35f3dccbd1121e0c981cf111c5898736db35e3ea4b96a1ebbdede4af933156ba9d11ef2bcb1c1e873c5cf4c55f9cde2f6dfa4e316eb7fb23acc7c7351deabd144e0ce78f247d5f706e9247ae236b5349b9e0cba37295a4cd4e7fd2b859173848e12bfbf886caaaa1b2038e0be5ce4925b1e8f25d2a3fee00892d907cf153d03d3712591f22897d599168edd24a38749853f9cb6939e8396eda8923d49f13a0308ffd2064b0a03cc31e2a4d5d8bb455e5b1ecb24c729473f88fac992ea2f4a6f0a6c64ea265e095dd79f10a796eaab5cf079fd89b48965be0c3e0fd57aaff6a77dc9512b3fdca230c7a7954553a1055a30be14fe4c79e10cf54e196135ecdd00e4e3c14d5447ae57448864839a177f07ddb1001d1ff04a8e26a9475d6a70b9b2d2d8387c97fe651523294848b3d61d82c880daa96c83a607a8712cc790076badfad513b18b1722653977f84ac1cd54e7dccce39f59b6e96409ef2f1f9043dc9c345c38fecf26204310bbc1a7e58b3d7b57ecba27970f3a2252e13f03485aaea002278957542dfccaa1ebbf7817ab2f5bfa7f8475db6cebcf868144fce2c53f9018b3c3a8e3e65adb79903b819c4df002ace37e688cec6b351c45bb3ad55dc7c037d2b5b07ff526e49da32f2a53feff28ce93ed05dce83b8ed7562d3841bdc34d47ebc6fdbedf2c94c8cafec9487c02c23417bc5cb73d080c3fe2094113bac3fbd683362fb955f75a69501d4d5fab2fe079f679a5bca535b76d10ce669144b1dc0855b3ab74242f5333ed22557b846060c5cef79641314251a5fac4297e18a8cb640655c3d1df32f8d1159180d0c9ff2854b9867c75465f80194816200dc11dc05a77949016ad0d742bca84a438d341685aa2076ff8519c12abb09c44815ec8e9687c2a5ccadc3cea8098a7fcd2a0d47fab2d77138687a2f25c4ea6977e5633a25fd42f0e7600fc231969a5d19211f128061c2b900a23148562adcbb1bd1b64aa1f31d570389df2d690a466c3ba4d722c8a2794b5c38d3c88c9ad74740a8d0d1f0fd6526b9715fe393a427c4bf76e561036f0c1b023fdbff43e4cbd03967c64dbff213c76bac039b55e7208945623adced33565214e0cc4a9d73b474bdc3def157cbe095b1fcd0d066ada72bb4002d6a33154190aff56b647a1f5fe426b92af1dfcbe8a7f3a9e742f03e49441990046373d69e5f87c65d4744852b817b25726e5b680dd076132a581a72209b1628cf3c5eb85297371ae8936ed9616afb75a61fe776352b8fbe186c53512a2841cad83d13e54f4d565bbf9cc721e8b27bbff8dae89e99e53108aa6f9309b55dff5dc28601ddce0c7ad948ee8cf4ba2d2afbf9ba5dc72761b26f48bf2283aebda72b6674482bee81573531ea6a1486201c7583b4f1af26514f4ea91d1e49d9f8737fef208c83aa0886b827a68675533a3700c893ad2e4fd197fba4c283b1bc586cf6532fb597fe7bc939d1ee5767acfc68d508df867fa948219865ad4fe633ca9c382da945ebf6804f8dbe4b27106ce02ceb340308634c6f162e88a2adf25fcd717788cfb57928c86196b38ea401c45957ffb93ca1c700e7e5271b7aff3cca16efb121a90d17797c77f9e00ec05fa2512cd3b94e02438109adb87301ae97d8cc57d84a4e8675c36a363f16c4c286b0ce546e3eb368056d159676a631dc971a341250a4c4f614432f0277d6e57f2abc17c2fe1e5ee3e1868253b9cae3fde98342cac47dede21200fd404af4d2c53e1723a5db946c9255428a08c1f976f7f5b5d35d1aa018721b87e1786762d2f3d6fa066e84ff72e7872eefe01ed6891644cb0da20f6688d033dbaa74e22d26c0fe40272620f66aa4c24069bd4199c43a12b740da4d3c8ce721672acc4173fdaf009918d6b1c29f7633fd8a155d8b3a54b028dfebd87515c6bf27be62ad9b58b6df6cce483f4eb0ef004f5e65f4c22063b031efd4e56b3b2c06d706508f3d596c4c32bdb57d0cdea9179db5ef4a7f6f9e6bc016d02b34943893ede26640a42434c8a4e844a3369f059dd9ac1d1b0d68d08ebee7703b5e0dad05a0fe9792f04e1f4ece11a9ceaff29c85457e5f93570d621ac392e1865159264a058d4654c88c87d9fb31ab41fe5df6d5fa9280b7b278207c7fa4cebf3fcdfdd8d53ae2fc9f05e70b54ed1ec238a64ee4959e9205c5d0de214e85d630fe8dca35b085f0fd97308afb9540abf7454ed00f76552a3bd064a1de97e42027705f0961b2486e3433d9d242f5c7628fb64964711b712fcfe7a13d67d495be100dd0526de3478bf8240008fa4d517ab108cb082d582edca14cbd4a192bbe1a7bfd344a10071cd329b5b4213d1d46cb75efca4b7cf5792f6f672470145f4b2e54854fdd961e0a1d0c364987bdf565b3b5a211d183b75b80e465a0f6d588f671b1267da0ac1a32afb1a3abc619769ebc1519392546e76643e063fd00333d4e175649398fb3a15d4837c28afbbcb4c43a4aa311173a565b2b3dae5bb502eff2c44adc0f2b9a563c1729abaa170a6ef46acd70478ca96611e65d30ea52c2a7ec3b0c6de451690b88abd24b925ad54088aef1427bbd0b904bbd5b87321b78c80f42a609fa532f3a3d4f497e26d71b0d7679c0983091a53fe72d5ad9cf95c07422a1a9565e9a29e1688188f2bcf25fc8dc13c6039863c4a38ba8dffdc2d23a4055932ac35a96de5af4c76e71a60954c0a774a24a66f3df5b460ea62bc7f9fb26655d25009ca59722251f8ce2823d5f16b99ec108aea7a5f04c62cfafe9066177c46d803a66eddb3f847fda02a7c0ac346d34563561a83bb9fd6a3bb82fe6374929e454500178059d8c9ad7f17fe8f0c67b0bd166de34c2cf2e3087e3bdc8e88481948c5460097dc0c8979fb176145b47c9e6dafc79a2a90f8788f23d71e0a01fb7f53fdfab7104a91508d312afc74b1c1ca277e3b9715c39f6005f27278054484192c892c305228dbbeba3f22daae6d8deadd8814d87616743204b0551143a267c049d686f49f3c6845a771e2d59f3ae9da0b71c6265b0d7271103bc30fd3cb4cbecce072bc613e312bbe3fc6b5ab08c888857b27ee5d3d8aaebd2ab1eddcad50b1aafe9d5bc0e3f10b8fe1fa81ed6f519d7d7294f135da59c57448b891b682efad32289e5620fa1669a82a20f5f98fab63f9c8ce39f9963d27b2e5d50278264782209196fca58c19bcd88ef9452d16a0e812e8283209c6896cf976f207434dfc2cf17a1e478501f9c7a5d96d6c37168b2949fdba47122c68c369b660b333b3321718a1698aae97f17fa3068bde1534bcf43788a8936b032b908b6a3ff861fc4d18e2755725b4feb9ac72077462d24083c8c38195d62eec13623edd1473bafeb69b8a650e72ed89af830af22f7f43cd49cad7ff5c9085a30fbaf682fa2e7f64df8a9132b54cc68e2aa6d41857a75d964d286a702c95c447fbfa0126ef8e04df24fd7c4bd4327f5cf2bad4134fd7c5e580c34e29d6646f6569607cd7a1f156071f1016ef2f85f94d2da3ffe720a1eeb1c895f6540cf1a723c1cecf089198fa514d5a71b90d26c6bab6ab15ec5d6adc7efa17d6413589c0430604717524010d4139a8803d5f53b95f97b1682ee1c3b73abe077cd0181e117f4522b698253dca90113f099227012692f8637ea0c51c4e4700e6933a8bb35cd3cd740c754fd9630c7c351928c87fa8d9c046d3442601d8d685b161e180331aea3cdc282fdd1f6c9d0b61ce0d8e35d3a3ae30aac288b95f0526b8ee5c5af7d43fc3171700c090ff35b82c120ddeb1484544bc5a86da0d3e34df6cd3112be83fd497bd5308238c5fd8268e7663265dd5f766ea7a52efe1e06e424a83fe115443ae91d09d82277d175cfaa085ae5b2cb3b66c4ae5970e94bc74b8608cc87ca2cfc785ba49485683bfd12e8ebfdf5dbc26cb1be0fa764d538ce2cecede336445ec14e45f532ba4cdde93f801fd63f2de25c54cbedb8c86080e39fb22de35704d571ba7f7aabc09eaae32fcbfe967904f807ef4c4b7057d8d6f3a5c6b2da1781cd79bc79473da39a2c41ee143f25bf8480faa05c9d315fc7b72e7083e494f3160e826f95ff197d48c2b95568fbc80c17ff99ebede9f14eda4db4be52d3a38e1690f4e5b4a1f133abcc86991900cdd49bf45bad8ece33e223ee88744653fcd76f797c765258f806e166cee004f379339b38ba850e32764b9a739fa75d9aaaf2aa8c04c674b34f369b9d4393bd9fdec201a5698a849afbc849e02eb30f1611c9e6b4c6e38734fb0f6a27b6eed0b59706d35bbb98338b3e261945743e16c3b21c69834691ff1719c2ccc27428188ce87a9eb273f9821eee3671a83815d7d02827f933cc84924d64b752fafafd2795a093fce58c9b5851dce1b18fa2eb6be933f1ee0165a8e65aaf563afd7f6ef5962f41847ffcdd57e9cc186f3ce70d123f1671bae0a1413439cc8e513393dbf2e349c2bd1441ac1501fcf0992654190642b71d8bab26784e0da3a0a9c1701bd1df47a20ee6580ce1d286b0dcaa0323805afb638e219a14431be9d2a0096741dbd367d9d0252a67ab16df9581e25539a0cd530a253e9b260b4285643f959be1d790cea51cae412e0432bc9f5ee3e1b0645d31e30151a7558e0bf5c4ced14ddcbaf5d15a2095403b0cfe8bf62eabdff7f6528aa91658dc0bc395d34c1c45d6436baa9549cbb0c919a3b00669ae643b8fc236c7c03592ef845c38f554057d2b3cff5b777e61a6603caa89bdc1d9d5e3dc061956b5170a88b7ddb1b6fb08323b546c07f31416939ccce2f0922d2a190c88f0a1312c0597b87186684b5de2dc92a3f70b1fa031f5bdcdfee5de7bce9d40342266904c337626a3f85cd4a727ddf92a765340715e9a875cdd3828e566161be79124ab673b80ec76d51e091135c74dfeebf2b84ed94629ad2b1c6e8ac59f4f9eb7806258062c511d5e1b48404f3e5938e643ae858f194fd73f029214e3e2a7c641da3120f4e9f6abcae2fa64a0de9a003aac95306f5526c95c2cdb3ae3b1c52e63bf0dfcac1396f8e8c3303a9f6d8d2b034554bac22f0a2e825e62e9935f9ad46e6bdc74ae026d3ed94f587a673daebe937c54798740074003b0220bbb6baf088f7ee722bc361aaff43d422f553dec9993357751e093b4dd36466389824d30644a731261e1c783267d1c7448f13331b6189653fb71f63809c402b7237aeec02d1d3bc50e848e1f5f5f875b16348e3cbba024a30152233145f90bc750054518062c243013bf5531dd8f08dff5d095dcd10d387d32305b009eff901b7adf2490319c7ef03b5cd265b28a55107876668df87e22dea7f807cf36ec3cf77a1a0e875ed6c5c18f37e69d78083b4274a3d9bb8d31fcf03f00a4068c559d43c56ec97e0d407dd46b7dd619f334b8d50ac7a4b44d2ce0f3091a0e65f7448b4b8abafedb22d30410219508a42e69a707734327443b6a1cb13000a9fec30442fda91d0a2531eb075a225d20079f86ca6ffc641cbd406a6575d1915b0cd9155ac2497be91a9f7d5e83aa86a5ab497fe995242e95c3ba856c71a7f5540bc53e99c4b9a2470ad1178588ade06af587bdc3f3abba21d2c105b6456dfd61d3a5ef2facf7b867c262e2936f958b76220b48cf4b3ff9c292b120414bb38bf09df0702a14b1c25c6c4cff2c93d9695f42b5f7eac1cbd80c2740759c881a2b804e4426b17045e2035496eaa770453452f7d09941ad6092351ad048c049e76054832ef19053c72bc952eec8e3571701a02f7a4d066d2adfcd378c0506d06a789a3016b70db5c7fb32a2b01bb936f493e90602c719663d2bbfe7e773e472df3ddf9cd4e25142cb795e525b620d6a713c960d30d7e2c5d3bf3db0ed17ad61bf027b1e79b5805eeb21e27afbf9267e37db2a652b09492b9f2dba718728fa5263143cc630bc47c8cdb75c1a139454d402438241ad490a7fb4cedde3b1bbe4de38491d4d20c13674f62cf8418c1d776d6d240438b6e0ce5b55bcbd22de1a080787b26c460305b0ef842d23f42c31ad87ca72126839c69bf37823c445eddbf8c7a5b6fe04c967d2da69a3605aa577c9f6e3f4c6331c0ee47c0361d257cefb9f0e9f26039d81866013ca841b4fce67735fe7f3906f3826f94eb8045272e2cd23a05e85a7bbb6860e9bd7f2cf1cd02cc6b8dcb6568ef4250b8b3abddcb108becd877b845f664250d057dfcc0ee0a44cb1347bad01941559c7b9efbe8191a2cd55f5d2345a44cc121fb818b121e1db607369534fa0fcf3a55582c10dbf627caf20a56db64fa398d91520adea24105affcbade13a038cfbf90a69b04ec0c9492ef6b85cf1f65d261abcd1a5dbecd9537bce9249f4c4a51fae28b303b34b36b1869d8289c4576f2d77bd8462b9cc125c89c43557764da932258139e0dbb81d5d5aea725d5064ff5cd3ed8717600b408f19653aadd490cb5382db46c89c2c307964085205455121a27c01e8ba0b0146e732b24ffae9d338d683409be376cce08be917e16b2041c1ceba4b0e8f008df4f86fc8861ce9e67c5f16326c58b7fcb353d4f4a3a42955718e4acbbd0ef123f37bcec5c3b47e39831000dc45910678da38bcdf87a08d107308e8333c5933a5c47d133e20d375be6b7b3bb1b9b963972eb12dba685c54ea1e2c727e568c8cdf4db924c05dd6c3572168a3923a81a10ad42bcfd9ccc8a03c09001756dd89d553d045402da607446ead04214dfaba91786895873f9d927ea18dbaaa37e516a477ccb9cb1f197951edd886449d3a0c640e5051d2649831129e5774d3d3efc3c9a77ab1dde1a8e00eae6e192aab1e35fbf1c9a825bc6b1dc43c89351b8b6cd62858ee0d71da02cdb8668d3e31196a68bd848b0599d7663fc29f132eec11640af22b3a18e010546ead33dd20a414e0fc2bb58a57c635f81d7463a4e94644d1345cfb17e4fa271e48fb9b6a543f88e928c2ea84da22cd05ae2ba4d1ee02708099b5118334483cc8032823b820fe65c38ac6a1026ffc2c8031bbd121e878085ce3ab193fa04d2318fd876ad8ee4b4eb895242b955ee0be4fb5d953362b84eeec30bae38c6a1744095cd01490e98193ed8b2fb0e5d5bd8036a0cca7cbc3aa9b87f0137820e2bb900fd37fc95f2fee237d2d33a551b81339ec3b92e0ccfd6869738859660366b1446ce8ae2fa1d72c9596fbb45b671fef6be5bf898455a6ade49f188069c03cd7ed565aea03af50592bb252328dc1bbd3ae54904749edd7b0482470c91d8573519eb753df40c4f8958cc99a4b03e93b4aba7bebc9a5b449a94063844c4fc9f95b77af65c0e847e458282fb6087397a61b227e764eaa605e2f1f551a424a2e3632d7db2bc8e7afcf373fef2d1c499af9fe7fe1c8b3e7ff09d4cadbfbc198b36a342596e207e3f694a780540cb514d76f01b3167d4d541d5c687f874259a06d12a0f7a5539d9cc543202da273f42b8693a0e835740f39f9e68ad589be67d4551bc818c391055b6a735fb7547319287b94b34f75ed1851c103f67c1b31ca464b682e8f83e56644c3b3aa362f5ededc5b9ea8024834fc617ab37685a8c0ff5bf524047f74fb21c5efce436a0f39366f3ee98280c614d7766f8b9a7d90f4ae4b3e22616bf96abc1af60d5c74fc514ec1b0a1e79bc492084e14b28bea4b2165bcc2c3135661c10502a9d209e9613c5f0124b9030c14d9dccc81080e1da89aca6e3dec438f1dbf01f26257f98a39cfc2c703d01c8ec4f982911fece95aa8573d85eedd47c7abe4df99e9fae74820128c46af25d1b1ff688b049d10f8cb6bcd0f13d72a2e9ba70e6a08da5aa8dda36e0f2e8f4a2c7a27b204d9324e8e2241ae5288256a56660a356c6a0efe94e3f2e64a7bc4ad6b3a32af1430d9ba602fa3db1b08ad58bef0988c3dec411129603c236e1e0e2dfc412ff2c2f5e7e4563b8abc72c53f81341dc836d1078511f074bdaeb6dff873c8410c8bb2854281ce3e45d8b8397a1d1d68b28f2160f380c9466f21addc7931379bf78da98c85c2f2cfc82cfe7eca76161621cbcba40900cc73e1f1476d443f1398b22d8fa07bcd895564d435996c890723158899ea82649d6da219177be607518f245131db44565ed7a51dee3625406fd288cb516eeae6a05ad416797a6bbf441ba49690e4fc026aff9124720389664b5f68f06d721f23d569a26ea56f563698f588c8e612763d24e29473976442413ecc4fffc20d8811d93f211bdd66a5ecee86422df0947f992ceb122e2250635be6ee91835d2d690d4d50913bd45f61da83f37531f8094b0d41906ea5cf5811e2a7fe5e4bef4845bc1c0a7bb816a98e975ebec4419b5acad355b4c024d680e3e453dbec77ed7b55150a0838e8515ee5f5fd5c4e1567948c3ce782044b5b9b098a9a3c2c968ab7a50e12c21d95b77cfa30591d8cec87186f469a74097feed140bdbc97da730d311a920ab29f6a988a6c90221ba8644ad566c47ace74de57a039faddb7fd46f0aafab48632fd0b1f8b2da84f20cfa5044b2d8b37e7f46ee65da630d7eb5080e2a7148faad51fc045768e1b282be745c0e3b199c1285906bbf49a2793dce8e94b5c6c7ea8eafdb5131033b785bbd2665add8571376344eba11fdf7829690afceba52f4df52ea5dafeb51462c623240d0973e66939c70883f4fe786281da242417e2f2dc9a1313f6b905ff8be74d6953016516617de842364ad86fd8c643e7dbe38d84c3753365d88c1199370c81c726b8aa51977164662ce4cfe8e869c180ec4bfb01cd6263d9d69721f2ee1d95046ab95bf9018ebf94af3992611ec60ab8879460b0d36610328d382706f42d596a06c958dd64646731ba0c0a150796d9c55f751cae83e3e875344ff9de79f1449176bc0b1f9f88c988a568156b28545c10b3c64cc3c6bec8a631d6a3654c69417f5cf75bc521e3cf6160c14169a023b8994dfcc1e04bb46c250e95d396afa5d90e35bd24069adc3665d65bf851adc92bac0777bf86c56078c84d85c2aebf3077ccda9d24564ca3936e9835d090c3a1e71ec2d816abc073ce4a64e5a8f9cb4ffaa6ec01d55dd832c5de50e649178a3bf2e7e72c8538e33d047c4f0b3b40540f5bde6eb35c2ecf4846a67f6fb8344d11593da0f7985d459461d398c19a71761143dc427313d87dd383a0bc135afcd913277dc0b83189ee341556a9b84679f4d23a65ee00b383d268f299bf1190814891d13cdb19421c30b8056679160e57fc496219a98d22447165847bc142f0c99901b94c31857cc130274097d839035288d653d88f058c5861887681730c079018e9d649739e4921ea782be50030d21075c1ed143fd0201d725e3289a6dfaa066faa9983dc632c92582d622d7b4fcc940ccd3288f2ba3aea709c8b1cedb32b44ba11931ae1c5752444c0989db3ed7b52c3d355ddad8e94aa4a0c9922add19fd77b02b8ba0a95ed477c7126d006ff73698fc6a094876ed38754cee3bed8cc12bd147e5e8dca0674640568ff1e1b7c392fcd7fb39a94ebdc7f547a3e86bedb5ac7dfa91c43d5227190c862a5ae1a61d6b3c51c6cf18439822d833e53bdc6256309b574962aeb8a3141ff8f338a306c3cf679f9882b417f01c333a49f1ff9e6280adbdc3f03f88f67c978d2b27777607ca6acb8c0bc9cf54a2e8b98be7ff945d5191e1b02352e582712850c7b10c2a1abc561f29af9b67aea24dad0b222dc651301d0d1ae6074b5992469b5f183eb9c2154871f12edf59378902c750763de83943f0502b134f0cbcf31877c5c41aa2c1484a49a5cd31ae2e0191577bf0efab9464a1898c4c221e07187d485bebc55a5e5b21b7c83ee125a1e1c94ded917ad9801daa85d43954ce6cdf16ec644f10496f114f20c3e3fb6304f7f1d15c2f6e4fcd556ecd02eed935903907987d26f55acdaaf9f18e259027ff4867debfe83a81df81c033ba10893ac2cc9085d441b3c3e271ab5bb0f67ba520e9366a83ac090b2721993c66ca10e845efcd2f36a1dbc421ee1edca019bcf98763861dcc358f85c9401e5b9e86d606ffba565da48019119dd6989c877ad107dc77183592721a591a8c09f235d3c05b33621a46ec815a86d8618b2069d6daf4af9d3584a096128f0c381c1600a02da86697c6df2b71dd5e32fbfe2bd4bbe8f92e37788b04b4f7c4adbc26d7857ede24dc0fbe07d8e7b3afe6b6d2a3e9bf44c82fd774029e8311946467321015cf5ade03c9fdbf11f1b25f65d0d68d9e0566aa295dac430e6846315b4378a3264875ca1e8ced14a4fdcab6b4aeed0907c82652704157601151090fc56893fca3b3ec1fcaae1e39d6b420b91b81adf7dd26620742bfca6375ad84f6f6043bb9c41e5f7c62f07edb930650776331e364aacf79a768f73e16484da2fc7aadd202cc830056f7cd303efa7d694bca7c3fe4a442b2bc31b4efe0aee1f4d4d3365e724b9eda23e57449796873471ca63ae8d1b3392ab5784fdd86ca0e503bfce85b541dce27867c641010d7ac72f2dab96b6a26bbb034c47995a974a2a3bfd861a946342a80a8334f693c357d1bc0cc52d1482f4b7d9fe22aa218416b76a6461aede7a3eca33d647ef9e3c84bc38c97f17fc78c4c282af36b24e12e7066c83be2898e7c79998304354a2dcc0275c6c9f177f773f8e30b906dcc2907d571a19da49148974171c0f330af65b48b349f2ce08ad2fb65c1859329869753e4569316df236537238d499755999ee2d9bf53424bcfe6604050c76c282d593e04763a024a4e948f23da3a91ab9527a65fe1e59135fe0231ddc59f2df29caeb648cacbdee4225d00325898f58931cbc783040b50ad028da2bae84d18b812b1bd5c5983e8cb142bd07df96d5805376713ceac66513cde50ba8941734617e70eeec36e7b314246f26da576a4f524836afc9ebd0558354ebe84b99ba62db94d51e9a5ff59390ce365e27cdc7f8001f24e3fc2348a272020c736ce29097a600317c05d423be63baffd07a3c5f1b022d5633dee270941e0e156839205b0cfd588dfa32c314812be8d03b61371c06b46071c1121a3df8f7fa61e89e7b65c2fe289f8953181d47438ded018eac5bf4dfe2691f8cc37ccfd10a746c49f7ebb193cae633944124911496d475da7168739f6a87b2c37fc1222473e65350e2aea76ce459f0688a71ad79a7d13654c2670c91ab31f0354ab0ff59a5d37c92e52d214ba9a640afdf0dc4f972565b012034d01e474546cb95626105b9dca18d3077e3a1b85c50ba5da47b58361eda0b7d8156d1849b693f772da7a6a0f07056a34b5888db41e6f149a18239124a16b0c250d14f3a107b2062a2cfa44888b5e620d2ae6c8d79914e32d5c62b0f85683d36cea6d2dfe0fafbf8bc4e2684173fef242dcc331efdd244a7455baadc5dec6d902f841395f54cc3f76ff7f9decc0bbd19645868e230046b50296bfca57906bdc5f8e673bf65082b396a7ed4c3896b0ccae6e681d8340503a063b73535a47a3d60dd8b9ab73424529453c610bd45ff6e1c826148d09858dc1b05418247d7bcff2a3e40efe344628ed58ea64505f97cb1ee1e49cca2abe6292dacbfcce6dc1e1a1e87a1f91a3db6874fb410d8329284f958116a2fc25bf9bc64dab44f92afd516a5c87dba124f87ac295f33792c85cccb17b70392ba27506c3edb2e7e492ae305a57781caff378111b064aabcb055d9e7b1668b1d1d99a05da7aad6ed8c0128d90786d79a57e796eaf69311ab16b1fe5e584c6563d0af165991b557815e3c0702395ec1843935092baa8340ef52467fcc0535ac03c1bc3670966e1619a54bb030a8e7cd343da6f2733908d45f3193e19ac2a2eddc58fe81275f7b91990ce68ae9271e30953fb58e959adbc8a7fb72ae5d3a616daad6a97780f81321f963351a56c6f2ce3a29821524c4773ec80f58ee5436c561f3b687d8c49eb5490c85bf019913573797bcb8cb5f50b0696d85c8b1cf3c9c782238dfadae6f47263bfd4cd0ab7dc52068dc4667899b60874de604ea66ec49743c873911335b5a1dd932a059bdda6a7f20761d2e2c7a788bfa1830036bef92fbd84fc957422037f61148d46c64e20a403bb999f69d3b07c851200098ae298b27b8fcc707f54a88f594f7cf1c2f569ce00e068f3799834c81fbafe14697078955195a470b28ed950741c750dd66272d5295ebe9177bf516badbb7167a0a1ebffa2cb0c6422686abb7805f6587c4edbe52069880768b683423024dc2e8ea8a3e2d237e0fb1c016349e238e0a00b38d253e0707f668ca5c05e05434681a636a96e440553678fe73af1ea62a2ec63582bf2e3724c4e701e914ff1c3ba319a21ceddc8b13f40b3125a6558fc18fbd7b5f4053237304e278b21fc60ddfa0bdc6f378b078b43fe761d3b44935c82254dddc7fc48aa944ea1483ce9f8c80532a56656254c6835445d1b4994e4e71bf75f7233c0a888cc87bfa9cb78b77324ac9b06a701e11aff3d43d1426e7384ff875ab3a8ffc28c93983ad751ed38f1f1a7c6604df6ca1518849ae28a40f4f89cc60a6e15f3d136059ce8c80e1f613a575c381d3e8dbe69f92216eb696031601e5e2a01960caaff4929d0aea3ecd50747ab683da70e3a3e08a2037b1fbbef90c5c7f7bc3040970472fa5af8ee0d6d5bf871e3348995c2fcad304626dbc8576ae174af08e55d653f3e5f837888e62731035503b9c5294a531254eb8e4f00539506cfe1aba338b8c336dd35c9dd30bf2e363915dc86f537ff2dd85acf379c73e3c9f6075fbff4804133acbf6feeeac3774a3ae69a2575d2f5b8af3298bc76db3103289eac02525b39c4fc2157fdcdb16c14c708775c89e149bac053d78a818bafb09260d12f0362feac54ac659a3f0f6366274433a968ba9c0f4184d8d81ff6761296e23c6f7ebccf5c509977af2ff33d56bb3a0835285473996f8182733456dd028674ca2da4257f4f84bfd15f155a50a822ea0c4b9172bf2907c4918fe160d1bcc21d57ea8c2146dc5766f50f9fd0b9020f5899f70a7bb364b7659410658d0440bb04fd539e77c8dc9cda3a747e068f9c158ed02898c11fea12903194a534694ae46d2c80f954bf671e4157c912702c67d1de65f12fa6ebe3e4ff748e46529c9356aea1b8308d3231925414968500a524534757982ae8b1bf213257b610c1519961b65853986e3d61e36aca451a89e51b503437cd646ef1996ff35b6919bce821f517f3fc8756a83a486c0ca7ac7e39f9ccabc1c95120e695e1292df89659981ee182c248f016e27ff8826ca63ad709b0a0e57d5e560511d2214060adedc20d503e256ceeb5c5f1a302055c8e7ac1c56259eb192b4a8dc0757737e6dd71caeb41c8f6b081d06ea95a00bc5e2c2267eb080b0f050a58c3cf76d363e169206ff99698780fc58e742c168db7ecc47454a286b64a591c8238e75ebaf086e0ac8b10f1358d8a1877807f65cc0c80f6545c3a8295cedfe560a1a938fb07c15b664ed4d5d5531ac948b1c622d9b353a62bb1f1e9571adb79ac2d5a323d623ae0997ceeadbfc195e0aae649a948e23b36f773f4da5eda3a41c11f73f4200c491d500655031a5d69d71998fd99ffadb1fbbe2138fe42816c61e5b47681aa7ad9faa976d739573d9b6efd937d32192f09581d3661e99b79765ba96669c06b10d18b2d858fc4aef3f0a03ea4a92c236fe05209058a55ea37ec92d2f01d28ff650575076afa1cf8c1bd4fcccfb05bf4c73878980c13fe43a9862be5ae316ac9fc93c2242343bc030fada57941e28d42fb84ef5a70383f3a710adb9e891c33fbc312d2b19f8d98977a8e30ac5772ec00366d3fa9e9f5a4dc6d168f738c10f4e8ae540588ff16d2c3223e417faa18f9188e5964c5fb57dcbc590778e9f73ca48d727aec4e6761d141cdb63717daa17afaf00b55d0f7627df3d3a9b9f5df8255724045bd327dea05c918889c1effa88e71ae957246ff75305e0e003390ed32f922e71f91365dfec5c6f1a129bfb15ce8eef385131d8ad11b64b214a90ff5dc384b742c3dd11ca29cd22263e1d07a164f9111d802193c1a9ebaa8c805c9685948050666606a64968e98bb6fe3e07b4b613e4c6561feab1e511c47d26afd4873c5ca7c4defb6c2671d6d9d311ad317bd7140bedc3b2320d1835d1cacb70f6f879513e0b3e8cdefecd5a9fae28c92ad804d7f898686ca264309f520fe683af8fb30225e98f035446a92f0e03d201e7e112e26d380537d5c09be0db8c478786ac1b416d7a423014f98bde86a5bae788edb0f3a4ef6d137f6baa17101b83338e576ace52ff889ebb4207abb0544b753df88a87ed09c6fef55211b296931e86f97f1bf0e91f31fb61983500b8c18f07f54e90f87933eceab8e8c09d38ba3a89522d782a00ad0651b572430a31193d0e254c21d7101b72e5f30197873b9a4d4b0bc895c1b82668724af9bf5e8ccc3400849906c817b5fb5b542d118d538adda67d3beeeaa340018e8292090647382dfa4f4d24b930175133595e64bced0506f324ca749e8e5a013bd481078d267816049ab05ccd12da12903b966045e979337c6e03d9225e3745b694118dc7ff4cd309befdbc05e73ccfda09750811ba3a300f409c31e718a2bc799a97a3ea8d00ef9fcad071c12270315a851e6d2c15362a70cb94b78d7a88564cfd358aed522bd8da36e385a7da53c84c11502c829b8e006358c5f4a63b705c0fd89d0dae7d01781dbb18f088e75e2300ad0ebe2e04598c6556a240e12f76a8e256d1086327ff830437bac27d2d94dccdac5763887510d24e04d88580fb4fdee384cbd7e71f9a0427fac367fa1311119729fd05d951847f33d892aadc93206cec4cebde214a98e5f84221735426610496837b9de82220c3617c2f4c94339ba5b833c7403233781d999e344ea8cdca06e9d0d692356ac32f92ac8babb34b2be0d7f9f92c98fbec1eb86e46cdab5b913f69ceea24acafbdc0b61db6cf4e5b1def0d76115d38158fc9670ddf55bee08fb47cecf303250bb0a01c7770e67495900e04fa40db1391217641b7ab394a293da3fed1914c6fd44a47d78fa65cd0eb2632970ac8458bdd3c78b34689cfd2d95eebc22738b0d9f0a81aca1fb6f49d26ab859cc6366249fce8248858d18fd9702e709f9cef7a8b7aa513d0da7d463d9c97a899473863caf8f21d86ea7773f83c7a84751a0567171edde0bc66acf5ed5a0a532c03a1b8951f2f0ab27e319096f416a5df01117aad9d10405fdcf04c1db59c9d53cc382156b24beb487dce43c71cbc29cb8ebfa6d58061f7da8960d9a79eb345aefa396dcfe2a2cde70552be00ecbb64c8732141007afdee65cae8c3a414b2efafd131a1fc31c772d2c5eb1c6b525d9390fae1faece6c7ff4d6c2a34bd359803234ebaffb44666cd647754daf757e5c4d7f51553043a1d8ebaf53950dd9890880e36b34c88b9fc85b3ceebfcc4172642c0fec7839056a25cf4c2bf7a1c0d2cec7fa4fba8f733b07aa67b841b33a1b17c50bcb7d8562654068c9b99758be5afe53d1f0cdd0c390bdf191ff1b0cdf3d242b936c16ed146da4790a1930239ca887549b566ed95592dde6e2139aa82e3189e4c11748fbb068fc44f780be8d07b5f4378272966865b4a63400557910fd142ff94c1f60f33dc4b8a3d249fa052a5ee692742eb51b9503fead26c95d28cea11d91c509faaa7007755e149424801de6a81848401bdfdc6ce467a793ec09f9ca2664eae7e86e3a976cf211998d04e21b95e5a1fb2c0a4de332229a0084e2a60d4badfc77f12c37d6d340c376b22d63e3de8c94f626433197b57d021967ff7b57faffb2c0dd9fd486ae895e247b556a8547b1521e3de5762855042c786396f5deedb63d730c54b0d1d02d5e988ea1980c31cde4749ec83b8145e102face59e590edb57cbdbfc7d08aac5ceb23c089479b96fcf817c531f1f95a996d1218c45134a9fb2af1e0a46f6b3984e2f61b218fa918dc573de79a1b0b319182c264835217ba4f332ee84ef0b558188277cfc133af7a7d2cc399d0c17d56f2956f52f8d627c8c1982335080827d9458020e2a4e6712ba46c9dfbf06f6d761a9540627a250df7d67e70abf552c44a7d766e447b1fe94c8f7481c6ce5ae0777f51c6d495c2d29e7caf8f80f95a70957a6987161cf43b9b8d31033eb6c524eb52ce896ed92ba1202df3d2181b589ae3d3541a040c29e51ea4d9b3787837b46b34aa5cabd193d76869b4d5328e755ea4ad73b8b76b41a4cd30178d24da251c56268be85a2209d429fe57022119be8960eab6521b9c72734aef9aa5e2691d0d704414d25e214a1bb5f302ffbf4d064e057a8e0f3161efac0aa0e3ec88cb2cc8a7b8e221c08fdd64f9181d06d0ecc7ae7bbd7aed845fedafd9c4b037e1f7fa2f12bf547dc58d8448c378f86a07f88fc82ce437cd92819a35349785d66e61947efa00bb3bb48830c9359ddb8203dc112351fc43a4b84e1ea95dc6406f8e763b7998899549ff910948159597596369c145994e0e058425469ebeb81e50f49f49ce6ed3972f239fb2c01e5abcd4f980060e0fbbd3fd2540f08835e6a541701cbfdda4a193ef8eb1b95a4fcf047f9261b63d395dda21dfc92ad89604b94116ebbff9941093f364bba29e0b11f6a767803182695dc75de89d2b723691d3ba84308bff42c1762142e7ffef8e6bfdfef65916ca2d3b6df76134d218bc93560235daa7273997ec7f912a3889a96f64aedf66e3dc96541a7ade35b235e1ecf0ef4d5dd96593a223a68acd5c7bb91fdc78d6d6ef06d7a3f5b33afd839864304945888037b146e1228a6d33c755a35e1fefba979d0a9b3a6dceaebc9ecd9c778749cf92992c273572ac99d909661507f190f187d616b398fbbc37238c500cdd1021d382bafc08b208808d49b83cdaded65af065619de5867c9372b9e55326223abde6a4404b26667c4f5074b976d7ff3055b4db1c20c0ccb9a09e16bc1c98d1df1fec826ed20e049f2ea2b1a2c26208a3f32c5e59ed6d557c85aa2e3ef060ea6af57bcd9434cb267184db03694fc7bede0965ee6803b94e3a2670a8ca02941d4873913321d63d8f159d286909d7aa8eed89e3656268261eb815c1fe6ee2ba2b6f454302f0ed9017bcd8359f73d7f8c9e74adb85dbb6c1ee723183309e498276307a66cd35a4a40a01522480de89afe21cf039448b22ac59f1b84062b18696411e09364c3c1f5779bb619b1dfa269d9be152a105802b0a11f09b9ab47d9aad89f00676ba2e81ebc49bab29535501f54d3b9479bb0f91e4f414ea1787c39a9a8f437eb74ee8351763b8c861f49f3bdae7904557525a79926b52b66e463acd234b89f599d2cbdecdb2daf403b76455e075aaaa5993df0c432f9314e0583c4ede12971d9805984b2b8b9581a11be5e5313d964b5e4e45af3db88d6e2baecec7d0eda1a57c8f1159081e01ebca9247e3101365aeb4a011b332298f7ac85d05961ad8c362ee8b9f4a30dbd808496b72e2cd4b50f7d36087fb81b0034bd819c7747c111b8ad2428201c91326863313e0199d32bdcb5d23d8cf31948fc3611729b2cd7d6c9437eb16be3c49db79df2cba671fa1473ef6f9a4c8d7851a0421509ee48c1f7d200185c51bde118f36b4b38235c037094141ea9640a96003cb8504a7c9c1954707c34ea93aa9e81d16a1a76440423529b1bf4de148ea03174cc0753a35e69c400f7f981fff1b4e9bd5e0d6a30a76495d526cab126539a3fdef1b110dcf5c78015a72b4208ffe7030cf601014e1d995058836d90b8f0c0a81e942119acbc4490d78547374b506dea4ac393eb3e1149c23a845a11b2b7e430a1ca42f67b9d7a5d045aa9a24600a4e5b37a0bd75d5b8a5c2a7596f14dbe29bf3dfcf92969441e0a6ef897d082d11fd22dc85566b7a85ef57b6a1eb24a078586582a527c9a122ab54851799e30e0f2d47f7a37ea66ffec8f3b1f404b9616b45b575e1ceb8bcf4cebd2b765c884e9b5f80c372fd4437c7f1e990054e367bcb75f08ad00f61358948ad3223370dadac6a4ec6d4e54ca2779f5195ee0659330c9111e585442ab719317af0634a694c5908ac05f99385d3cd71715140a68d093552188fff77c9ef4fd8fba3ef08851ebea1aedb0c0605b00a577c616005a345ef21710f2a5ab94b80ff0d2714468bee9e982e5bd3735efb7aaa5dd8abf1db95d46be973df62f8ac73b619ed5ce541fb1d64cb3bf0ce2e4f1dd2e67d5006a527d7b80dbcdd8bee475ad69ebf9174924e83dce31d9b75834e97296d6da7891c8dcd8b56ecf7ac77dbc9e5494c52e35a85f41977284533efa067582014c1bd7b4999c2e443b27f05c0a1d0068175e155e4fe966bec12d5347a81a52555c49800c1f7c27fe7b526df1132528214a56c68e326aa4676999ef551d6421fec336006bb5ef38d0f44bb92cf2f2665df1a3dc3621168d4aa1890e688a4f6b5bb2c755fd0e9dd918981a324f6a5c328d49d889a97df750a7b00449aadb359501575b308fea5bb2fe6785585e9f9564f3d700835a38a51dc7d1284b2f098203be9d67752c101e87efc6812b988c7220bb140851335c73dcdafc166b03ea49fa2a3b987d17e646393bc63b4d3a10b2a8036a1c3600d6b037b36c002041a1eff9c0c6dcb414de4cc5b0520aa48d33320a570ab852ea73dee489ff1bab066709c90a535c01ec55e130641ec7230ad08c9bddc79719a1324f5e607bdd8b20ed24d7730acac7fe055b4d7ba2f017654a3927a3c06e1ce48323ca076efad95e930a0b05542bf5cf4b2d142923c4d3bdca0256bdc2e6b4e09b0d9a0bd08ae986695a7f26bf2cd960b3a2e35ddf110ca4ec2bd80357d8915ed67e36617d7a59c1d031ba3454cb4dc46fa08b688fdfee197b56d8e1a5d83437521884bb5debc3fb0d77b8558a677352c90d9824bc06219e5c5bc3ea131078adbb416143f01465902265a0b4d19ad26d21f1cdeac0c21eb06d3abb5fbac34cb899084059020dcf32b257d50ab4d43d711db646e486ead2fb97e0d296d53cea00897b0ee3fdbddea6766530c39545c79f3303a577f4434c61147edba9cc7fd7ec9c698afac3ad21d10724a0ad96f173f87bdee9efe6b9b0e1c3212ff5a101c5d9a57b849075a8467e9d1a46a7cd4cb4f93517ea74b7496bfb5099a9e10b922e1b48ba9f62ad5d5dc99b2944daaaca1aa2acfbf21b34f1ec5e0f2400e4d9cc935e988ebf813993e5f291952a4bd1900201f5eac2ecc91085e266d1d38750532d1a6b224471c2a1bdd2dc44cdc47b0ff7428657bb6d73d113ae1be8d81133d692b19415d93e5e279c8edc1d431cf90c2030314072f291fb0a17bb27f993f1f75678ebc1cf5eb23aa31f3a41f83f3b8099248dc264c5baaa20d6ff2c154f828522f33612b4480541d206189827699aaef8e6eb905fa51495f22b02d57d16051522b57153f62f523c812299b2cede01ba0adc6297c7c9fd5b26637eff8003b393e288909616d50ae8910e7496c845addb28d11c1fe8cf27122a19b565d9c56afca5e1f8782ba55706a503a5ce8b4f880650f104558bc600c6372340b537863b914de88ae6e0d31727b874ed0fc833c0a9d0c0a0ede35c592276488b855e8fb2e0c07a2b9813bec6c651868ccf8dde9467e3ff9a3cc628f0680f6e347391648d1c6d1353e9372ecb5e23fcbaf051ecee9859d1cbba195ce5565e6f4119fd93b16f96ad731bf286d7e83f9f222c2dff26040652f2f7ba1e13a99883a9296bbe5aed7b2240d1eed77764e8c5dbd1e3e8cb42f6f4a526235ca86b30c5e637172e49a3de994a6e9c50f032031bf8d79e6344574b1f3cf18ac7900c9e4e7048f7cf574709a340a333bcf2cbad2e3f452edb277f8f33030b21c30a0637b530e96e58a04f0536e61f75d1d8f6e48146e6c4b0c0d2aff1e2a93027195434b1714b58973eefbfe0f60dc21b16abb22b9dcc9aeb6978f387b254722f9c6a537306db76adb9111f13dc854f3cccaf8bf01748aa5eae5d014664f6ca8bf5b4cf0ffb181285cb763ad79459b4bbe6995d529c81ba64d8ef11361472aed3ccb41f9bd5865cf6e6342e40a8cf5a97ee688c5b4609eeb8fc1751c217e3adea983635df4145a5e12124d7624ab2788b9929aa3981d017d2c6b51a5716958947761461202cfd33d45bfe4dd72249e4427c64c5d4b112386be7a48900ef5613e9ba957f8c2a6993c51dc7a6756a8a43d1dc6ca833a38b76af2fe3b94cb977e589cc4b3525e55901be320962303b8663cbd1e04d2719d431fab4ac7b857ed8dc393ebeab41a32b077af72f60ea28867f2310cd5f950fdad8df7ffeb61f389ad94036e26234a3d3d8c3b85f71d317336f1986e7558ec36e230769d5f9c1473379ecbd7782e5a25266a2ff9a50615acc909d95d00ac23755d04a190ee037114e2c089a14ac9502e42d42e4501a7da92cf8beebdffe86e530b165d1f8e2355f9d79a7c94bae3394a06fc29312b66e141c92740914792d9a5966c53e5d3b229cd9b06ae8d30f1deeaa37a0498f6b669cee7fae30f1d00cd839b8b115f4e69e78d67f973d632d64d5b149eb4f295e108468a841c9ee9121adbbc99567f7ba9198202b2a3245e6ac65013ba105089a4095f8de39a0471698f38c746bf866069f1fd5260a91736e5c3e91793b0365621c44afd289c6cf7121f0938fc092f78a3a5cf35e3285a3962fb0ed3279cb0b655a9623de2e31afe508fb464c208099adbd1242fc651408ccc6d1e0c0ea154b775f519f1b00aea63f8305398fff6039c2ceda60713c7c471cbd0ab7052e34b18f95dd40bc0b111d69db64b254d10419508ce84e99ded294ad5de5411a7378ec32c8203f2aa2136f174628dfafb0580f782af5b61344a3ab88c1b0ad5a6accfde7d0547811cc5a5373503490556ae60939142b9143800d7e23b696fa1927f79adff4237a3d53cf269f59b4d6f36eee54910fc5d861949d44a4714720df08690878c5aeb791893a1b8b1244786812862665170f84b17f439c6485d2e413f2a09b89798ed05a6cdbcd238e52ee392e6ede8eacfea1e3621b5873376d1fc934e041c88f056a5662f4ce0107ecb7d74e0c492e0fdbbb72a5c6fe9da64de24066a77f244a4793ca0975736782c81cee8816f9662ebaef2c7541d7d24f2ee158142a06665fc6e497acafe184f124593cdd18361d378395e928c9ec2fc3176b19d2bd5f5369d0ef847dff07992750b2b9dbb05476a93509a66f1e908f844edffd5764170ba501abfa4a8401459c73c469134ab87da204dd886c01c1fcae782f4e4cef5d323bdb6cb9c27e3dba6dffd8e056b54c39829b346076f708b6d71ec840a457f55209955de6c6209af19ea29de63677677aa945028c6d8e684438dc0adbe773cfaf051008bc5583b8f0a5ce8ceebe45f3389b2cb8569ee16ee9d903c8e32304c17cc64ea1ccd8c23c66a809f48342ee69e12a648fb0e67dd38963460e9341bb8c6380e86015674c58d9bcb5b0bab84c9111924cdbdad9ae73a59eb888b726eb590202ab8307b123008dbeeeff6595834f473cbc8f2a02d9091a4408113058c3869b0a516977392f8228f7df8f1217344a6ed71ae0bc1d864de9612c3e771d9344aea34815ac2c669b05e00d151a6b6b606291b47c613f97d1943c7e964832af2b8d9003e7b524ed979ac3d8133fdc40a978e338a4850d39a66d8e25a12b9fad4b555ae6129199a0f32f4923784e936372cb5e87b4a05d0fe03680fd677aa1da698c036204d16e092ab3fa56762d82032e5502c168b025443a77bbcc034e24f22166d8fe9d8da7e57bffe39b4e0b8c6da53ca0e4805b5e7b1bb1e174629b9d8401b1304cb1645759376a8c58aeb14090589cc8a4d753d2e7278fe4eb40f010deaf48d81f9de02c6a39c8e61ea58cdb4cccf9ea5420fa6c3a467d3d622070d888600dcdf9ffde568f56d53cf13b089a08fbfd83b50346748014348d07055a9b235d79e44707f54fad6934979c97566767737cfc92ac6a190789d84c2a489e34c941ff7dda437ede1b122567b1829e6fc191fe09605496626ce374a354754d20b9ac404c3efa3d7df2fc034e2dccb69fd5bd68752601a4dae219f212bbe4eaa1f906446480fe39245932f97594820937f85e395e68bc47d6fc8891d590652078c36b43993d75392809a67f8cd5fd66dcb52ad9a55be427b8e217190c23050b55851e825e913eeea0103a6b7e22c555e0af6cc2db015ea56812308ae7bb2dc7fc8b228490e23298626a5ee25306cf41d9f2d60d25a14a8c5fd99374f29b6d34447ae71ac6921b500beeee0640772bfc67d2fba31c64d7e0910b63c9c7b4114840c2741f924787c9104cbfc843cd81134f1755c7da75f3dbad2a5b2b1689bb8d7f16d67c169ab2cdc34844c6f7c69eedb2b6195b4a36fe2fe70865074c7e1f507655659472693ba3507bc4b3e27546ad5fe53b7ffefd0ea44648b681f0c0dabde44638807650ff4dedf6bb9a01bc7452577f249405cf49210957578ed4455cc4a8792f1a62933d179e6e4c92104ad61cd5000bfbb0085c82386657f9718db37086beb4ab71b5ec4ed0d385ddad887912b0465d48b9ccf649c3fb5191c78b2c8a157e654e3c9c9bf63bb9295ab406f35ad0df9a4f4d35503789d112ad6586ec00315399f546d2faf70e5a5ac4d91e80b7461cdd15834abc090e5222946ffdbb83138b3303f128ce506d7b3e5cee14c43bff7c93b7622e2c26bfb068265f1983d7a93bb9686769633715d3159e028a417c8d1e2e8209936f99ca3aea04760880b7f4d379f6fa536d2c575ef0d55ed22a9f5a8d69a6098ab499eced2fc6364838e1b550ca97069f213748342309492cd02a8afb8da2e276fa8d4630cab0811dab2e46e851983d12f18dedd72caa2ff26a55b734b44b370dfddbb829c102fc5771f9fac6fa2fae1c2a7df6c8087477d9a66658046148b997991dd6b0884707f2e96c34d07f8bf2e7866f6440e399a53726a6cacf400f8e7c7e6ce8ba25b3b68e5f4d3af13b47a7ea2dcaa115c8dc72e7fe07838f883df992dd35cf7fb1429bae440be888a8f72331bf4c53a1a081370796e7c32bba0c891ace7242330cec33ddcc58ea05b1b6870d0b80e84acccce8174b1f3f9ae6e4652879e6e0e7fdb4e853fa4b82720366e7787006bd4bcf7a68991dbbabe4669eea957613202d1ffef47fda24dc848b01008d3375fe397dd40428c0716242c407cb8b356d67e023bf2f28ce635b96043c7528ea4e3575ad0f2ae52b2e0b63bed07bf1b757af39d4818d9f8ae4305f73197254fb765a625bc25cb52c315149435c95f3463b5e76c192ca4b9bebf843697ccc5953a9a9960ad7bce349e04a661958afd0ff92fa18a119aa4020fbfc35eb18ab4cfb105d94074127a1891d940835860d25b61027cf1bb79914d603f57ec22fa01eda3266f3278f84afe82ba51b814c557ea079e9ccff286bb34b43010f4e138f46106c1393a048fe8a706f03967420acff784d22cd23bbac8d6505791b2858ddf330972030d24e4e3fdb0def3b49e3f78fd1f4fcbc0a9c5f4e586f17ad5ceaf3cbc3e5321eef69b1e7ac76a45750532584823fec0f0aeaea7ed46421662472e74b7a087aad215a96afb3e959afc415fcbcae42a63bc29ef4d04352575fb9455d0584c40c112eb03d89c4ecc14bc287b23069c47682277f551e53665a804530d56102a77797eb81b63b7718d0fb116b6a5b26df13afaf941bf42d0946c474777d24102f6634ba3f15cd6419775f947fddc93b5b891063bd004454794e5a32a063721c6d79410cf8fabc7ac0d06c6a1b9854a8a1cedb891f757c68ecf55d0b4a92c2b4c67fc278c1264b2c16d7c87fa9d7dbdaee98964b9c35ab8582015cded808fcd909b20211a1d181fbc0a364f3e49ca96475d43bbb6e3e81df0e8af1117e8c984899522c2dd80995204c201a064ed5ea4e2006b307c0995f9cbf16378739ad298c109e9d758959d54bdadb66bab8811f65d6c8b9b74b9a26de3b7e4f46a9d8c199e95d20ad41cfa285e8813ec12be3048494df1a994cee3e6369e875da370eecf1281ac2936f0b8b2e24c11e7797a314fa26ac7a9012aa9cdbce3b30f15a9152e20d1672d9f2da287d18451d71cdef36457696e0c5676a133ba116fa47493b0adbc5318e24331eb0ea7d974731eadd31fc69a58fbe682b87a2619f868fd6929a5ae72236f12de050a05707b67a1a2e91f637fcfe82542305b4af3d5df3a5354b4c9e4fc5a292b7487343dd5fbdea9ce2a854c8bfb3795c726220d4428478aa1639f3c48e8e4991789b2ff59ac988ab8c55059c4fb299874f00c2399dc1fdccf714deb002472d2d46fe0802262ba21d879568fa91bca16ff839611ad27e52ba9d9b13c45d8e4c7d4f06a790bdf9da059aa80fbbfed913ab37114e35cd44a2583953c5916e77826350bb9f86bf7312f4835b90722c8ef87cb89cd1dae430a8f12269eea7ae2c37b4ab8dc3441693a8225f1aead329fec473f3c294ec05a8b076ec34c6ca0a38c157346dba54ecadcdde3c17f90f078c9cbe1f35ba6de451889b5205223f6a6a23cd3cdf5f4ac56ee1686af2e1f31bb5d1acca555f5e0668b41c85398bbc6ead6fa4be49884e9632a7c239127582859206356ee474c40bd77b4b48505cdb12b573b8f54937299bf36bca329e98fd64d5339e0fca757aa2aeaec96872ffa538040fd7edf8a5ead80ef2952ac104d9a237cab7a37a5d68178f8548e8f62341df7ab10ab56838a67aab10d2c7db218e32d94321aa183e35a641ee75037a1cb12b39cfb435a7de6760ba56b9ab8a53daab08f21dfb9b06513770f0898e9642a6eedcc2f1657530afd5456708b554fc524c8d684d57c23b1d1eeecafc38651070b0e27fe777f468f2b5f9a39caeda1ed8a65684bc38211c1833993331b7f636e10ecee97c27b8f0f709e5ed6f651139feac2a54a5be2f0a81fd362fcb216b8e04ab4185274c621d434e70b5217ba1bf2be648af5dbc74b2f027a5df5697bca23d97bc33700dca6c5c395e1a1293c1c9596ea66c5cdbe4008ccde1cff47e9cd6bf4354bfaeb4e6e893c4bd2b57519b93479279f1268dc98186e1a02f825621f65411685fdb19f2945bac62264c5d56ddb63e4934df104c5bced049c188684409d7932f8587007670a141e0b6704996198a508273d96c566686f6379357be4bc37be368de98a0f37705de51bf095dd59eb665c1def5292f1f18bec8019eba8525f5b37a345d3cb91dcbc273d69e1d67392d4ca6609d566a8ad1c2dfc80d3ef2c41d135dcb0a96a633b8ca86eb0d98c046eccc4389c8dadb5a822fb827ec22f26ce34271f63e953ba68d61496bed75833999491564315fba9d93d11ff8cc25dc8ac5efb8b2237b487498a0618389174d40e82f5f6e155e4b58491d2c17d35a40df5fbdfe4017b2c46115b2e83d9651d71dcc4e75675ba4f596e34e987c183a94a85c0c5afe0d3eb991b90c9abcc6b86403e48099423fa365cb9b9dc59ce26dc2fcabb92d918df5291d9d5341891dd13804c924c7aabed36faa249d0e97cd77579dc6a9aeddf968e5ca9713b8a93acf5e46e4a30895862a906a50450ce58138e61eaece7e58488e7beb5d4f50e95ea0fcecff024b19c88f535107e98a96fa2104e48ed3fbc4c85cc189bbd2f30226bf0e640e5e0c88407780d8ba549c24ee747ed5b2feddcdc1888415f025feb9d2cfde02d2e0aa022218ed2f12d404202c1cff8399e0e31e69181ed374892ef4cca04bd0c8e95c66f9eee57be1864001d0a21fc1e0bc3f88792bab53f249255a1f1dc514ad4705e2cea422b5f219368d1cae8ad2a064fb66e2153b14eb05f20a62ddd260f228d57c7ae08fad2a7a1d1251903fb16c004eddcb46a40ddb328ce1e49dfb493cc6d5b1a017ee5571bd764cf8b26189f3a231b5720c0177cd972399e1750592f56701b6c45f4125603e78e7909134c9828cd9c0d9baad5714da4dda29f5dd71c502d51285a6374701b123fbcc2761d01bfe9a04938223d688bac5528df51d16f66b07922992cbefc58f45ad62f800fb2382674b03a8c7e9bfab07c31b6f632abde8647553273a513674f8ccb29d7b57f1e7a61ad2c05ed288afb0283401bd944f80af1978b8d6da682c8e01b08813d581973a25af77d83d634ad6a1be9ce31db49639a3204f75d36dc8da9b7cb1d3073365ec5683cb2f1913b5636a31d78e00160001a2100f37a93aa866eb42fea2eba2efd28a1545c8344319e8a6cf18ad000c2e270d98eb107f3b88a0b86ad380403d03dff1438e72411dea55c3c22a3b315309ddfac4bfefaf5b8be37597a6796f8865a263ea796034f4dc82eb04e393a172118749cc0043e19c102c573f4a7d8e6114fbd0458a5f0a73142c9e16ab502579754ce3ba034c21308c8cfe46aaa76d727e3a7b2b1d6a1bf8737ea8e306d8a29ec3902de356c65986ee7b7fd142fa6abb0d2c516238b39e79db5c33235f46c65494ac5eb393aad0a39c106cf635446e0ef04f5402159de77ab3a8291cf05d6176b597d70e14438c65a706beb1712654b72f4475458d923ae2e9bd008c16c4b9709c1f0990f5ccca9d43e7720ac4183de0ff2788064799a642c2b8628c9387d74bf21677bea1c985d846d4421390a542516b58f6deb3545f80238778a024bda4a13639881e4ac4355465de4df05cdb8851d83c1f7d64c0103b928d1724f2090cef3259523694217e761e1c11c032c3f9a0690c271ad659cd65165808f3eab8b70add79bd99566171737845326b3300c739cf14cde826923669fded1159de22fb04f78f48dae12b3b808b199313d2913d31c0be0818f449c45889bbf23eddfa31f0a2111eca305a829e7c1ac70949446b4a7557ae934914d70a0a730c39f1839b6972d6d8e2f4926532076f615d8e4d4e4b93203b7deef05a04df425b0ea81be30bc36897510e9983f85c4276cd2dbaaffd4f1315dd67fabf7a5d65dedb6e9cdf15507127a380ca914f72f06716e4e66ecd8a42ee4a47400d37a95c8e9ec00b7f1f4064866cc876a89f056b4cb503e842f4160ba43fdde87fb600db371ee1fa173d096d0194b5b083dae28cb3cecdaf4092282bc956bd848eac9185a6bb437b5a33d78867a1fdb568d05c0c70bb1a3c968a64d8189ad2103795b1b96221c198074f99fcbf9025fd2a63112800ecd2e584803a6a5d2f2f11707e457ebff67fe34de15db6e5a2876a49e9151bdfa6fa1be30dc9e39073f75804f4a6b20ef970905f05113078ee843513461fde189661682cced8137c8340b1755e05eda33a7967d86b0763f3c8d3ce78f603878c9b0b91f65cdb72bc2c50cf39369c592d015645a50fa4b89d912c4fbbace22fe352cd25779847f0a214c72cefa99b7e440f7105303db00d6e68e05b48acd977c8a8f3ef41c8ef43b608cf2e3df609d47f5ec981eb693dd474c51e704286f8934bd78c2081489ec594b7b6d81a1842e48e73d8002e91c944731b2f2ac68af4919b18f563a21e0f3890cfdac341d50c6466e9683a7c323703696876725b087241aaa49d3acb18440a6aa4a67a56bd39482901f37a6871e09ae6df3537be286101e3bdbd471fa9598aa659b82111bcc8ddeac9e72660b3ea6f585b84a72f0e66d791d4c645732793489aeee2d1ded5367f463bf21728b77eae5350134d9f3dd11e3bbcfacb71f1b2db71db554ae37b4cb1754da37792d6062fbffb110975c7ed0e47000b8eb26a5498abf5c6f679b66b9a9796fa404795748667b68349312db70f4852a46f1f710f7fc5510262afa33dc46d1b8b1d3caddafd47324bcc294bf436e85105ec13054394bc2dad506ac682f5232e58b883dd9fe71717fb8f8c3f001629e1f6eb82c6fafa1b046aa333a94afa9bd0ddd9f28764dc7e5dc47beb1631f3c89a42180a4270a94bf50a354052fdeb530e5a29d9491e9ad20227a41433f6fac3f6f24443b09db69a2693a4da6ef8820921892ce041622c3fef32796268a9f35fed869d73ce4c4d10325a81c76d3897325d675d2af73dfd03e801e82ff6cf59927de58ff2739e3fd1282ed0a50447248e43c4da2e2b94083a60413152f1f933a7f43823797b0fe17808d96384448c5c905b415ec35de8c9863972fd2e12918488a053d585b81cfd4a1ba5bf5c92ceb4e83e96ae5962225d7281bf17707f1d03a3999caf3a5777a49685b9538de24fe812208e19af4fd7e1e00641288bcdfca2fc3fc7b885cb5849356fc514fcd71159dd741e09daa01aadcc2ca4c6109e292e8888fa2646c46cd11191aff0e95e0c599bf994a47a5a6f4bf699f0c013b9ecc38a7647726a466d69dcf0ac3009b3f8ef92fe51d118ce3826a37054040c0a0d177c3a02eca4df14d91a0873539357332ab0d9398e2571df9031d0267d1660803cbc8bd067ce2f2844353eae1f86fb561bba97b972aaefe064e7d0976d41a4105c26fb40d670e87933404b200a26bd2b94f35ccbf918e1145b8018e1a2a330ea67d0ab58331be213038053192b996ac4675023b146322c1327a3b7e38d848d16a0280c3db73f26cc6040b1f49dc06c2d495cdc31ba3d0e1147c3465d6b1903f6e82665194f1543070458fe59f8d9a63849fd58a0de38ecf4a7b45867d3e79313a0d6b3966d3be70cb756ae96f17e4ebc19ebd3d9f2252655d832f7cc5d8ab927a96835144e95322100ac39841eadc36ee915bf0a63f3753776d1801c2068d2138515b28369d3b5c9c77c315031ab777c35d49e004db0d6ab735da3aa79533f34fae4738ea2076700556e58e6f8054b0c50003afcac854e02a6f06c9892d6b15510abdb1dc47ee6cb471a366deb11ad4f51537ff5a18020e3021ac00a118b9ecbbdc75cf3868c25bb5e37ec3df103fd137b6192e8fe10f52aa375f1242c72d7f2b7ab6421891bd89ea68459aeb6ad28e113b1a7366123b81c6b8d885865f6e02bd5ca66d66814c22150eaa6bd26f323fe63208606d7058ea725c1996d2e6045e31f2cfb00d0c132dfde0f9f51bbbb2afb22fea6ae7313cdd2a5388ab477b606e10cc3ac2f7efc8ab60b15295d531532b7565546eff3bf43f90b938f937b6b3878977daa5b6c176c2b21e4bd86060ff5b79206b7034c8cd57e0b7e9af2e9c1d348a68e11a3355a9cebcb1e98de17f573c1f1bb34d467fe786952b7126f1f491e1fae082b9699918f23a3d3864eb9a589aa61d17926fd75e7a921a898601ba4cba9434ce6613032627ad181b228c2cc6f3d9476504fe12f7a75c1f51cf6af2be557ebd0938407243417aa74ce961e93aa4768778595fc31008dae543560b1af28d9b57eeca04ea3200edf49c7962f8cdd7e9c4ceabe2030d9f6274e8687c7b6a4afc673b811b11886efdac147a0b0e32d41d112d2653d59b43576995253ecb1aa76f89ac3449b92eefbd818e8a77aa3aa843764aeca7a483c7422d44858335616a09c402b367f958dec9da3f8fb9cc66ac41f9bb0fae0dd079b1741fa7dcd20a3c048d7a04040541a209d92594585ecc424452587c06b076905a2c5e7b0314db3e87138f5a311dc0a2d197693cd729be776051ceaebf4bc1781ca1e25d0e6af30a9c2d4ccdae13764b2f3021ffb9324c7f72df21c858858952621f4b58e2589a8818ea5611f88962668a98d9ee56f0528656ec7fbf4789c8806b9558c8f76718094b1cda5d655cb0888f537686cae01ff933a3b34b5a4c48ea6be382b1ff42db73bcc05e615d5622891709cbf1ac8dbecbc288c136bbca6b3390dc2cbb83a22d00ae12835916a4a8f707b98ab3c6389c5bd08b3349fac013a36bc722b620e59fbb0401bb34b68ffed6ef1e0a0b3b8eb6e49d8f94ebc7d6e05394407c318aa91afe8e0a561f608cdb75ad450d977a505d1fc16339aaa4aa0048dc23d229f08905d7fd1e2392a</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Donate $3 or subscribe $2/month for password access to exclusive posts">Donate $3 or subscribe $2/month for password access to exclusive posts</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Take your Unreal movie renders to the next level with our tutorial on custom MRQ executors. Learn how to optimize your rendering workflow, improve efficiency, and achieve better results with our step-by-step guide. Whether you&#39;re a beginner or an advanced user, our practical examples and best practices will help you master the techniques needed to create stunning movie renders using Unreal and custom MRQ executors.</summary>
    
    
    
    <category term="unreal" scheme="https://www.xingyulei.com/categories/unreal/"/>
    
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
    <category term="rendering" scheme="https://www.xingyulei.com/tags/rendering/"/>
    
    <category term="python" scheme="https://www.xingyulei.com/tags/python/"/>
    
    <category term="sequencer" scheme="https://www.xingyulei.com/tags/sequencer/"/>
    
  </entry>
  
  <entry>
    <title>Python REST API: Build and Deploy Custom Server</title>
    <link href="https://www.xingyulei.com/post/py-http-server/"/>
    <id>https://www.xingyulei.com/post/py-http-server/</id>
    <published>2023-01-06T16:00:00.000Z</published>
    <updated>2023-11-19T00:15:45.417Z</updated>
    
    <content type="html"><![CDATA[<h2 id="http-server-basic"><a class="markdownIt-Anchor" href="#http-server-basic"></a> HTTP Server Basic</h2><p>In a client-server model, HTTP server plays the role of a server and implementsusing HTTP/HTTPS network protocol. HTTP runs on a socket and uses TCP/IP connection,but is a higher-level connection that takes care of the send and receive processin a predefined format.</p><h3 id="request-and-respond"><a class="markdownIt-Anchor" href="#request-and-respond"></a> Request and Respond</h3><p>An HTTP request contains a URL, a method, a header and a body;“POST” and “GET” are the two most common request methods:</p><ul><li><strong>&quot;POST&quot;</strong>: from the client submits information to the server</li><li><strong>&quot;GET&quot;</strong>: from the client expect information back from the server</li></ul><p>A response is what the client receives from the server in answer to the HTTPrequest. An HTTP response contains a status code, a header and a body</p><h3 id="rest-api"><a class="markdownIt-Anchor" href="#rest-api"></a> Rest API</h3><p>A REST (also known as RESTful) API is a web API that conforms to the constraints ofREST (representational state transfer) architectural style and allows for interaction with RESTful web services.</p><p>When a client request is made via a RESTful API,it transfers a representation of the state of the resource to the requester or endpoint.</p><p>The touch point of this request/communication is the endpoint. Each endpoint isthe location (URL of a service) from which APIs can access the resources they need to carry out theirfunction. The resource or information is delivered in one of several formats via HTTP(JSON being the most popular).</p><h2 id="using-httpserver"><a class="markdownIt-Anchor" href="#using-httpserver"></a> Using <code>http.server</code></h2><p>To build a simple HTTP Server with “POST” and “GET” methods:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> http.server <span class="keyword">import</span> BaseHTTPRequestHandler, HTTPServer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LocalData</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    records = &#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HTTPRequestHandler</span>(<span class="title class_ inherited__">BaseHTTPRequestHandler</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">do_POST</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> re.search(<span class="string">&#x27;/api/post/*&#x27;</span>, self.path):</span><br><span class="line">            length = <span class="built_in">int</span>(self.headers.get(<span class="string">&#x27;content-length&#x27;</span>))</span><br><span class="line">            data = self.rfile.read(length).decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            record_id = self.path.split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line">            LocalData.records[record_id] = data</span><br><span class="line"></span><br><span class="line">            logging.info(<span class="string">&quot;add record %s: %s&quot;</span>, record_id, data)</span><br><span class="line">            self.send_response(<span class="number">200</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.send_response(<span class="number">403</span>)</span><br><span class="line">        self.end_headers()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">do_GET</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> re.search(<span class="string">&#x27;/api/get/*&#x27;</span>, self.path):</span><br><span class="line">            record_id = self.path.split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> record_id <span class="keyword">in</span> LocalData.records:</span><br><span class="line">                self.send_response(<span class="number">200</span>)</span><br><span class="line">                self.send_header(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/json&#x27;</span>)</span><br><span class="line">                self.end_headers()</span><br><span class="line"></span><br><span class="line">                <span class="comment"># Return json, even though it came in as POST URL params</span></span><br><span class="line">                data = json.dumps(LocalData.records[record_id]).encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">                logging.info(<span class="string">&quot;get record %s: %s&quot;</span>, record_id, data)</span><br><span class="line">                self.wfile.write(data)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.send_response(<span class="number">404</span>, <span class="string">&#x27;Not Found: record does not exist&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.send_response(<span class="number">403</span>)</span><br><span class="line">        self.end_headers()</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    server = HTTPServer((<span class="string">&#x27;localhost&#x27;</span>, <span class="number">8000</span>), HTTPRequestHandler)</span><br><span class="line">    logging.info(<span class="string">&#x27;Starting httpd...\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        server.serve_forever()</span><br><span class="line">    <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    server.server_close()</span><br><span class="line">    logging.info(<span class="string">&#x27;Stopping httpd...\n&#x27;</span>)</span><br></pre></td></tr></table></figure><p>On the client side, we’re utilizing the <code>requests</code> module for sending requests:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="built_in">id</span> = <span class="string">&#x27;test&#x27;</span></span><br><span class="line">data = &#123;<span class="string">&#x27;key&#x27;</span>: <span class="string">&#x27;value&#x27;</span>&#125;</span><br><span class="line">r = requests.post(<span class="string">&#x27;http://localhost:8000/api/post/&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>), json=data)</span><br></pre></td></tr></table></figure><p>Here, we send a “POST” method request to access the <code>http://localhost:8000/api/post</code>endpoint which added a dictionarytype data payload. The data has an id of <code>test</code> and content of <code>&#123;'key': 'value'&#125;</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">id</span> = <span class="string">&#x27;test&#x27;</span></span><br><span class="line">r = requests.get(<span class="string">&#x27;http://localhost:8000/api/get/&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>))</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>Then, we can send a “GET” request to retrieve the data we just addedby accessing another endpoint <code>http://localhost:8000/api/get/</code>;this can be done either through a browser with the corresponding id(<a href="http://localhost:8000/api/get/test">http://localhost:8000/api/get/test</a>), or by sending an HTTP “GET” request using<code>requests</code> module.</p><p>The response from the server gives the output: <code>&#123;'key': 'value'&#125;</code></p><p><img src="https://i.imgur.com/qNFlDFS.jpg" alt="result" /></p><h2 id="using-flask"><a class="markdownIt-Anchor" href="#using-flask"></a> Using <code>flask</code></h2><blockquote><p>Flask is a micro web framework written in Python</p></blockquote><p>I am going to re-created the HTTP server above with “POST” and “GET” endpointsusing <code>flask</code>, this is much simpler:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LocalData</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    records = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># POST endpoint</span></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&#x27;/api/post/&lt;id&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_entry</span>(<span class="params"><span class="built_in">id</span></span>):</span><br><span class="line">    data = request.get_json(force=<span class="literal">True</span>)</span><br><span class="line">    LocalData.records[<span class="built_in">id</span>] = data</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># GET endpoint</span></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&#x27;/api/get/&lt;id&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_record</span>(<span class="params"><span class="built_in">id</span></span>):</span><br><span class="line">    <span class="keyword">return</span> LocalData.records[<span class="built_in">id</span>]</span><br></pre></td></tr></table></figure><p>Now to run the server, we run the following command <code>flask --app &lt;appName.py&gt; run</code>;Additional <code>--debug</code> flag can be added before <code>run</code> to auto reload the latest scriptchange when debugging.</p><h3 id="rendering-webpage"><a class="markdownIt-Anchor" href="#rendering-webpage"></a> Rendering Webpage</h3><p>One of the common cases, when hosting an HTML server, is that users have the abilityaccess our endpoint with their browser. Instead of spitting out raw data, we oftenwant to format it to a nice HTML page.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index_page</span>():</span><br><span class="line">    datas = get_all_local_datas()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> datas:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Welcome!&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>, jsons=datas)</span><br></pre></td></tr></table></figure><p>Here we are specifying an ‘index.html’ landing page using the root path (’’),then a dummpy function that gets all the data from our storage (e.g. database).</p><p><strong>For HTML</strong></p><ul><li><p>We can pass in the datas to a variable named <code>json</code> which is defined in the .html:</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;jsons&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Note: it is required that the .html files rest in a folder called “templates”,unless we overwrite that configuration.</p></li></ul><p><strong>For JavaScript</strong></p><ul><li><p>In javascript, we need to use a <code>jinja2</code> filter:</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    myfunc( </span><span class="template-variable">&#123;&#123;<span class="name">jsons</span>|tojson|safe&#125;&#125;</span><span class="language-xml"> );</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="linking-external-files"><a class="markdownIt-Anchor" href="#linking-external-files"></a> Linking External Files</h3><p>If you would like to include additional external <code>.js</code> or <code>.css</code> files,they all need to rest in a folder called “static”.</p><p>Linking the files can then be done as such:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&#123;&#123;url_for(</span>&#x27;<span class="attr">static</span>&#x27;, <span class="attr">filename</span>=<span class="string">&quot;myJS.js&quot;</span>)&#125;&#125;&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>= <span class="string">&#123;&#123;url_for(</span>&#x27;<span class="attr">static</span>&#x27;, <span class="attr">filename</span>=<span class="string">&quot;main.css&quot;</span>)&#125;&#125;&gt;</span></span><br></pre></td></tr></table></figure><h2 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h2><p><a href="https://www.cloudflare.com/learning/ddos/glossary/hypertext-transfer-protocol-http/">Cloud Flare - What is HTTP?</a></p><p><a href="https://www.redhat.com/en/topics/api/what-is-a-rest-api">Red Hat - What is a REST API</a></p><p><a href="https://flask.palletsprojects.com/en/2.2.x/">Flask</a></p><p><a href="https://www.linode.com/docs/guides/create-restful-api-using-python-and-flask/">Linode - Create a RESTful API Using Python and Flask</a></p><p><a href="https://stackoverflow.com/questions/15108139/">Stack Overflow - Difference between socket programing and http programming</a></p><p><a href="https://stackoverflow.com/questions/45149420">Stack Overflow - Pass Variable from python (flask) to HTML in render template?</a></p><p><a href="https://gist.github.com/dfrankow/f91aefd683ece8e696c26e183d696c29">GitHub Gist - simple_server.py by dfrankow</a></p>]]></content>
    
    
    <summary type="html">Learn how to build and deploy your own custom Python REST API server with our comprehensive tutorial. Our step-by-step guide provides practical examples and best practices for creating a secure, scalable, and reliable server that meets your specific needs. Whether you&#39;re a beginner or an advanced user, our tutorial will help you master the techniques needed to build and deploy your own custom Python REST API server</summary>
    
    
    
    <category term="windows" scheme="https://www.xingyulei.com/categories/windows/"/>
    
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
    <category term="python" scheme="https://www.xingyulei.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Unreal Rendering Workflow with Python Automation</title>
    <link href="https://www.xingyulei.com/post/ue-rendering-basic/"/>
    <id>https://www.xingyulei.com/post/ue-rendering-basic/</id>
    <published>2022-12-02T16:00:00.000Z</published>
    <updated>2023-11-17T19:25:57.213Z</updated>
    
    <content type="html"><![CDATA[<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>In this post, I’ll cover Python automation using Movie Render Queue (MRQ) andMovie Scene Capture.</p><p>I’ll go over how to make Python tools to run in the Unreal Editor as wellas outside Unreal through command line; How to change settings and add call backs.</p><p>The MRQ is more preferred over Movie Scene Capture as it’s much more customizable,both in supported render setting and in automation (In a later post you’ll see).</p><h2 id="movie-render-queue"><a class="markdownIt-Anchor" href="#movie-render-queue"></a> Movie Render Queue</h2><blockquote><p>Movie Render Queue is a successor to the Sequencer Render Movie feature, and is built for higher quality, easier integration into production pipelines, and user extensibility. With Movie Render Queue you can accumulate multiple render samples together to produce the final output frame, which allows for higher quality anti-aliasing, radial motion blur, and reduced noise in ray tracing.</p></blockquote><p>The Movie Render Queue (MRQ) is the latest and the greatest from Unreal forRendering out cinematic, over the legacy Movie Scene Capture Tool.</p><p><img src="https://docs.unrealengine.com/4.26/Images/AnimatingObjects/Sequencer/Workflow/RenderAndExport/HighQualityMediaExport/settings2.webp" alt="MRQ" /></p><h3 id="movie-render-queue-in-editor"><a class="markdownIt-Anchor" href="#movie-render-queue-in-editor"></a> Movie Render Queue in Editor</h3><p>Here we can find the full example from Epic:<code>Engine\Plugins\MovieScene\MovieRenderPipeline\Content\Python\MoviePipelineEditorExample.py</code></p><h4 id="bare-minimal"><a class="markdownIt-Anchor" href="#bare-minimal"></a> Bare Minimal</h4><p>Through Unreal Editor, we use a render executor called PlayInEditor (PIE) executor.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">movie_queue_render</span>(<span class="params">u_level_file, u_level_seq_file, u_preset_file</span>):</span><br><span class="line">    subsystem = unreal.get_editor_subsystem(unreal.MoviePipelineQueueSubsystem)</span><br><span class="line">    queue = subsystem.get_queue()</span><br><span class="line">    executor = unreal.MoviePipelinePIEExecutor()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># config render job with movie pipeline config</span></span><br><span class="line">    job = queue.allocate_new_job(unreal.MoviePipelineExecutorJob)</span><br><span class="line">    job.job_name = <span class="string">&#x27;test&#x27;</span></span><br><span class="line">    job.<span class="built_in">map</span> = unreal.SoftObjectPath(u_level_file)</span><br><span class="line">    job.sequence = unreal.SoftObjectPath(u_level_seq_file)</span><br><span class="line">    preset = unreal.EditorAssetLibrary.find_asset_data(u_preset_file).get_asset()</span><br><span class="line">    job.set_configuration(preset)</span><br><span class="line">    </span><br><span class="line">    subsystem.render_queue_with_executor_instance(executor)</span><br></pre></td></tr></table></figure><h4 id="override-settings"><a class="markdownIt-Anchor" href="#override-settings"></a> Override Settings</h4><p>All the render settings are stored as an <code>unreal.MoviePipelineMasterConfig</code> object.</p><p>It has sub setting components class <code>unreal.MoviePipeline</code>, for example: <code>unreal.MoviePipelineOutputSetting</code>,<code>unreal.MoviePipelineCameraSetting</code>, <code>unreal.MoviePipelineColorSetting</code> and etc</p><p>Each Setting class then have properties, for <code>unreal.MoviePipelineOutputSetting</code>, it hasproperties such as:</p><ul><li><code>use_custom_frame_rate</code></li><li><code>frame_number_offset</code></li><li><code>output_directory</code></li><li>etc</li></ul><p>All of which can be modified, attached, and removed.</p><p>Example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uPreset = unreal.MoviePipelineMasterConfig()</span><br><span class="line">uSetting = uPreset.find_setting_by_class(unreal.MoviePipelineOutputSetting)</span><br><span class="line">uSetting.output_resolution = unreal.IntPoint(<span class="number">1280</span>, <span class="number">720</span>)</span><br></pre></td></tr></table></figure><h4 id="callback"><a class="markdownIt-Anchor" href="#callback"></a> Callback</h4><p>Callbacks can be added upon each Shot, Job, Queue Finished. The callback functionhas to be kept as global variable here to prevent it being destroyed by GC.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">render_finished</span>(<span class="params">params</span>):</span><br><span class="line">    unreal.log(params)</span><br><span class="line"></span><br><span class="line">executor.on_individual_job_work_finished_delegate.add_callable_unique(render_finished)</span><br></pre></td></tr></table></figure><p>or.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">render_errored</span>(<span class="params">executor, pipeline, is_fatal, error_msg</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">ERROR_CALLBACK = unreal.OnMoviePipelineExecutorErrored()</span><br><span class="line">ERROR_CALLBACK.add_callable(render_errored)</span><br><span class="line">exector.on_executor_errored_delegate = ERROR_CALLBACK</span><br></pre></td></tr></table></figure><p>See my convenient class for PIE here: <a href="https://github.com/leixingyu/unrealUtil/blob/master/render/render.py">https://github.com/leixingyu/unrealUtil/blob/master/render/render.py</a></p><h3 id="movie-render-queue-commandline"><a class="markdownIt-Anchor" href="#movie-render-queue-commandline"></a> Movie Render Queue Commandline</h3><p>The default MRQ command line offers customization by usingeither an Unreal Render Preset/Config asset or an Unreal Render Queue asset.</p><p>Since there are so many settings in the MRQ we can modify, it’s hard to exposeall of the little details through command line. If you do wish to do so, I havean entire blog about <a href="https://www.xingyulei.com/post/ue-rendering-custom-executor">Unreal MRQ Custom Executor</a>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">movie_queue_render</span>(<span class="params">u_level_file, u_level_seq_file, u_preset_file</span>):</span><br><span class="line">    command = [</span><br><span class="line">        UNREAL_EXE,</span><br><span class="line">        U_PROJECT,</span><br><span class="line">        u_level_file,</span><br><span class="line"></span><br><span class="line">        <span class="comment"># required</span></span><br><span class="line">        <span class="string">&quot;-LevelSequence=%s&quot;</span> % u_level_seq_file,  <span class="comment"># The sequence to render</span></span><br><span class="line">        <span class="string">&quot;-MoviePipelineConfig=\&quot;%s\&quot;&quot;</span> % u_preset_file,</span><br><span class="line">        <span class="string">&quot;-game&quot;</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment"># options</span></span><br><span class="line">        <span class="string">&quot;-NoLoadingScreen&quot;</span>,</span><br><span class="line">        <span class="string">&quot;-log&quot;</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment"># window size not resolution</span></span><br><span class="line">        <span class="string">&quot;-Windowed&quot;</span>,</span><br><span class="line">        <span class="string">&quot;-ResX=800&quot;</span>,</span><br><span class="line">        <span class="string">&quot;-ResY=600&quot;</span>,</span><br><span class="line">    ]</span><br><span class="line">    proc = subprocess.Popen(command)</span><br><span class="line">    <span class="keyword">return</span> proc.communicate()</span><br></pre></td></tr></table></figure><h2 id="movie-scene-capture"><a class="markdownIt-Anchor" href="#movie-scene-capture"></a> Movie Scene Capture</h2><p><strong>Now this part may or may not be relevant anymore as many people treats theMovie Scene Capture as deprecated</strong>. But I thought I write it down anyway,as it might be helpful as a comparison to MRQ</p><h3 id="movie-scene-capture-editor"><a class="markdownIt-Anchor" href="#movie-scene-capture-editor"></a> Movie Scene Capture Editor</h3><p><img src="https://docs.unrealengine.com/4.27/Images/AnimatingObjects/Sequencer/Overview/RenderMovieSettings/MovieSettingsWindow.webp" alt="MSC" /></p><p>Here we can find an example from Epic:</p><p><code>Engine\Plugins\MovieScene\SequencerScripting\Content\Python\sequencer_examples.py</code></p><h4 id="bare-minimal-2"><a class="markdownIt-Anchor" href="#bare-minimal-2"></a> Bare Minimal</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> unreal</span><br><span class="line">capture = unreal.AutomatedLevelSequenceCapture()</span><br><span class="line">capture.level_sequence_asset = unreal.SoftObjectPath(sequencer_path)</span><br><span class="line">unreal.SequencerTools.render_movie(capture, unreal.OnRenderMovieStopped())</span><br></pre></td></tr></table></figure><p>In this example, we only need to supply the path to the Unreal sequencer asset.</p><p>Note that the render happens in the current level, so make sure to pre-load the mapbefore running the Movie Scene Capture.</p><h4 id="callback-2"><a class="markdownIt-Anchor" href="#callback-2"></a> Callback</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">on_render_movie_finished</span>(<span class="params">success</span>):</span><br><span class="line">unreal.log(<span class="string">&quot;Movie has finished rendering&quot;</span>)</span><br><span class="line"></span><br><span class="line">on_finished_callback = unreal.OnRenderMovieStopped()</span><br><span class="line">on_finished_callback.bind_callable(on_render_movie_finished)</span><br></pre></td></tr></table></figure><p>Note the <code>on_finished_callback</code> is a global variable so it is persistent and won’tget destroyed during GC.</p><p>The next step is to register the callback function:<code>unreal.SequencerTools.render_movie(capture_settings, unreal.OnRenderMovieStopped())</code></p><h4 id="override-setting"><a class="markdownIt-Anchor" href="#override-setting"></a> Override Setting</h4><p>The settings can be modified through class <a href="https://docs.unrealengine.com/5.0/en-US/PythonAPI/class/MovieSceneCaptureSettings.html#unreal.MovieSceneCaptureSettings"><code>unreal.MovieSceneCaptureSettings</code></a></p><p>Example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">capture = unreal.AutomatedLevelSequenceCapture()</span><br><span class="line">setting = capture.settings</span><br><span class="line">setting.output_directory = unreal.DirectoryPath(export_path)</span><br></pre></td></tr></table></figure><h3 id="movie-scene-capture-commandline"><a class="markdownIt-Anchor" href="#movie-scene-capture-commandline"></a> Movie Scene Capture Commandline</h3><p>A lot of custom flags can be specified through the command line, see the full listof control commands: <a href="https://docs.unrealengine.com/4.26/en-US/AnimatingObjects/Sequencer/Workflow/RenderAndExport/RenderingCmdLine/">Command Line Arguments for Rendering Movies</a></p><p>Console variables can even be set through command line which is decent.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">movie_scene_capture</span>(<span class="params">u_level_file, u_level_seq_file, output_folder</span>):</span><br><span class="line">    command = [</span><br><span class="line">        UNREAL_EXE,</span><br><span class="line">        U_PROJECT,</span><br><span class="line">        u_level_file,</span><br><span class="line"></span><br><span class="line">        <span class="comment"># required</span></span><br><span class="line">        <span class="string">&quot;-LevelSequence=%s&quot;</span> % u_level_seq_file,  <span class="comment"># The sequence to render</span></span><br><span class="line">        <span class="string">&quot;-MovieSceneCaptureType=/Script/MovieSceneCapture.AutomatedLevelSequenceCapture&quot;</span>,</span><br><span class="line">        <span class="string">&quot;-NoLoadingScreen&quot;</span>,</span><br><span class="line">        <span class="string">&quot;-game&quot;</span>,</span><br><span class="line">        <span class="string">&quot;-log&quot;</span>,</span><br><span class="line">        <span class="string">&quot;-MovieCinematicMode=yes&quot;</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment"># general property</span></span><br><span class="line">        <span class="string">&quot;-MovieFolder=%s&quot;</span> % output_folder,</span><br><span class="line"></span><br><span class="line">        <span class="comment"># if doing .avi</span></span><br><span class="line">        <span class="string">&quot;-MovieFormat=Video&quot;</span>,  <span class="comment"># JPG, BMP, PNG or Video</span></span><br><span class="line">        <span class="string">&quot;-MovieFrameRate=24&quot;</span>,</span><br><span class="line">        <span class="string">&quot;-MovieQuality=100&quot;</span>,  <span class="comment"># compression quality in percentage</span></span><br><span class="line">        <span class="string">&quot;-Windowed&quot;</span>,</span><br><span class="line">        <span class="string">&quot;-ResX=1920&quot;</span>,</span><br><span class="line">        <span class="string">&quot;-ResY=1080&quot;</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment"># other</span></span><br><span class="line">        <span class="string">&quot;-NoTextureStreaming&quot;</span>,  <span class="comment"># for final render</span></span><br><span class="line">        <span class="string">&quot;-NoScreenMessages&quot;</span>,  <span class="comment"># no screen debug message</span></span><br><span class="line">    ]</span><br><span class="line">    proc = subprocess.Popen(command)</span><br><span class="line">    <span class="keyword">return</span> proc.communicate()</span><br></pre></td></tr></table></figure><h2 id="additional-references"><a class="markdownIt-Anchor" href="#additional-references"></a> Additional References</h2><p><a href="https://forums.unrealengine.com/t/unable-to-execute-moviepipelinequeue-from-python/467250/5">Unreal Forums - Unable to execute MoviePipelineQueue from Python</a></p>]]></content>
    
    
    <summary type="html">Discover how to boost your Unreal rendering workflow with Python automation using our comprehensive tutorial. Our guide provides practical examples and best practices for optimizing your production pipeline, automating tedious tasks, and improving your overall efficiency. Whether you&#39;re a beginner or an advanced user, our step-by-step tutorial will help you master the techniques needed to take your Unreal rendering workflow to the next level with Python automation</summary>
    
    
    
    <category term="unreal" scheme="https://www.xingyulei.com/categories/unreal/"/>
    
    
    <category term="pipeline" scheme="https://www.xingyulei.com/tags/pipeline/"/>
    
    <category term="rendering" scheme="https://www.xingyulei.com/tags/rendering/"/>
    
    <category term="python" scheme="https://www.xingyulei.com/tags/python/"/>
    
    <category term="sequencer" scheme="https://www.xingyulei.com/tags/sequencer/"/>
    
  </entry>
  
  <entry>
    <title>Unreal Python Command Line: 3 Easy Methods</title>
    <link href="https://www.xingyulei.com/post/ue-commandline-python/"/>
    <id>https://www.xingyulei.com/post/ue-commandline-python/</id>
    <published>2022-11-05T16:00:00.000Z</published>
    <updated>2023-11-17T19:11:48.611Z</updated>
    
    <content type="html"><![CDATA[<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>The Unreal official documentation has two simple examples to run Python throughcommandline, one being Commandlet: a headless mode without even opening the Editor,the other one being the Full Editor mode which has Unreal Editor fully opened and loaded.</p><p>Do you know there’s actually a “third” way?And today, I’ll discuss my experience and preferences of using all of them.</p><h2 id="commandlet"><a class="markdownIt-Anchor" href="#commandlet"></a> Commandlet</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UnrealEditor.exe &quot;C:\projects\MyProject.uproject&quot; -run=pythonscript -script=&quot;c:\\my_script.py&quot;</span><br></pre></td></tr></table></figure><p>The “Commandlet” mode runs Unreal in headless mode without editor opened,this means no asset and level loading (but we have access to the <code>unreal</code> python module).</p><p>This is great if we want to write to the project (for example, importing/creatingassets), but it’s not going to work well for reading from the project.</p><h2 id="full-editor"><a class="markdownIt-Anchor" href="#full-editor"></a> Full Editor</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UnrealEditor.exe &quot;C:\projects\MyProject.uproject&quot; -ExecutePythonScript=&quot;c:\my_script.py&quot;</span><br></pre></td></tr></table></figure><p>Using “Full Editor” mode, we now have everything loaded in engine and are able to doalmost all operations, the trade-off being there’sa longer loading time, and also the editor will be opened.</p><p>Note that at this point, once the python script finishes executing, the editorand the command prompt window will close automatically.</p><h3 id="ui"><a class="markdownIt-Anchor" href="#ui"></a> UI</h3><p>If we ever needs to create a simple UI that launches from the “Full Editor” mode,we could do something like this in the python script.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> unreal</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">global</span> app</span><br><span class="line">    <span class="keyword">global</span> window</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> QtWidgets.QApplication.instance():</span><br><span class="line">        app = QtWidgets.QApplication(sys.argv)</span><br><span class="line"></span><br><span class="line">    window = TestWindow()</span><br><span class="line">    unreal.parent_external_window_to_slate(</span><br><span class="line">        window.winId().__init__(),</span><br><span class="line">        unreal.SlateParentWindowSearchMethod.ACTIVE_WINDOW</span><br><span class="line">    )</span><br><span class="line">    window.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><p>Note that we are using <code>sys.exit(app.exec_())</code> to prevent the UI beingimmediately destroyed. This does mean the Qt event loop would take overthe main thread which renders Unreal editor non-interactable untilfunction calls hands over the process to Unreal.</p><p>However, I do find in rare cases(for example: when launching Movie Render Queue through commandline),either the UI still hangs the editor with the operation,or (without the UI) the editor just exit immediately after the operation is being called.Either of this will not let the render to finish.</p><p>This brings me to method number three that perfectly solves this issue.</p><h2 id="init-cmd"><a class="markdownIt-Anchor" href="#init-cmd"></a> Init Cmd</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UnrealEditor.exe &quot;C:\projects\MyProject.uproject&quot; -ExecCmds=&quot;py c:/my_script.py&quot;</span><br></pre></td></tr></table></figure><p>This method, although not present on Unreal Engine’s wiki, it is mentionedin the FAQ by the official Epic Games account on Linear Content Creation.</p><blockquote><p>For Automation/Testing we can pass the following to keep the editor running.</p><p>–ExecCmds=“py PathToPyFile”</p><p>Once we are done, we can call:unreal.SystemLibrary.execute_console_command(None,“QUIT_EDITOR”)</p></blockquote><p>This is almost like running a specified startup python script in Unreal,and the editor is fully interactable when the script is running.</p><p>The editor exit automatically when calling “QUIT_EDITOR”, if running a script with UI, we can hook upto the <code>closeEvent()</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">closeEvent</span>(<span class="params">self, event</span>):</span><br><span class="line">    QtWidgets.QMainWindow.closeEvent(event)</span><br><span class="line">    unreal.SystemLibrary.execute_console_command(<span class="literal">None</span>, <span class="string">&quot;QUIT_EDITOR&quot;</span>)</span><br></pre></td></tr></table></figure><p>to override <code>closeEvent()</code> in instance-level instead of class-level, see <a href="https://www.xingyulei.com/post/qt-template/#unreal-engine">here</a></p><h2 id="logging"><a class="markdownIt-Anchor" href="#logging"></a> Logging</h2><p>To generate output from the commandline we can add two arguments: <code>-stdout</code>and <code>-FullStdOutLogOutput</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">call</span>(<span class="params">python_script</span>):</span><br><span class="line">    command = [</span><br><span class="line">        UNREAL_EXE,</span><br><span class="line">        UPROJECT,</span><br><span class="line">        <span class="string">&quot;-ExecCmds=py &#123;&#125;&quot;</span>.<span class="built_in">format</span>(python_script),</span><br><span class="line">        <span class="string">&quot;-stdout&quot;</span>,</span><br><span class="line">        <span class="string">&quot;-FullStdOutLogOutput&quot;</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    proc = subprocess.Popen(</span><br><span class="line">        command,</span><br><span class="line">        stdout=subprocess.PIPE,</span><br><span class="line">        stderr=subprocess.PIPE,</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> proc.communicate()</span><br></pre></td></tr></table></figure><p>and we can filter out only the log generated from Python as such</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">output = call(<span class="string">&#x27;python_script.py&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> <span class="built_in">str</span>(output).split(<span class="string">r&#x27;\r\n&#x27;</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;LogPython&#x27;</span> <span class="keyword">in</span> line:</span><br><span class="line">        <span class="built_in">print</span>(line)</span><br></pre></td></tr></table></figure><h2 id="environment"><a class="markdownIt-Anchor" href="#environment"></a> Environment</h2><p>Another thing to consider is that, running in batch mode can mess up our tools and start up scripts.due to it being a different environment. We might want to re-configure our environmentwhich we can do like such:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">env = os.environ.copy()</span><br><span class="line">env[<span class="string">&#x27;FOO&#x27;</span>] = <span class="string">&#x27;BAR&#x27;</span></span><br><span class="line"><span class="comment"># more env ...</span></span><br><span class="line"></span><br><span class="line">proc = subprocess.Popen(</span><br><span class="line">        command,</span><br><span class="line">        stdout=subprocess.PIPE,</span><br><span class="line">        stderr=subprocess.PIPE,</span><br><span class="line">        env=env</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2><p><a href="https://docs.unrealengine.com/5.0/en-US/scripting-the-unreal-editor-using-python/">Unreal Doc - Scripting the Unreal Editor Using Python</a></p><p><a href="https://dev.epicgames.com/community/learning/courses/Oex/unreal-engine-technical-guide-to-linear-content-creation-faqs/XvO9/unreal-engine-common-questions">Unreal Forum - Unreal Engine Technical Guide to Linear Content Creation FAQs</a></p><p><a href="https://docs.adamrehn.com/ue4cli/descriptor-commands/run">Adamrehn Docs - UE4CLI</a></p>]]></content>
    
    
    <summary type="html">Unlock the power of Unreal Command Line with Python using our easy-to-follow tutorial. Learn three proven methods to automate tasks and enhance your Unreal Engine workflow with ease. Our step-by-step guide provides practical examples and best practices for leveraging the full potential of Python to simplify your development process. Whether you&#39;re a beginner or an advanced user, our tutorial will help you master the techniques needed to unlock the power of Unreal Command Line with Python.</summary>
    
    
    
    <category term="unreal" scheme="https://www.xingyulei.com/categories/unreal/"/>
    
    
    <category term="python" scheme="https://www.xingyulei.com/tags/python/"/>
    
    <category term="batch" scheme="https://www.xingyulei.com/tags/batch/"/>
    
  </entry>
  
</feed>
